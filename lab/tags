!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon2
ALT	kern/console.c	219;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
BCAST	kern/lapic.c	28;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	286;"	d	file:
CAPSLOCK	kern/console.c	221;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONSBUFSIZE	kern/console.c	385;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon3
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon3
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon3
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	218;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Command::desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
Command::func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
Command::name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
CpuInfo::cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env	access:public
CpuInfo::cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	access:public
CpuInfo::cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	access:public
CpuInfo::cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate	access:public
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f	access:public
E0ESC	kern/console.c	225;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon6
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon6
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon6
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon6
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon6
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon7
E_EOF	inc/error.h	/^	E_EOF		= 9,	\/\/ Unexpected end of file$/;"	e	enum:__anon7
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon7
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon7
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	= 8,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon7
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon7
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon7
E_NO_SYS	inc/error.h	/^	E_NO_SYS	= 7,	\/\/ Unimplemented system call$/;"	e	enum:__anon7
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon7
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Eipdebuginfo::eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
Elf	inc/elf.h	/^struct Elf {$/;"	s
Elf::e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
Elf::e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
Elf::e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
Elf::e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
Elf::e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
Elf::e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
Elf::e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
Elf::e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
Elf::e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
Elf::e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
Elf::e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
Elf::e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
Elf::e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
Elf::e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
Elf::e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
Env	inc/env.h	/^struct Env {$/;"	s
Env::env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	access:public
Env::env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
Env::env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	access:public
Env::env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	access:public
Env::env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	access:public
Env::env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	access:public
Env::env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	access:public
Env::env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
Env::env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
Env::env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
Env::env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	access:public
Env::env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
Env::env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
Env::env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
Env::env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c	inherits:object
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Gatedesc::gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_ERROR	kern/trapentry.S	/^#define IRQ_ERROR       19$/;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_IDE	kern/trapentry.S	/^#define IRQ_IDE         14$/;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_KBD	kern/trapentry.S	/^#define IRQ_KBD          1$/;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_OFFSET	kern/trapentry.S	/^#define IRQ_OFFSET	32	\/\/ IRQ 0 corresponds to int IRQ_OFFSET$/;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SERIAL	kern/trapentry.S	/^#define IRQ_SERIAL       4$/;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_SPURIOUS	kern/trapentry.S	/^#define IRQ_SPURIOUS     7$/;"	d
IRQ_TIMER	inc/trap.h	35;"	d
IRQ_TIMER	kern/trapentry.S	/^#define IRQ_TIMER        0$/;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	71;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon7
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	29;"	d	file:
NCPU	kern/cpu.h	11;"	d
NENV	inc/env.h	29;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	215;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon4
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	222;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	86;"	d
O_CREAT	inc/lib.h	88;"	d
O_EXCL	inc/lib.h	90;"	d
O_MKDIR	inc/lib.h	91;"	d
O_RDONLY	inc/lib.h	83;"	d
O_RDWR	inc/lib.h	85;"	d
O_TRUNC	inc/lib.h	89;"	d
O_WRONLY	inc/lib.h	84;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Oct 8 09:40:26 EDT 2014$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	76;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
PageInfo::pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
PageInfo::pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Proghdr::p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
Proghdr::p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
Proghdr::p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
Proghdr::p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
Proghdr::p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
Proghdr::p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
Pseudodesc::pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
PushRegs::reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c	inherits:object
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c	inherits:
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	223;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	217;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon4
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon4
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon4
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon4
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon4
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon4
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon4
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon4
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon4
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon4
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon4
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon4
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon4
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Secthdr::sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Segdesc::sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
Segdesc::sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
Segdesc::sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
Segdesc::sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
Segdesc::sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
Segdesc::sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stab::n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
Stab::n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
Stab::n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
Stab::n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
Stab::n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_ALIGN	kern/trapentry.S	/^#define T_ALIGN     17		\/\/ aligment check$/;"	d
T_BOUND	inc/trap.h	11;"	d
T_BOUND	kern/trapentry.S	/^#define T_BOUND      5		\/\/ bounds check$/;"	d
T_BRKPT	inc/trap.h	9;"	d
T_BRKPT	kern/trapentry.S	/^#define T_BRKPT      3		\/\/ breakpoint$/;"	d
T_COPROC	inc/trap.h	15;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DBLFLT	kern/trapentry.S	/^#define T_DBLFLT     8		\/\/ double fault$/;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEBUG	kern/trapentry.S	/^#define T_DEBUG      1		\/\/ debug exception$/;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEFAULT	kern/trapentry.S	/^#define T_DEFAULT   500		\/\/ catchall$/;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DEVICE	kern/trapentry.S	/^#define T_DEVICE     7		\/\/ device not available$/;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_DIVIDE	kern/trapentry.S	/^#define T_DIVIDE     0		\/\/ divide error$/;"	d
T_FPERR	inc/trap.h	22;"	d
T_FPERR	kern/trapentry.S	/^#define T_FPERR     16		\/\/ floating point error$/;"	d
T_GPFLT	inc/trap.h	19;"	d
T_GPFLT	kern/trapentry.S	/^#define T_GPFLT     13		\/\/ general protection fault$/;"	d
T_ILLOP	inc/trap.h	12;"	d
T_ILLOP	kern/trapentry.S	/^#define T_ILLOP      6		\/\/ illegal opcode$/;"	d
T_MCHK	inc/trap.h	24;"	d
T_MCHK	kern/trapentry.S	/^#define T_MCHK      18		\/\/ machine check$/;"	d
T_NMI	inc/trap.h	8;"	d
T_NMI	kern/trapentry.S	/^#define T_NMI        2		\/\/ non-maskable interrupt$/;"	d
T_OFLOW	inc/trap.h	10;"	d
T_OFLOW	kern/trapentry.S	/^#define T_OFLOW      4		\/\/ overflow$/;"	d
T_PGFLT	inc/trap.h	20;"	d
T_PGFLT	kern/trapentry.S	/^#define T_PGFLT     14		\/\/ page fault$/;"	d
T_RES	inc/trap.h	21;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SEGNP	kern/trapentry.S	/^#define T_SEGNP     11		\/\/ segment not present$/;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_SIMDERR	kern/trapentry.S	/^#define T_SIMDERR   19		\/\/ SIMD floating point error$/;"	d
T_STACK	inc/trap.h	18;"	d
T_STACK	kern/trapentry.S	/^#define T_STACK     12		\/\/ stack exception$/;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_SYSCALL	kern/trapentry.S	/^#define T_SYSCALL   48		\/\/ system call$/;"	d
T_TSS	inc/trap.h	16;"	d
T_TSS	kern/trapentry.S	/^#define T_TSS       10		\/\/ invalid task switch segment$/;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Taskstate::ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
Taskstate::ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
Taskstate::ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c	inherits:Exception
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
Trapframe::tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
Trapframe::tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
USED	inc/lib.h	21;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UTrapframe::utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs	access:public
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
UserStabData::stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
UserStabData::stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
UserStabData::stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:	access:public
UserStabData::stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:	access:public
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
WEBSUB	GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	70;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon1::buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon1	file:	access:public
__anon1::rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon1	file:	access:public
__anon1::wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon1	file:	access:public
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner	access:public
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU	access:public
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient	access:public
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:	access:private
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:	access:private
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:	access:private
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:	access:private
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f	signature:(struct spinlock *lk, char *name)
__spin_initlock	kern/spinlock.h	/^void __spin_initlock(struct spinlock *lk, char *name);$/;"	p	signature:(struct spinlock *lk, char *name)
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f	signature:(const char *file, int line, physaddr_t pa)
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f	signature:(const char *file, int line, void *kva)
_panic	inc/assert.h	/^void _panic(const char*, int, const char*, ...) __attribute__((noreturn));$/;"	p	signature:(const char*, int, const char*, ...)
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f	signature:(const char *file, int line, const char *fmt, ...)
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	lib/pgfault.c	/^extern void _pgfault_upcall(void);$/;"	p	file:	signature:(void)
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	user/faultnostack.c	/^void _pgfault_upcall();$/;"	p	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	inc/assert.h	/^void _warn(const char*, int, const char*, ...);$/;"	p	signature:(const char*, int, const char*, ...)
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:	access:public
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f	access:public
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f	access:public
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	access:public
backtrace	kern/trap.h	/^void backtrace(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^			base = 8;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:	signature:(uint32_t n)
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:	signature:(void)
boot_aps	kern/init.c	/^static void boot_aps(void);$/;"	p	file:	signature:(void)
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
boot_map_region	kern/pmap.c	/^static void boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f	signature:(void)
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient	access:public
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	signature:(void)
breakpoint	inc/x86.h	/^static __inline void breakpoint(void) __attribute__((always_inline));$/;"	p	signature:(void)
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon1	file:	access:public
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f	access:public
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:	signature:(void)
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:	signature:(int c)
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:	signature:(void)
check_kern_pgdir	kern/pmap.c	/^static void check_kern_pgdir(void);$/;"	p	file:	signature:(void)
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:	signature:(void)
check_page	kern/pmap.c	/^static void check_page(void);$/;"	p	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^static void check_page_alloc(void);$/;"	p	file:	signature:(void)
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:	signature:(bool only_low_memory)
check_page_free_list	kern/pmap.c	/^static void check_page_free_list(bool only_low_memory);$/;"	p	file:	signature:(bool only_low_memory)
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:	signature:(void)
check_page_installed_pgdir	kern/pmap.c	/^static void check_page_installed_pgdir(void);$/;"	p	file:	signature:(void)
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:	signature:(struct regs* a, const char *an, struct regs* b, const char *bn, const char *testname)
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va)
check_va2pa	kern/pmap.c	/^static physaddr_t check_va2pa(pde_t *pgdir, uintptr_t va);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va)
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:	access:public
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:	access:public
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient	access:public
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:	access:public
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f	access:public
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon1	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	signature:(void)
cons_getc	kern/console.h	/^int cons_getc(void);$/;"	p	signature:(void)
cons_init	kern/console.c	/^cons_init(void)$/;"	f	signature:(void)
cons_init	kern/console.h	/^void cons_init(void);$/;"	p	signature:(void)
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:	signature:(int (*proc)(void))
cons_intr	kern/console.c	/^static void cons_intr(int (*proc)(void));$/;"	p	file:	signature:(int (*proc)(void))
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:	signature:(int c)
cons_putc	kern/console.c	/^static void cons_putc(int c);$/;"	p	file:	signature:(int c)
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient	access:public
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	inc/stdio.h	/^int	cprintf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo	access:public
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env	access:public
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	access:public
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	access:public
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate	access:public
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpuid	inc/x86.h	/^static __inline void cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp);$/;"	p	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpunum	kern/cpu.h	/^int cpunum(void);$/;"	p	signature:(void)
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f	signature:(void)
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	inc/stdio.h	/^void	cputchar(int c);$/;"	p	signature:(int c)
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	signature:(int c)
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f	signature:(int ch)
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	signature:(uintptr_t addr, struct Eipdebuginfo *info)
debuginfo_eip	kern/kdebug.h	/^int debuginfo_eip(uintptr_t eip, struct Eipdebuginfo *info);$/;"	p	signature:(uintptr_t eip, struct Eipdebuginfo *info)
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:	signature:(void)
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f	signature:(void)
dumbfork	user/dumbfork.c	/^envid_t dumbfork(void);$/;"	p	file:	signature:(void)
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:	signature:(envid_t envid, unsigned pn)
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f	signature:(envid_t dstenv, void *addr)
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
e_s	obj/kern/kernel.asm	/^	e_s = env_alloc(&e, 0);$/;"	d
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:	access:public
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:	access:public
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f	access:public
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:	access:public
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:	access:public
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f	signature:(struct Env **newenv_store, envid_t parent_id)
env_alloc	kern/env.h	/^int	env_alloc(struct Env **e, envid_t parent_id);$/;"	p	signature:(struct Env **e, envid_t parent_id)
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	access:public
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f	signature:(uint8_t *binary, enum EnvType type)
env_create	kern/env.h	/^void	env_create(uint8_t *binary, enum EnvType type);$/;"	p	signature:(uint8_t *binary, enum EnvType type)
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f	signature:(struct Env *e)
env_destroy	kern/env.h	/^void	env_destroy(struct Env *e);	\/\/ Does not return if e == curenv$/;"	p	signature:(struct Env *e)
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f	signature:(struct Env *e)
env_free	kern/env.h	/^void	env_free(struct Env *e);$/;"	p	signature:(struct Env *e)
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
env_init	kern/env.c	/^env_init(void)$/;"	f	signature:(void)
env_init	kern/env.h	/^void	env_init(void);$/;"	p	signature:(void)
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f	signature:(void)
env_init_percpu	kern/env.h	/^void	env_init_percpu(void);$/;"	p	signature:(void)
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	access:public
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	access:public
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	access:public
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	access:public
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	access:public
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	access:public
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
env_pop_tf	kern/env.h	/^void	env_pop_tf(struct Trapframe *tf) __attribute__((noreturn));$/;"	p	signature:(struct Trapframe *tf)
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f	signature:(struct Env *e)
env_run	kern/env.h	/^void	env_run(struct Env *e) __attribute__((noreturn));$/;"	p	signature:(struct Env *e)
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:	signature:(struct Env *e)
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid2env	kern/env.h	/^int	envid2env(envid_t envid, struct Env **env_store, bool checkperm);$/;"	p	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env *)boot_alloc( sizeof(struct Env) * NENV);$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = p_hdr + elf_hdr->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:	access:public
exit	inc/lib.h	/^void	exit(void);$/;"	p	signature:(void)
exit	lib/exit.c	/^exit(void)$/;"	f	signature:(void)
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 c0 11 00       	mov    $0x11c000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 c0 11 f0       	mov    $0xf011c000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 6a 00 00 00       	call   f01000a8 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	83 3d 00 9f 22 f0 00 	cmpl   $0x0,0xf0229f00$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	75 46                	jne    f010009a <_panic+0x5a>$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 35 00 9f 22 f0    	mov    %esi,0xf0229f00$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	fa                   	cli    $/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	fc                   	cld    $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 25 4d 00 00       	call   f0104d89 <cpunum>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	c7 04 24 60 54 10 f0 	movl   $0xf0105460,(%esp)$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	e8 12 32 00 00       	call   f0103294 <cprintf>$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	e8 d3 31 00 00       	call   f0103261 <vcprintf>$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	c7 04 24 2d 55 10 f0 	movl   $0xf010552d,(%esp)$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	e8 fa 31 00 00       	call   f0103294 <cprintf>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 13 08 00 00       	call   f01008b9 <monitor>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	eb f2                	jmp    f010009a <_panic+0x5a>$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8 <i386_init>:$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	55                   	push   %ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	53                   	push   %ebx$/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01000af	obj/kern/kernel.asm	/^f01000af:	b8 08 b0 26 f0       	mov    $0xf026b008,%eax$/;"	l
f01000b4	obj/kern/kernel.asm	/^f01000b4:	2d 27 8c 22 f0       	sub    $0xf0228c27,%eax$/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01000c4	obj/kern/kernel.asm	/^f01000c4:	00 $/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	c7 04 24 27 8c 22 f0 	movl   $0xf0228c27,(%esp)$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	e8 66 46 00 00       	call   f0104737 <memset>$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	e8 89 05 00 00       	call   f010065f <cons_init>$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f01000dd	obj/kern/kernel.asm	/^f01000dd:	00 $/;"	l
f01000de	obj/kern/kernel.asm	/^f01000de:	c7 04 24 cc 54 10 f0 	movl   $0xf01054cc,(%esp)$/;"	l
f01000e5	obj/kern/kernel.asm	/^f01000e5:	e8 aa 31 00 00       	call   f0103294 <cprintf>$/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	e8 09 0f 00 00       	call   f0100ff8 <mem_init>$/;"	l
f01000ef	obj/kern/kernel.asm	/^f01000ef:	e8 ea 28 00 00       	call   f01029de <env_init>$/;"	l
f01000f4	obj/kern/kernel.asm	/^f01000f4:	e8 12 32 00 00       	call   f010330b <trap_init>$/;"	l
f01000f9	obj/kern/kernel.asm	/^f01000f9:	e8 7c 49 00 00       	call   f0104a7a <mp_init>$/;"	l
f01000fe	obj/kern/kernel.asm	/^f01000fe:	66 90                	xchg   %ax,%ax$/;"	l
f0100100	obj/kern/kernel.asm	/^f0100100:	e8 9f 4c 00 00       	call   f0104da4 <lapic_init>$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105:	e8 ba 30 00 00       	call   f01031c4 <pic_init>$/;"	l
f010010a	obj/kern/kernel.asm	/^f010010a:	83 3d 08 9f 22 f0 07 	cmpl   $0x7,0xf0229f08$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	77 24                	ja     f0100137 <i386_init+0x8f>$/;"	l
f0100113	obj/kern/kernel.asm	/^f0100113:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f010011a	obj/kern/kernel.asm	/^f010011a:	00 $/;"	l
f010011b	obj/kern/kernel.asm	/^f010011b:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f0100122	obj/kern/kernel.asm	/^f0100122:	f0 $/;"	l
f0100123	obj/kern/kernel.asm	/^f0100123:	c7 44 24 04 5a 00 00 	movl   $0x5a,0x4(%esp)$/;"	l
f010012a	obj/kern/kernel.asm	/^f010012a:	00 $/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	c7 04 24 e7 54 10 f0 	movl   $0xf01054e7,(%esp)$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	e8 09 ff ff ff       	call   f0100040 <_panic>$/;"	l
f0100137	obj/kern/kernel.asm	/^f0100137:	b8 b2 49 10 f0       	mov    $0xf01049b2,%eax$/;"	l
f010013c	obj/kern/kernel.asm	/^f010013c:	2d 38 49 10 f0       	sub    $0xf0104938,%eax$/;"	l
f0100141	obj/kern/kernel.asm	/^f0100141:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100145	obj/kern/kernel.asm	/^f0100145:	c7 44 24 04 38 49 10 	movl   $0xf0104938,0x4(%esp)$/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	f0 $/;"	l
f010014d	obj/kern/kernel.asm	/^f010014d:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f0100154	obj/kern/kernel.asm	/^f0100154:	e8 2b 46 00 00       	call   f0104784 <memmove>$/;"	l
f0100159	obj/kern/kernel.asm	/^f0100159:	bb 20 a0 22 f0       	mov    $0xf022a020,%ebx$/;"	l
f010015e	obj/kern/kernel.asm	/^f010015e:	eb 4d                	jmp    f01001ad <i386_init+0x105>$/;"	l
f0100160	obj/kern/kernel.asm	/^f0100160:	e8 24 4c 00 00       	call   f0104d89 <cpunum>$/;"	l
f0100165	obj/kern/kernel.asm	/^f0100165:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100168	obj/kern/kernel.asm	/^f0100168:	05 20 a0 22 f0       	add    $0xf022a020,%eax$/;"	l
f010016d	obj/kern/kernel.asm	/^f010016d:	39 c3                	cmp    %eax,%ebx$/;"	l
f010016f	obj/kern/kernel.asm	/^f010016f:	74 39                	je     f01001aa <i386_init+0x102>$/;"	l
f0100171	obj/kern/kernel.asm	/^f0100171:	89 d8                	mov    %ebx,%eax$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	2d 20 a0 22 f0       	sub    $0xf022a020,%eax$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010017b	obj/kern/kernel.asm	/^f010017b:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f0100181	obj/kern/kernel.asm	/^f0100181:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100184	obj/kern/kernel.asm	/^f0100184:	8d 80 00 30 23 f0    	lea    -0xfdcd000(%eax),%eax$/;"	l
f010018a	obj/kern/kernel.asm	/^f010018a:	a3 04 9f 22 f0       	mov    %eax,0xf0229f04$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f0100196	obj/kern/kernel.asm	/^f0100196:	00 $/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010019a	obj/kern/kernel.asm	/^f010019a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010019d	obj/kern/kernel.asm	/^f010019d:	e8 52 4d 00 00       	call   f0104ef4 <lapic_startap>$/;"	l
f01001a2	obj/kern/kernel.asm	/^f01001a2:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01001a5	obj/kern/kernel.asm	/^f01001a5:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01001a8	obj/kern/kernel.asm	/^f01001a8:	75 f8                	jne    f01001a2 <i386_init+0xfa>$/;"	l
f01001aa	obj/kern/kernel.asm	/^f01001aa:	83 c3 74             	add    $0x74,%ebx$/;"	l
f01001ad	obj/kern/kernel.asm	/^f01001ad:	6b 05 c4 a3 22 f0 74 	imul   $0x74,0xf022a3c4,%eax$/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	05 20 a0 22 f0       	add    $0xf022a020,%eax$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	39 c3                	cmp    %eax,%ebx$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	72 a3                	jb     f0100160 <i386_init+0xb8>$/;"	l
f01001bd	obj/kern/kernel.asm	/^f01001bd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01001c4	obj/kern/kernel.asm	/^f01001c4:	00 $/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5:	c7 04 24 1a 02 22 f0 	movl   $0xf022021a,(%esp)$/;"	l
f01001cc	obj/kern/kernel.asm	/^f01001cc:	e8 23 2a 00 00       	call   f0102bf4 <env_create>$/;"	l
f01001d1	obj/kern/kernel.asm	/^f01001d1:	e8 4b 38 00 00       	call   f0103a21 <sched_yield>$/;"	l
f01001d6	obj/kern/kernel.asm	/^f01001d6 <mp_main>:$/;"	l
f01001d6	obj/kern/kernel.asm	/^f01001d6:	55                   	push   %ebp$/;"	l
f01001d7	obj/kern/kernel.asm	/^f01001d7:	89 e5                	mov    %esp,%ebp$/;"	l
f01001d9	obj/kern/kernel.asm	/^f01001d9:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01001dc	obj/kern/kernel.asm	/^f01001dc:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f01001e1	obj/kern/kernel.asm	/^f01001e1:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01001e6	obj/kern/kernel.asm	/^f01001e6:	77 20                	ja     f0100208 <mp_main+0x32>$/;"	l
f01001e8	obj/kern/kernel.asm	/^f01001e8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01001ec	obj/kern/kernel.asm	/^f01001ec:	c7 44 24 08 a8 54 10 	movl   $0xf01054a8,0x8(%esp)$/;"	l
f01001f3	obj/kern/kernel.asm	/^f01001f3:	f0 $/;"	l
f01001f4	obj/kern/kernel.asm	/^f01001f4:	c7 44 24 04 71 00 00 	movl   $0x71,0x4(%esp)$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	00 $/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	c7 04 24 e7 54 10 f0 	movl   $0xf01054e7,(%esp)$/;"	l
f0100203	obj/kern/kernel.asm	/^f0100203:	e8 38 fe ff ff       	call   f0100040 <_panic>$/;"	l
f0100208	obj/kern/kernel.asm	/^f0100208:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	e8 74 4b 00 00       	call   f0104d89 <cpunum>$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100219	obj/kern/kernel.asm	/^f0100219:	c7 04 24 f3 54 10 f0 	movl   $0xf01054f3,(%esp)$/;"	l
f0100220	obj/kern/kernel.asm	/^f0100220:	e8 6f 30 00 00       	call   f0103294 <cprintf>$/;"	l
f0100225	obj/kern/kernel.asm	/^f0100225:	e8 7a 4b 00 00       	call   f0104da4 <lapic_init>$/;"	l
f010022a	obj/kern/kernel.asm	/^f010022a:	e8 85 27 00 00       	call   f01029b4 <env_init_percpu>$/;"	l
f010022f	obj/kern/kernel.asm	/^f010022f:	90                   	nop$/;"	l
f0100230	obj/kern/kernel.asm	/^f0100230:	e8 79 30 00 00       	call   f01032ae <trap_init_percpu>$/;"	l
f0100235	obj/kern/kernel.asm	/^f0100235:	e8 4f 4b 00 00       	call   f0104d89 <cpunum>$/;"	l
f010023a	obj/kern/kernel.asm	/^f010023a:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	81 c2 20 a0 22 f0    	add    $0xf022a020,%edx$/;"	l
f0100243	obj/kern/kernel.asm	/^f0100243:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100248	obj/kern/kernel.asm	/^f0100248:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	eb fe                	jmp    f010024c <mp_main+0x76>$/;"	l
f010024e	obj/kern/kernel.asm	/^f010024e <_warn>:$/;"	l
f010024e	obj/kern/kernel.asm	/^f010024e:	55                   	push   %ebp$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	53                   	push   %ebx$/;"	l
f0100252	obj/kern/kernel.asm	/^f0100252:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100255	obj/kern/kernel.asm	/^f0100255:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100258	obj/kern/kernel.asm	/^f0100258:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010025b	obj/kern/kernel.asm	/^f010025b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010025f	obj/kern/kernel.asm	/^f010025f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100266	obj/kern/kernel.asm	/^f0100266:	c7 04 24 09 55 10 f0 	movl   $0xf0105509,(%esp)$/;"	l
f010026d	obj/kern/kernel.asm	/^f010026d:	e8 22 30 00 00       	call   f0103294 <cprintf>$/;"	l
f0100272	obj/kern/kernel.asm	/^f0100272:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100276	obj/kern/kernel.asm	/^f0100276:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100279	obj/kern/kernel.asm	/^f0100279:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010027c	obj/kern/kernel.asm	/^f010027c:	e8 e0 2f 00 00       	call   f0103261 <vcprintf>$/;"	l
f0100281	obj/kern/kernel.asm	/^f0100281:	c7 04 24 2d 55 10 f0 	movl   $0xf010552d,(%esp)$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	e8 07 30 00 00       	call   f0103294 <cprintf>$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100290	obj/kern/kernel.asm	/^f0100290:	5b                   	pop    %ebx$/;"	l
f0100291	obj/kern/kernel.asm	/^f0100291:	5d                   	pop    %ebp$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	c3                   	ret    $/;"	l
f0100293	obj/kern/kernel.asm	/^f0100293:	66 90                	xchg   %ax,%ax$/;"	l
f0100295	obj/kern/kernel.asm	/^f0100295:	66 90                	xchg   %ax,%ax$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	66 90                	xchg   %ax,%ax$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	66 90                	xchg   %ax,%ax$/;"	l
f010029b	obj/kern/kernel.asm	/^f010029b:	66 90                	xchg   %ax,%ax$/;"	l
f010029d	obj/kern/kernel.asm	/^f010029d:	66 90                	xchg   %ax,%ax$/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	90                   	nop$/;"	l
f01002a0	obj/kern/kernel.asm	/^f01002a0 <serial_proc_data>:$/;"	l
f01002a0	obj/kern/kernel.asm	/^f01002a0:	55                   	push   %ebp$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01002a3	obj/kern/kernel.asm	/^f01002a3:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01002a8	obj/kern/kernel.asm	/^f01002a8:	ec                   	in     (%dx),%al$/;"	l
f01002a9	obj/kern/kernel.asm	/^f01002a9:	a8 01                	test   $0x1,%al$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	74 08                	je     f01002b5 <serial_proc_data+0x15>$/;"	l
f01002ad	obj/kern/kernel.asm	/^f01002ad:	b2 f8                	mov    $0xf8,%dl$/;"	l
f01002af	obj/kern/kernel.asm	/^f01002af:	ec                   	in     (%dx),%al$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01002b3	obj/kern/kernel.asm	/^f01002b3:	eb 05                	jmp    f01002ba <serial_proc_data+0x1a>$/;"	l
f01002b5	obj/kern/kernel.asm	/^f01002b5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01002ba	obj/kern/kernel.asm	/^f01002ba:	5d                   	pop    %ebp$/;"	l
f01002bb	obj/kern/kernel.asm	/^f01002bb:	c3                   	ret    $/;"	l
f01002bc	obj/kern/kernel.asm	/^f01002bc <cons_intr>:$/;"	l
f01002bc	obj/kern/kernel.asm	/^f01002bc:	55                   	push   %ebp$/;"	l
f01002bd	obj/kern/kernel.asm	/^f01002bd:	89 e5                	mov    %esp,%ebp$/;"	l
f01002bf	obj/kern/kernel.asm	/^f01002bf:	53                   	push   %ebx$/;"	l
f01002c0	obj/kern/kernel.asm	/^f01002c0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	89 c3                	mov    %eax,%ebx$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	eb 2a                	jmp    f01002f1 <cons_intr+0x35>$/;"	l
f01002c7	obj/kern/kernel.asm	/^f01002c7:	85 d2                	test   %edx,%edx$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	74 26                	je     f01002f1 <cons_intr+0x35>$/;"	l
f01002cb	obj/kern/kernel.asm	/^f01002cb:	a1 24 92 22 f0       	mov    0xf0229224,%eax$/;"	l
f01002d0	obj/kern/kernel.asm	/^f01002d0:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	89 0d 24 92 22 f0    	mov    %ecx,0xf0229224$/;"	l
f01002d9	obj/kern/kernel.asm	/^f01002d9:	88 90 20 90 22 f0    	mov    %dl,-0xfdd6fe0(%eax)$/;"	l
f01002df	obj/kern/kernel.asm	/^f01002df:	81 f9 00 02 00 00    	cmp    $0x200,%ecx$/;"	l
f01002e5	obj/kern/kernel.asm	/^f01002e5:	75 0a                	jne    f01002f1 <cons_intr+0x35>$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	c7 05 24 92 22 f0 00 	movl   $0x0,0xf0229224$/;"	l
f01002ee	obj/kern/kernel.asm	/^f01002ee:	00 00 00 $/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1:	ff d3                	call   *%ebx$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	89 c2                	mov    %eax,%edx$/;"	l
f01002f5	obj/kern/kernel.asm	/^f01002f5:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	75 cd                	jne    f01002c7 <cons_intr+0xb>$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	83 c4 04             	add    $0x4,%esp$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	5b                   	pop    %ebx$/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe:	5d                   	pop    %ebp$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	c3                   	ret    $/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300 <kbd_proc_data>:$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	ec                   	in     (%dx),%al$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	a8 01                	test   $0x1,%al$/;"	l
f0100308	obj/kern/kernel.asm	/^f0100308:	0f 84 ef 00 00 00    	je     f01003fd <kbd_proc_data+0xfd>$/;"	l
f010030e	obj/kern/kernel.asm	/^f010030e:	b2 60                	mov    $0x60,%dl$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	ec                   	in     (%dx),%al$/;"	l
f0100311	obj/kern/kernel.asm	/^f0100311:	89 c2                	mov    %eax,%edx$/;"	l
f0100313	obj/kern/kernel.asm	/^f0100313:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100315	obj/kern/kernel.asm	/^f0100315:	75 0d                	jne    f0100324 <kbd_proc_data+0x24>$/;"	l
f0100317	obj/kern/kernel.asm	/^f0100317:	83 0d 00 90 22 f0 40 	orl    $0x40,0xf0229000$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	c3                   	ret    $/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324:	55                   	push   %ebp$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	89 e5                	mov    %esp,%ebp$/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	53                   	push   %ebx$/;"	l
f0100328	obj/kern/kernel.asm	/^f0100328:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010032b	obj/kern/kernel.asm	/^f010032b:	84 c0                	test   %al,%al$/;"	l
f010032d	obj/kern/kernel.asm	/^f010032d:	79 37                	jns    f0100366 <kbd_proc_data+0x66>$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	8b 0d 00 90 22 f0    	mov    0xf0229000,%ecx$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100337	obj/kern/kernel.asm	/^f0100337:	83 e3 40             	and    $0x40,%ebx$/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	85 db                	test   %ebx,%ebx$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	0f b6 82 80 56 10 f0 	movzbl -0xfefa980(%edx),%eax$/;"	l
f010034c	obj/kern/kernel.asm	/^f010034c:	83 c8 40             	or     $0x40,%eax$/;"	l
f010034f	obj/kern/kernel.asm	/^f010034f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100352	obj/kern/kernel.asm	/^f0100352:	f7 d0                	not    %eax$/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	21 c1                	and    %eax,%ecx$/;"	l
f0100356	obj/kern/kernel.asm	/^f0100356:	89 0d 00 90 22 f0    	mov    %ecx,0xf0229000$/;"	l
f010035c	obj/kern/kernel.asm	/^f010035c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100361	obj/kern/kernel.asm	/^f0100361:	e9 9d 00 00 00       	jmp    f0100403 <kbd_proc_data+0x103>$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	8b 0d 00 90 22 f0    	mov    0xf0229000,%ecx$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	f6 c1 40             	test   $0x40,%cl$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	74 0e                	je     f010037f <kbd_proc_data+0x7f>$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100374	obj/kern/kernel.asm	/^f0100374:	89 c2                	mov    %eax,%edx$/;"	l
f0100376	obj/kern/kernel.asm	/^f0100376:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f0100379	obj/kern/kernel.asm	/^f0100379:	89 0d 00 90 22 f0    	mov    %ecx,0xf0229000$/;"	l
f010037f	obj/kern/kernel.asm	/^f010037f:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100382	obj/kern/kernel.asm	/^f0100382:	0f b6 82 80 56 10 f0 	movzbl -0xfefa980(%edx),%eax$/;"	l
f0100389	obj/kern/kernel.asm	/^f0100389:	0b 05 00 90 22 f0    	or     0xf0229000,%eax$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	0f b6 8a 80 55 10 f0 	movzbl -0xfefaa80(%edx),%ecx$/;"	l
f0100396	obj/kern/kernel.asm	/^f0100396:	31 c8                	xor    %ecx,%eax$/;"	l
f0100398	obj/kern/kernel.asm	/^f0100398:	a3 00 90 22 f0       	mov    %eax,0xf0229000$/;"	l
f010039d	obj/kern/kernel.asm	/^f010039d:	89 c1                	mov    %eax,%ecx$/;"	l
f010039f	obj/kern/kernel.asm	/^f010039f:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	8b 0c 8d 60 55 10 f0 	mov    -0xfefaaa0(,%ecx,4),%ecx$/;"	l
f01003a9	obj/kern/kernel.asm	/^f01003a9:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f01003ad	obj/kern/kernel.asm	/^f01003ad:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f01003b0	obj/kern/kernel.asm	/^f01003b0:	a8 08                	test   $0x8,%al$/;"	l
f01003b2	obj/kern/kernel.asm	/^f01003b2:	74 1b                	je     f01003cf <kbd_proc_data+0xcf>$/;"	l
f01003b4	obj/kern/kernel.asm	/^f01003b4:	89 da                	mov    %ebx,%edx$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	77 05                	ja     f01003c3 <kbd_proc_data+0xc3>$/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f01003c1	obj/kern/kernel.asm	/^f01003c1:	eb 0c                	jmp    f01003cf <kbd_proc_data+0xcf>$/;"	l
f01003c3	obj/kern/kernel.asm	/^f01003c3:	83 ea 41             	sub    $0x41,%edx$/;"	l
f01003c6	obj/kern/kernel.asm	/^f01003c6:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	f7 d0                	not    %eax$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	89 c2                	mov    %eax,%edx$/;"	l
f01003d3	obj/kern/kernel.asm	/^f01003d3:	89 d8                	mov    %ebx,%eax$/;"	l
f01003d5	obj/kern/kernel.asm	/^f01003d5:	f6 c2 06             	test   $0x6,%dl$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	75 29                	jne    f0100403 <kbd_proc_data+0x103>$/;"	l
f01003da	obj/kern/kernel.asm	/^f01003da:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f01003e0	obj/kern/kernel.asm	/^f01003e0:	75 21                	jne    f0100403 <kbd_proc_data+0x103>$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	c7 04 24 23 55 10 f0 	movl   $0xf0105523,(%esp)$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	e8 a6 2e 00 00       	call   f0103294 <cprintf>$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01003f3	obj/kern/kernel.asm	/^f01003f3:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01003f8	obj/kern/kernel.asm	/^f01003f8:	ee                   	out    %al,(%dx)$/;"	l
f01003f9	obj/kern/kernel.asm	/^f01003f9:	89 d8                	mov    %ebx,%eax$/;"	l
f01003fb	obj/kern/kernel.asm	/^f01003fb:	eb 06                	jmp    f0100403 <kbd_proc_data+0x103>$/;"	l
f01003fd	obj/kern/kernel.asm	/^f01003fd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100402	obj/kern/kernel.asm	/^f0100402:	c3                   	ret    $/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	5b                   	pop    %ebx$/;"	l
f0100407	obj/kern/kernel.asm	/^f0100407:	5d                   	pop    %ebp$/;"	l
f0100408	obj/kern/kernel.asm	/^f0100408:	c3                   	ret    $/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409 <cons_putc>:$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	55                   	push   %ebp$/;"	l
f010040a	obj/kern/kernel.asm	/^f010040a:	89 e5                	mov    %esp,%ebp$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	57                   	push   %edi$/;"	l
f010040d	obj/kern/kernel.asm	/^f010040d:	56                   	push   %esi$/;"	l
f010040e	obj/kern/kernel.asm	/^f010040e:	53                   	push   %ebx$/;"	l
f010040f	obj/kern/kernel.asm	/^f010040f:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	89 c7                	mov    %eax,%edi$/;"	l
f0100414	obj/kern/kernel.asm	/^f0100414:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100423	obj/kern/kernel.asm	/^f0100423:	eb 06                	jmp    f010042b <cons_putc+0x22>$/;"	l
f0100425	obj/kern/kernel.asm	/^f0100425:	89 ca                	mov    %ecx,%edx$/;"	l
f0100427	obj/kern/kernel.asm	/^f0100427:	ec                   	in     (%dx),%al$/;"	l
f0100428	obj/kern/kernel.asm	/^f0100428:	ec                   	in     (%dx),%al$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	ec                   	in     (%dx),%al$/;"	l
f010042a	obj/kern/kernel.asm	/^f010042a:	ec                   	in     (%dx),%al$/;"	l
f010042b	obj/kern/kernel.asm	/^f010042b:	89 f2                	mov    %esi,%edx$/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	ec                   	in     (%dx),%al$/;"	l
f010042e	obj/kern/kernel.asm	/^f010042e:	a8 20                	test   $0x20,%al$/;"	l
f0100430	obj/kern/kernel.asm	/^f0100430:	75 05                	jne    f0100437 <cons_putc+0x2e>$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100435	obj/kern/kernel.asm	/^f0100435:	75 ee                	jne    f0100425 <cons_putc+0x1c>$/;"	l
f0100437	obj/kern/kernel.asm	/^f0100437:	89 f8                	mov    %edi,%eax$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010043c	obj/kern/kernel.asm	/^f010043c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100444	obj/kern/kernel.asm	/^f0100444:	ee                   	out    %al,(%dx)$/;"	l
f0100445	obj/kern/kernel.asm	/^f0100445:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454:	eb 06                	jmp    f010045c <cons_putc+0x53>$/;"	l
f0100456	obj/kern/kernel.asm	/^f0100456:	89 ca                	mov    %ecx,%edx$/;"	l
f0100458	obj/kern/kernel.asm	/^f0100458:	ec                   	in     (%dx),%al$/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	ec                   	in     (%dx),%al$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	ec                   	in     (%dx),%al$/;"	l
f010045b	obj/kern/kernel.asm	/^f010045b:	ec                   	in     (%dx),%al$/;"	l
f010045c	obj/kern/kernel.asm	/^f010045c:	89 f2                	mov    %esi,%edx$/;"	l
f010045e	obj/kern/kernel.asm	/^f010045e:	ec                   	in     (%dx),%al$/;"	l
f010045f	obj/kern/kernel.asm	/^f010045f:	84 c0                	test   %al,%al$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	78 05                	js     f0100468 <cons_putc+0x5f>$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100466	obj/kern/kernel.asm	/^f0100466:	75 ee                	jne    f0100456 <cons_putc+0x4d>$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	ee                   	out    %al,(%dx)$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	b2 7a                	mov    $0x7a,%dl$/;"	l
f0100474	obj/kern/kernel.asm	/^f0100474:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	ee                   	out    %al,(%dx)$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	ee                   	out    %al,(%dx)$/;"	l
f0100480	obj/kern/kernel.asm	/^f0100480:	89 fa                	mov    %edi,%edx$/;"	l
f0100482	obj/kern/kernel.asm	/^f0100482:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f0100488	obj/kern/kernel.asm	/^f0100488:	89 f8                	mov    %edi,%eax$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	80 cc 07             	or     $0x7,%ah$/;"	l
f010048d	obj/kern/kernel.asm	/^f010048d:	85 d2                	test   %edx,%edx$/;"	l
f010048f	obj/kern/kernel.asm	/^f010048f:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	89 f8                	mov    %edi,%eax$/;"	l
f0100494	obj/kern/kernel.asm	/^f0100494:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a:	74 76                	je     f0100512 <cons_putc+0x109>$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010049f	obj/kern/kernel.asm	/^f010049f:	7f 0a                	jg     f01004ab <cons_putc+0xa2>$/;"	l
f01004a1	obj/kern/kernel.asm	/^f01004a1:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4:	74 16                	je     f01004bc <cons_putc+0xb3>$/;"	l
f01004a6	obj/kern/kernel.asm	/^f01004a6:	e9 9b 00 00 00       	jmp    f0100546 <cons_putc+0x13d>$/;"	l
f01004ab	obj/kern/kernel.asm	/^f01004ab:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01004ae	obj/kern/kernel.asm	/^f01004ae:	66 90                	xchg   %ax,%ax$/;"	l
f01004b0	obj/kern/kernel.asm	/^f01004b0:	74 3a                	je     f01004ec <cons_putc+0xe3>$/;"	l
f01004b2	obj/kern/kernel.asm	/^f01004b2:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f01004b5	obj/kern/kernel.asm	/^f01004b5:	74 3d                	je     f01004f4 <cons_putc+0xeb>$/;"	l
f01004b7	obj/kern/kernel.asm	/^f01004b7:	e9 8a 00 00 00       	jmp    f0100546 <cons_putc+0x13d>$/;"	l
f01004bc	obj/kern/kernel.asm	/^f01004bc:	0f b7 05 28 92 22 f0 	movzwl 0xf0229228,%eax$/;"	l
f01004c3	obj/kern/kernel.asm	/^f01004c3:	66 85 c0             	test   %ax,%ax$/;"	l
f01004c6	obj/kern/kernel.asm	/^f01004c6:	0f 84 e5 00 00 00    	je     f01005b1 <cons_putc+0x1a8>$/;"	l
f01004cc	obj/kern/kernel.asm	/^f01004cc:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01004cf	obj/kern/kernel.asm	/^f01004cf:	66 a3 28 92 22 f0    	mov    %ax,0xf0229228$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01004d8	obj/kern/kernel.asm	/^f01004d8:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f01004dd	obj/kern/kernel.asm	/^f01004dd:	83 cf 20             	or     $0x20,%edi$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	8b 15 2c 92 22 f0    	mov    0xf022922c,%edx$/;"	l
f01004e6	obj/kern/kernel.asm	/^f01004e6:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	eb 78                	jmp    f0100564 <cons_putc+0x15b>$/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	66 83 05 28 92 22 f0 	addw   $0x50,0xf0229228$/;"	l
f01004f3	obj/kern/kernel.asm	/^f01004f3:	50 $/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	0f b7 05 28 92 22 f0 	movzwl 0xf0229228,%eax$/;"	l
f01004fb	obj/kern/kernel.asm	/^f01004fb:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f0100501	obj/kern/kernel.asm	/^f0100501:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100507	obj/kern/kernel.asm	/^f0100507:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	66 a3 28 92 22 f0    	mov    %ax,0xf0229228$/;"	l
f0100510	obj/kern/kernel.asm	/^f0100510:	eb 52                	jmp    f0100564 <cons_putc+0x15b>$/;"	l
f0100512	obj/kern/kernel.asm	/^f0100512:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100517	obj/kern/kernel.asm	/^f0100517:	e8 ed fe ff ff       	call   f0100409 <cons_putc>$/;"	l
f010051c	obj/kern/kernel.asm	/^f010051c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100521	obj/kern/kernel.asm	/^f0100521:	e8 e3 fe ff ff       	call   f0100409 <cons_putc>$/;"	l
f0100526	obj/kern/kernel.asm	/^f0100526:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010052b	obj/kern/kernel.asm	/^f010052b:	e8 d9 fe ff ff       	call   f0100409 <cons_putc>$/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	e8 cf fe ff ff       	call   f0100409 <cons_putc>$/;"	l
f010053a	obj/kern/kernel.asm	/^f010053a:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010053f	obj/kern/kernel.asm	/^f010053f:	e8 c5 fe ff ff       	call   f0100409 <cons_putc>$/;"	l
f0100544	obj/kern/kernel.asm	/^f0100544:	eb 1e                	jmp    f0100564 <cons_putc+0x15b>$/;"	l
f0100546	obj/kern/kernel.asm	/^f0100546:	0f b7 05 28 92 22 f0 	movzwl 0xf0229228,%eax$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100550	obj/kern/kernel.asm	/^f0100550:	66 89 15 28 92 22 f0 	mov    %dx,0xf0229228$/;"	l
f0100557	obj/kern/kernel.asm	/^f0100557:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010055a	obj/kern/kernel.asm	/^f010055a:	8b 15 2c 92 22 f0    	mov    0xf022922c,%edx$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f0100564	obj/kern/kernel.asm	/^f0100564:	66 81 3d 28 92 22 f0 	cmpw   $0x7cf,0xf0229228$/;"	l
f010056b	obj/kern/kernel.asm	/^f010056b:	cf 07 $/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	76 42                	jbe    f01005b1 <cons_putc+0x1a8>$/;"	l
f010056f	obj/kern/kernel.asm	/^f010056f:	a1 2c 92 22 f0       	mov    0xf022922c,%eax$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f010057b	obj/kern/kernel.asm	/^f010057b:	00 $/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100582	obj/kern/kernel.asm	/^f0100582:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100586	obj/kern/kernel.asm	/^f0100586:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100589	obj/kern/kernel.asm	/^f0100589:	e8 f6 41 00 00       	call   f0104784 <memmove>$/;"	l
f010058e	obj/kern/kernel.asm	/^f010058e:	8b 15 2c 92 22 f0    	mov    0xf022922c,%edx$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f0100599	obj/kern/kernel.asm	/^f0100599:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f010059f	obj/kern/kernel.asm	/^f010059f:	83 c0 01             	add    $0x1,%eax$/;"	l
f01005a2	obj/kern/kernel.asm	/^f01005a2:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	75 f0                	jne    f0100599 <cons_putc+0x190>$/;"	l
f01005a9	obj/kern/kernel.asm	/^f01005a9:	66 83 2d 28 92 22 f0 	subw   $0x50,0xf0229228$/;"	l
f01005b0	obj/kern/kernel.asm	/^f01005b0:	50 $/;"	l
f01005b1	obj/kern/kernel.asm	/^f01005b1:	8b 0d 30 92 22 f0    	mov    0xf0229230,%ecx$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01005bc	obj/kern/kernel.asm	/^f01005bc:	89 ca                	mov    %ecx,%edx$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	ee                   	out    %al,(%dx)$/;"	l
f01005bf	obj/kern/kernel.asm	/^f01005bf:	0f b7 1d 28 92 22 f0 	movzwl 0xf0229228,%ebx$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	89 d8                	mov    %ebx,%eax$/;"	l
f01005cb	obj/kern/kernel.asm	/^f01005cb:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	89 f2                	mov    %esi,%edx$/;"	l
f01005d1	obj/kern/kernel.asm	/^f01005d1:	ee                   	out    %al,(%dx)$/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01005d7	obj/kern/kernel.asm	/^f01005d7:	89 ca                	mov    %ecx,%edx$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	ee                   	out    %al,(%dx)$/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	89 d8                	mov    %ebx,%eax$/;"	l
f01005dc	obj/kern/kernel.asm	/^f01005dc:	89 f2                	mov    %esi,%edx$/;"	l
f01005de	obj/kern/kernel.asm	/^f01005de:	ee                   	out    %al,(%dx)$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2:	5b                   	pop    %ebx$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	5e                   	pop    %esi$/;"	l
f01005e4	obj/kern/kernel.asm	/^f01005e4:	5f                   	pop    %edi$/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	5d                   	pop    %ebp$/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	c3                   	ret    $/;"	l
f01005e7	obj/kern/kernel.asm	/^f01005e7 <serial_intr>:$/;"	l
f01005e7	obj/kern/kernel.asm	/^f01005e7:	80 3d 34 92 22 f0 00 	cmpb   $0x0,0xf0229234$/;"	l
f01005ee	obj/kern/kernel.asm	/^f01005ee:	74 11                	je     f0100601 <serial_intr+0x1a>$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	55                   	push   %ebp$/;"	l
f01005f1	obj/kern/kernel.asm	/^f01005f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01005f3	obj/kern/kernel.asm	/^f01005f3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005f6	obj/kern/kernel.asm	/^f01005f6:	b8 a0 02 10 f0       	mov    $0xf01002a0,%eax$/;"	l
f01005fb	obj/kern/kernel.asm	/^f01005fb:	e8 bc fc ff ff       	call   f01002bc <cons_intr>$/;"	l
f0100600	obj/kern/kernel.asm	/^f0100600:	c9                   	leave  $/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	f3 c3                	repz ret $/;"	l
f0100603	obj/kern/kernel.asm	/^f0100603 <kbd_intr>:$/;"	l
f0100603	obj/kern/kernel.asm	/^f0100603:	55                   	push   %ebp$/;"	l
f0100604	obj/kern/kernel.asm	/^f0100604:	89 e5                	mov    %esp,%ebp$/;"	l
f0100606	obj/kern/kernel.asm	/^f0100606:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	b8 00 03 10 f0       	mov    $0xf0100300,%eax$/;"	l
f010060e	obj/kern/kernel.asm	/^f010060e:	e8 a9 fc ff ff       	call   f01002bc <cons_intr>$/;"	l
f0100613	obj/kern/kernel.asm	/^f0100613:	c9                   	leave  $/;"	l
f0100614	obj/kern/kernel.asm	/^f0100614:	c3                   	ret    $/;"	l
f0100615	obj/kern/kernel.asm	/^f0100615 <cons_getc>:$/;"	l
f0100615	obj/kern/kernel.asm	/^f0100615:	55                   	push   %ebp$/;"	l
f0100616	obj/kern/kernel.asm	/^f0100616:	89 e5                	mov    %esp,%ebp$/;"	l
f0100618	obj/kern/kernel.asm	/^f0100618:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	e8 c7 ff ff ff       	call   f01005e7 <serial_intr>$/;"	l
f0100620	obj/kern/kernel.asm	/^f0100620:	e8 de ff ff ff       	call   f0100603 <kbd_intr>$/;"	l
f0100625	obj/kern/kernel.asm	/^f0100625:	a1 20 92 22 f0       	mov    0xf0229220,%eax$/;"	l
f010062a	obj/kern/kernel.asm	/^f010062a:	3b 05 24 92 22 f0    	cmp    0xf0229224,%eax$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	74 26                	je     f0100658 <cons_getc+0x43>$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	89 15 20 92 22 f0    	mov    %edx,0xf0229220$/;"	l
f010063b	obj/kern/kernel.asm	/^f010063b:	0f b6 88 20 90 22 f0 	movzbl -0xfdd6fe0(%eax),%ecx$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	89 c8                	mov    %ecx,%eax$/;"	l
f0100644	obj/kern/kernel.asm	/^f0100644:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010064a	obj/kern/kernel.asm	/^f010064a:	75 11                	jne    f010065d <cons_getc+0x48>$/;"	l
f010064c	obj/kern/kernel.asm	/^f010064c:	c7 05 20 92 22 f0 00 	movl   $0x0,0xf0229220$/;"	l
f0100653	obj/kern/kernel.asm	/^f0100653:	00 00 00 $/;"	l
f0100656	obj/kern/kernel.asm	/^f0100656:	eb 05                	jmp    f010065d <cons_getc+0x48>$/;"	l
f0100658	obj/kern/kernel.asm	/^f0100658:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010065d	obj/kern/kernel.asm	/^f010065d:	c9                   	leave  $/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e:	c3                   	ret    $/;"	l
f010065f	obj/kern/kernel.asm	/^f010065f <cons_init>:$/;"	l
f010065f	obj/kern/kernel.asm	/^f010065f:	55                   	push   %ebp$/;"	l
f0100660	obj/kern/kernel.asm	/^f0100660:	89 e5                	mov    %esp,%ebp$/;"	l
f0100662	obj/kern/kernel.asm	/^f0100662:	57                   	push   %edi$/;"	l
f0100663	obj/kern/kernel.asm	/^f0100663:	56                   	push   %esi$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	53                   	push   %ebx$/;"	l
f0100665	obj/kern/kernel.asm	/^f0100665:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100668	obj/kern/kernel.asm	/^f0100668:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	5a a5 $/;"	l
f0100678	obj/kern/kernel.asm	/^f0100678:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f010067f	obj/kern/kernel.asm	/^f010067f:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100683	obj/kern/kernel.asm	/^f0100683:	74 11                	je     f0100696 <cons_init+0x37>$/;"	l
f0100685	obj/kern/kernel.asm	/^f0100685:	c7 05 30 92 22 f0 b4 	movl   $0x3b4,0xf0229230$/;"	l
f010068c	obj/kern/kernel.asm	/^f010068c:	03 00 00 $/;"	l
f010068f	obj/kern/kernel.asm	/^f010068f:	bf 00 00 0b f0       	mov    $0xf00b0000,%edi$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	eb 16                	jmp    f01006ac <cons_init+0x4d>$/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f010069d	obj/kern/kernel.asm	/^f010069d:	c7 05 30 92 22 f0 d4 	movl   $0x3d4,0xf0229230$/;"	l
f01006a4	obj/kern/kernel.asm	/^f01006a4:	03 00 00 $/;"	l
f01006a7	obj/kern/kernel.asm	/^f01006a7:	bf 00 80 0b f0       	mov    $0xf00b8000,%edi$/;"	l
f01006ac	obj/kern/kernel.asm	/^f01006ac:	8b 0d 30 92 22 f0    	mov    0xf0229230,%ecx$/;"	l
f01006b2	obj/kern/kernel.asm	/^f01006b2:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01006b7	obj/kern/kernel.asm	/^f01006b7:	89 ca                	mov    %ecx,%edx$/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	ee                   	out    %al,(%dx)$/;"	l
f01006ba	obj/kern/kernel.asm	/^f01006ba:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f01006bd	obj/kern/kernel.asm	/^f01006bd:	89 da                	mov    %ebx,%edx$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	ec                   	in     (%dx),%al$/;"	l
f01006c0	obj/kern/kernel.asm	/^f01006c0:	0f b6 f0             	movzbl %al,%esi$/;"	l
f01006c3	obj/kern/kernel.asm	/^f01006c3:	c1 e6 08             	shl    $0x8,%esi$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01006cb	obj/kern/kernel.asm	/^f01006cb:	89 ca                	mov    %ecx,%edx$/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	ee                   	out    %al,(%dx)$/;"	l
f01006ce	obj/kern/kernel.asm	/^f01006ce:	89 da                	mov    %ebx,%edx$/;"	l
f01006d0	obj/kern/kernel.asm	/^f01006d0:	ec                   	in     (%dx),%al$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	89 3d 2c 92 22 f0    	mov    %edi,0xf022922c$/;"	l
f01006d7	obj/kern/kernel.asm	/^f01006d7:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f01006da	obj/kern/kernel.asm	/^f01006da:	09 de                	or     %ebx,%esi$/;"	l
f01006dc	obj/kern/kernel.asm	/^f01006dc:	66 89 35 28 92 22 f0 	mov    %si,0xf0229228$/;"	l
f01006e3	obj/kern/kernel.asm	/^f01006e3:	e8 1b ff ff ff       	call   f0100603 <kbd_intr>$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	0f b7 05 88 e3 11 f0 	movzwl 0xf011e388,%eax$/;"	l
f01006ef	obj/kern/kernel.asm	/^f01006ef:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f01006f4	obj/kern/kernel.asm	/^f01006f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01006f7	obj/kern/kernel.asm	/^f01006f7:	e8 59 2a 00 00       	call   f0103155 <irq_setmask_8259A>$/;"	l
f01006fc	obj/kern/kernel.asm	/^f01006fc:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f0100701	obj/kern/kernel.asm	/^f0100701:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706:	89 f2                	mov    %esi,%edx$/;"	l
f0100708	obj/kern/kernel.asm	/^f0100708:	ee                   	out    %al,(%dx)$/;"	l
f0100709	obj/kern/kernel.asm	/^f0100709:	b2 fb                	mov    $0xfb,%dl$/;"	l
f010070b	obj/kern/kernel.asm	/^f010070b:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	ee                   	out    %al,(%dx)$/;"	l
f0100711	obj/kern/kernel.asm	/^f0100711:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	89 da                	mov    %ebx,%edx$/;"	l
f010071d	obj/kern/kernel.asm	/^f010071d:	ee                   	out    %al,(%dx)$/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100725	obj/kern/kernel.asm	/^f0100725:	ee                   	out    %al,(%dx)$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010072d	obj/kern/kernel.asm	/^f010072d:	ee                   	out    %al,(%dx)$/;"	l
f010072e	obj/kern/kernel.asm	/^f010072e:	b2 fc                	mov    $0xfc,%dl$/;"	l
f0100730	obj/kern/kernel.asm	/^f0100730:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	ee                   	out    %al,(%dx)$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100738	obj/kern/kernel.asm	/^f0100738:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010073d	obj/kern/kernel.asm	/^f010073d:	ee                   	out    %al,(%dx)$/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	b2 fd                	mov    $0xfd,%dl$/;"	l
f0100740	obj/kern/kernel.asm	/^f0100740:	ec                   	in     (%dx),%al$/;"	l
f0100741	obj/kern/kernel.asm	/^f0100741:	3c ff                	cmp    $0xff,%al$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	0f 95 c1             	setne  %cl$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	88 0d 34 92 22 f0    	mov    %cl,0xf0229234$/;"	l
f010074c	obj/kern/kernel.asm	/^f010074c:	89 f2                	mov    %esi,%edx$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	ec                   	in     (%dx),%al$/;"	l
f010074f	obj/kern/kernel.asm	/^f010074f:	89 da                	mov    %ebx,%edx$/;"	l
f0100751	obj/kern/kernel.asm	/^f0100751:	ec                   	in     (%dx),%al$/;"	l
f0100752	obj/kern/kernel.asm	/^f0100752:	84 c9                	test   %cl,%cl$/;"	l
f0100754	obj/kern/kernel.asm	/^f0100754:	75 0c                	jne    f0100762 <cons_init+0x103>$/;"	l
f0100756	obj/kern/kernel.asm	/^f0100756:	c7 04 24 2f 55 10 f0 	movl   $0xf010552f,(%esp)$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	e8 32 2b 00 00       	call   f0103294 <cprintf>$/;"	l
f0100762	obj/kern/kernel.asm	/^f0100762:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	5b                   	pop    %ebx$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	5e                   	pop    %esi$/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	5f                   	pop    %edi$/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768:	5d                   	pop    %ebp$/;"	l
f0100769	obj/kern/kernel.asm	/^f0100769:	c3                   	ret    $/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a <cputchar>:$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	55                   	push   %ebp$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	89 e5                	mov    %esp,%ebp$/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	e8 91 fc ff ff       	call   f0100409 <cons_putc>$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	c9                   	leave  $/;"	l
f0100779	obj/kern/kernel.asm	/^f0100779:	c3                   	ret    $/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a <getchar>:$/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a:	55                   	push   %ebp$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	89 e5                	mov    %esp,%ebp$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100780	obj/kern/kernel.asm	/^f0100780:	e8 90 fe ff ff       	call   f0100615 <cons_getc>$/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785:	85 c0                	test   %eax,%eax$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	74 f7                	je     f0100780 <getchar+0x6>$/;"	l
f0100789	obj/kern/kernel.asm	/^f0100789:	c9                   	leave  $/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	c3                   	ret    $/;"	l
f010078b	obj/kern/kernel.asm	/^f010078b <iscons>:$/;"	l
f010078b	obj/kern/kernel.asm	/^f010078b:	55                   	push   %ebp$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	89 e5                	mov    %esp,%ebp$/;"	l
f010078e	obj/kern/kernel.asm	/^f010078e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100793	obj/kern/kernel.asm	/^f0100793:	5d                   	pop    %ebp$/;"	l
f0100794	obj/kern/kernel.asm	/^f0100794:	c3                   	ret    $/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	66 90                	xchg   %ax,%ax$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	66 90                	xchg   %ax,%ax$/;"	l
f0100799	obj/kern/kernel.asm	/^f0100799:	66 90                	xchg   %ax,%ax$/;"	l
f010079b	obj/kern/kernel.asm	/^f010079b:	66 90                	xchg   %ax,%ax$/;"	l
f010079d	obj/kern/kernel.asm	/^f010079d:	66 90                	xchg   %ax,%ax$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	90                   	nop$/;"	l
f01007a0	obj/kern/kernel.asm	/^f01007a0 <mon_help>:$/;"	l
f01007a0	obj/kern/kernel.asm	/^f01007a0:	55                   	push   %ebp$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	c7 44 24 08 80 57 10 	movl   $0xf0105780,0x8(%esp)$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	f0 $/;"	l
f01007ae	obj/kern/kernel.asm	/^f01007ae:	c7 44 24 04 9e 57 10 	movl   $0xf010579e,0x4(%esp)$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	f0 $/;"	l
f01007b6	obj/kern/kernel.asm	/^f01007b6:	c7 04 24 a3 57 10 f0 	movl   $0xf01057a3,(%esp)$/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	e8 d2 2a 00 00       	call   f0103294 <cprintf>$/;"	l
f01007c2	obj/kern/kernel.asm	/^f01007c2:	c7 44 24 08 0c 58 10 	movl   $0xf010580c,0x8(%esp)$/;"	l
f01007c9	obj/kern/kernel.asm	/^f01007c9:	f0 $/;"	l
f01007ca	obj/kern/kernel.asm	/^f01007ca:	c7 44 24 04 ac 57 10 	movl   $0xf01057ac,0x4(%esp)$/;"	l
f01007d1	obj/kern/kernel.asm	/^f01007d1:	f0 $/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	c7 04 24 a3 57 10 f0 	movl   $0xf01057a3,(%esp)$/;"	l
f01007d9	obj/kern/kernel.asm	/^f01007d9:	e8 b6 2a 00 00       	call   f0103294 <cprintf>$/;"	l
f01007de	obj/kern/kernel.asm	/^f01007de:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007e3	obj/kern/kernel.asm	/^f01007e3:	c9                   	leave  $/;"	l
f01007e4	obj/kern/kernel.asm	/^f01007e4:	c3                   	ret    $/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5 <mon_kerninfo>:$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	55                   	push   %ebp$/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	89 e5                	mov    %esp,%ebp$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	c7 04 24 b5 57 10 f0 	movl   $0xf01057b5,(%esp)$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	e8 9d 2a 00 00       	call   f0103294 <cprintf>$/;"	l
f01007f7	obj/kern/kernel.asm	/^f01007f7:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	00 $/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	c7 04 24 34 58 10 f0 	movl   $0xf0105834,(%esp)$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	e8 89 2a 00 00       	call   f0103294 <cprintf>$/;"	l
f010080b	obj/kern/kernel.asm	/^f010080b:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	00 $/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	f0 $/;"	l
f010081b	obj/kern/kernel.asm	/^f010081b:	c7 04 24 5c 58 10 f0 	movl   $0xf010585c,(%esp)$/;"	l
f0100822	obj/kern/kernel.asm	/^f0100822:	e8 6d 2a 00 00       	call   f0103294 <cprintf>$/;"	l
f0100827	obj/kern/kernel.asm	/^f0100827:	c7 44 24 08 57 54 10 	movl   $0x105457,0x8(%esp)$/;"	l
f010082e	obj/kern/kernel.asm	/^f010082e:	00 $/;"	l
f010082f	obj/kern/kernel.asm	/^f010082f:	c7 44 24 04 57 54 10 	movl   $0xf0105457,0x4(%esp)$/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	f0 $/;"	l
f0100837	obj/kern/kernel.asm	/^f0100837:	c7 04 24 80 58 10 f0 	movl   $0xf0105880,(%esp)$/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	e8 51 2a 00 00       	call   f0103294 <cprintf>$/;"	l
f0100843	obj/kern/kernel.asm	/^f0100843:	c7 44 24 08 27 8c 22 	movl   $0x228c27,0x8(%esp)$/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	00 $/;"	l
f010084b	obj/kern/kernel.asm	/^f010084b:	c7 44 24 04 27 8c 22 	movl   $0xf0228c27,0x4(%esp)$/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	f0 $/;"	l
f0100853	obj/kern/kernel.asm	/^f0100853:	c7 04 24 a4 58 10 f0 	movl   $0xf01058a4,(%esp)$/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	e8 35 2a 00 00       	call   f0103294 <cprintf>$/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f:	c7 44 24 08 08 b0 26 	movl   $0x26b008,0x8(%esp)$/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	00 $/;"	l
f0100867	obj/kern/kernel.asm	/^f0100867:	c7 44 24 04 08 b0 26 	movl   $0xf026b008,0x4(%esp)$/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	f0 $/;"	l
f010086f	obj/kern/kernel.asm	/^f010086f:	c7 04 24 c8 58 10 f0 	movl   $0xf01058c8,(%esp)$/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	e8 19 2a 00 00       	call   f0103294 <cprintf>$/;"	l
f010087b	obj/kern/kernel.asm	/^f010087b:	b8 07 b4 26 f0       	mov    $0xf026b407,%eax$/;"	l
f0100880	obj/kern/kernel.asm	/^f0100880:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100885	obj/kern/kernel.asm	/^f0100885:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f010088a	obj/kern/kernel.asm	/^f010088a:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f0100890	obj/kern/kernel.asm	/^f0100890:	85 c0                	test   %eax,%eax$/;"	l
f0100892	obj/kern/kernel.asm	/^f0100892:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100895	obj/kern/kernel.asm	/^f0100895:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f0100898	obj/kern/kernel.asm	/^f0100898:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010089c	obj/kern/kernel.asm	/^f010089c:	c7 04 24 ec 58 10 f0 	movl   $0xf01058ec,(%esp)$/;"	l
f01008a3	obj/kern/kernel.asm	/^f01008a3:	e8 ec 29 00 00       	call   f0103294 <cprintf>$/;"	l
f01008a8	obj/kern/kernel.asm	/^f01008a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008ad	obj/kern/kernel.asm	/^f01008ad:	c9                   	leave  $/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	c3                   	ret    $/;"	l
f01008af	obj/kern/kernel.asm	/^f01008af <mon_backtrace>:$/;"	l
f01008af	obj/kern/kernel.asm	/^f01008af:	55                   	push   %ebp$/;"	l
f01008b0	obj/kern/kernel.asm	/^f01008b0:	89 e5                	mov    %esp,%ebp$/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	5d                   	pop    %ebp$/;"	l
f01008b8	obj/kern/kernel.asm	/^f01008b8:	c3                   	ret    $/;"	l
f01008b9	obj/kern/kernel.asm	/^f01008b9 <monitor>:$/;"	l
f01008b9	obj/kern/kernel.asm	/^f01008b9:	55                   	push   %ebp$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	89 e5                	mov    %esp,%ebp$/;"	l
f01008bc	obj/kern/kernel.asm	/^f01008bc:	57                   	push   %edi$/;"	l
f01008bd	obj/kern/kernel.asm	/^f01008bd:	56                   	push   %esi$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	53                   	push   %ebx$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f01008c2	obj/kern/kernel.asm	/^f01008c2:	c7 04 24 18 59 10 f0 	movl   $0xf0105918,(%esp)$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	e8 c6 29 00 00       	call   f0103294 <cprintf>$/;"	l
f01008ce	obj/kern/kernel.asm	/^f01008ce:	c7 04 24 3c 59 10 f0 	movl   $0xf010593c,(%esp)$/;"	l
f01008d5	obj/kern/kernel.asm	/^f01008d5:	e8 ba 29 00 00       	call   f0103294 <cprintf>$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	74 0b                	je     f01008eb <monitor+0x32>$/;"	l
f01008e0	obj/kern/kernel.asm	/^f01008e0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01008e6	obj/kern/kernel.asm	/^f01008e6:	e8 89 2b 00 00       	call   f0103474 <print_trapframe>$/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	c7 04 24 ce 57 10 f0 	movl   $0xf01057ce,(%esp)$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	e8 e9 3b 00 00       	call   f01044e0 <readline>$/;"	l
f01008f7	obj/kern/kernel.asm	/^f01008f7:	89 c3                	mov    %eax,%ebx$/;"	l
f01008f9	obj/kern/kernel.asm	/^f01008f9:	85 c0                	test   %eax,%eax$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	74 ee                	je     f01008eb <monitor+0x32>$/;"	l
f01008fd	obj/kern/kernel.asm	/^f01008fd:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100904	obj/kern/kernel.asm	/^f0100904:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100909	obj/kern/kernel.asm	/^f0100909:	eb 0a                	jmp    f0100915 <monitor+0x5c>$/;"	l
f010090b	obj/kern/kernel.asm	/^f010090b:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f010090e	obj/kern/kernel.asm	/^f010090e:	89 f7                	mov    %esi,%edi$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100913	obj/kern/kernel.asm	/^f0100913:	89 fe                	mov    %edi,%esi$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	84 c0                	test   %al,%al$/;"	l
f010091a	obj/kern/kernel.asm	/^f010091a:	74 63                	je     f010097f <monitor+0xc6>$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	0f be c0             	movsbl %al,%eax$/;"	l
f010091f	obj/kern/kernel.asm	/^f010091f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100923	obj/kern/kernel.asm	/^f0100923:	c7 04 24 d2 57 10 f0 	movl   $0xf01057d2,(%esp)$/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a:	e8 cb 3d 00 00       	call   f01046fa <strchr>$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	85 c0                	test   %eax,%eax$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	75 d8                	jne    f010090b <monitor+0x52>$/;"	l
f0100933	obj/kern/kernel.asm	/^f0100933:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	74 47                	je     f010097f <monitor+0xc6>$/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f010093b	obj/kern/kernel.asm	/^f010093b:	75 16                	jne    f0100953 <monitor+0x9a>$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100944	obj/kern/kernel.asm	/^f0100944:	00 $/;"	l
f0100945	obj/kern/kernel.asm	/^f0100945:	c7 04 24 d7 57 10 f0 	movl   $0xf01057d7,(%esp)$/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	e8 43 29 00 00       	call   f0103294 <cprintf>$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	eb 98                	jmp    f01008eb <monitor+0x32>$/;"	l
f0100953	obj/kern/kernel.asm	/^f0100953:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f010095a	obj/kern/kernel.asm	/^f010095a:	eb 03                	jmp    f010095f <monitor+0xa6>$/;"	l
f010095c	obj/kern/kernel.asm	/^f010095c:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	84 c0                	test   %al,%al$/;"	l
f0100964	obj/kern/kernel.asm	/^f0100964:	74 ad                	je     f0100913 <monitor+0x5a>$/;"	l
f0100966	obj/kern/kernel.asm	/^f0100966:	0f be c0             	movsbl %al,%eax$/;"	l
f0100969	obj/kern/kernel.asm	/^f0100969:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010096d	obj/kern/kernel.asm	/^f010096d:	c7 04 24 d2 57 10 f0 	movl   $0xf01057d2,(%esp)$/;"	l
f0100974	obj/kern/kernel.asm	/^f0100974:	e8 81 3d 00 00       	call   f01046fa <strchr>$/;"	l
f0100979	obj/kern/kernel.asm	/^f0100979:	85 c0                	test   %eax,%eax$/;"	l
f010097b	obj/kern/kernel.asm	/^f010097b:	74 df                	je     f010095c <monitor+0xa3>$/;"	l
f010097d	obj/kern/kernel.asm	/^f010097d:	eb 94                	jmp    f0100913 <monitor+0x5a>$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	00 $/;"	l
f0100987	obj/kern/kernel.asm	/^f0100987:	85 f6                	test   %esi,%esi$/;"	l
f0100989	obj/kern/kernel.asm	/^f0100989:	0f 84 5c ff ff ff    	je     f01008eb <monitor+0x32>$/;"	l
f010098f	obj/kern/kernel.asm	/^f010098f:	c7 44 24 04 9e 57 10 	movl   $0xf010579e,0x4(%esp)$/;"	l
f0100996	obj/kern/kernel.asm	/^f0100996:	f0 $/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f010099a	obj/kern/kernel.asm	/^f010099a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	e8 fa 3c 00 00       	call   f010469c <strcmp>$/;"	l
f01009a2	obj/kern/kernel.asm	/^f01009a2:	85 c0                	test   %eax,%eax$/;"	l
f01009a4	obj/kern/kernel.asm	/^f01009a4:	74 1b                	je     f01009c1 <monitor+0x108>$/;"	l
f01009a6	obj/kern/kernel.asm	/^f01009a6:	c7 44 24 04 ac 57 10 	movl   $0xf01057ac,0x4(%esp)$/;"	l
f01009ad	obj/kern/kernel.asm	/^f01009ad:	f0 $/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f01009b1	obj/kern/kernel.asm	/^f01009b1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	e8 e3 3c 00 00       	call   f010469c <strcmp>$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	85 c0                	test   %eax,%eax$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	75 2f                	jne    f01009ec <monitor+0x133>$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	b0 01                	mov    $0x1,%al$/;"	l
f01009bf	obj/kern/kernel.asm	/^f01009bf:	eb 05                	jmp    f01009c6 <monitor+0x10d>$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01009c6	obj/kern/kernel.asm	/^f01009c6:	8d 14 00             	lea    (%eax,%eax,1),%edx$/;"	l
f01009c9	obj/kern/kernel.asm	/^f01009c9:	01 d0                	add    %edx,%eax$/;"	l
f01009cb	obj/kern/kernel.asm	/^f01009cb:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01009d2	obj/kern/kernel.asm	/^f01009d2:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc:	ff 14 85 6c 59 10 f0 	call   *-0xfefa694(,%eax,4)$/;"	l
f01009e3	obj/kern/kernel.asm	/^f01009e3:	85 c0                	test   %eax,%eax$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	78 1d                	js     f0100a04 <monitor+0x14b>$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	e9 ff fe ff ff       	jmp    f01008eb <monitor+0x32>$/;"	l
f01009ec	obj/kern/kernel.asm	/^f01009ec:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f01009ef	obj/kern/kernel.asm	/^f01009ef:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	c7 04 24 f4 57 10 f0 	movl   $0xf01057f4,(%esp)$/;"	l
f01009fa	obj/kern/kernel.asm	/^f01009fa:	e8 95 28 00 00       	call   f0103294 <cprintf>$/;"	l
f01009ff	obj/kern/kernel.asm	/^f01009ff:	e9 e7 fe ff ff       	jmp    f01008eb <monitor+0x32>$/;"	l
f0100a04	obj/kern/kernel.asm	/^f0100a04:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	5b                   	pop    %ebx$/;"	l
f0100a08	obj/kern/kernel.asm	/^f0100a08:	5e                   	pop    %esi$/;"	l
f0100a09	obj/kern/kernel.asm	/^f0100a09:	5f                   	pop    %edi$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	5d                   	pop    %ebp$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	c3                   	ret    $/;"	l
f0100a0c	obj/kern/kernel.asm	/^f0100a0c:	66 90                	xchg   %ax,%ax$/;"	l
f0100a0e	obj/kern/kernel.asm	/^f0100a0e:	66 90                	xchg   %ax,%ax$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10 <boot_alloc>:$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	55                   	push   %ebp$/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a13	obj/kern/kernel.asm	/^f0100a13:	83 3d 38 92 22 f0 00 	cmpl   $0x0,0xf0229238$/;"	l
f0100a1a	obj/kern/kernel.asm	/^f0100a1a:	75 11                	jne    f0100a2d <boot_alloc+0x1d>$/;"	l
f0100a1c	obj/kern/kernel.asm	/^f0100a1c:	ba 07 c0 26 f0       	mov    $0xf026c007,%edx$/;"	l
f0100a21	obj/kern/kernel.asm	/^f0100a21:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100a27	obj/kern/kernel.asm	/^f0100a27:	89 15 38 92 22 f0    	mov    %edx,0xf0229238$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	8b 15 38 92 22 f0    	mov    0xf0229238,%edx$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100a3d	obj/kern/kernel.asm	/^f0100a3d:	01 d0                	add    %edx,%eax$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	a3 38 92 22 f0       	mov    %eax,0xf0229238$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	89 d0                	mov    %edx,%eax$/;"	l
f0100a46	obj/kern/kernel.asm	/^f0100a46:	5d                   	pop    %ebp$/;"	l
f0100a47	obj/kern/kernel.asm	/^f0100a47:	c3                   	ret    $/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48 <page2kva>:$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	2b 05 10 9f 22 f0    	sub    0xf0229f10,%eax$/;"	l
f0100a4e	obj/kern/kernel.asm	/^f0100a4e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100a51	obj/kern/kernel.asm	/^f0100a51:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100a54	obj/kern/kernel.asm	/^f0100a54:	89 c2                	mov    %eax,%edx$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100a59	obj/kern/kernel.asm	/^f0100a59:	3b 15 08 9f 22 f0    	cmp    0xf0229f08,%edx$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	72 26                	jb     f0100a87 <page2kva+0x3f>$/;"	l
f0100a61	obj/kern/kernel.asm	/^f0100a61:	55                   	push   %ebp$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a64	obj/kern/kernel.asm	/^f0100a64:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100a6b	obj/kern/kernel.asm	/^f0100a6b:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f0100a72	obj/kern/kernel.asm	/^f0100a72:	f0 $/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100a7a	obj/kern/kernel.asm	/^f0100a7a:	00 $/;"	l
f0100a7b	obj/kern/kernel.asm	/^f0100a7b:	c7 04 24 99 5f 10 f0 	movl   $0xf0105f99,(%esp)$/;"	l
f0100a82	obj/kern/kernel.asm	/^f0100a82:	e8 b9 f5 ff ff       	call   f0100040 <_panic>$/;"	l
f0100a87	obj/kern/kernel.asm	/^f0100a87:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	c3                   	ret    $/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d <check_va2pa>:$/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	89 d1                	mov    %edx,%ecx$/;"	l
f0100a8f	obj/kern/kernel.asm	/^f0100a8f:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100a92	obj/kern/kernel.asm	/^f0100a92:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100a95	obj/kern/kernel.asm	/^f0100a95:	a8 01                	test   $0x1,%al$/;"	l
f0100a97	obj/kern/kernel.asm	/^f0100a97:	74 5d                	je     f0100af6 <check_va2pa+0x69>$/;"	l
f0100a99	obj/kern/kernel.asm	/^f0100a99:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e:	89 c1                	mov    %eax,%ecx$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	3b 0d 08 9f 22 f0    	cmp    0xf0229f08,%ecx$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	72 26                	jb     f0100ad1 <check_va2pa+0x44>$/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab:	55                   	push   %ebp$/;"	l
f0100aac	obj/kern/kernel.asm	/^f0100aac:	89 e5                	mov    %esp,%ebp$/;"	l
f0100aae	obj/kern/kernel.asm	/^f0100aae:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100ab1	obj/kern/kernel.asm	/^f0100ab1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f0100abc	obj/kern/kernel.asm	/^f0100abc:	f0 $/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	c7 44 24 04 8d 03 00 	movl   $0x38d,0x4(%esp)$/;"	l
f0100ac4	obj/kern/kernel.asm	/^f0100ac4:	00 $/;"	l
f0100ac5	obj/kern/kernel.asm	/^f0100ac5:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0100acc	obj/kern/kernel.asm	/^f0100acc:	e8 6f f5 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ad1	obj/kern/kernel.asm	/^f0100ad1:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100ada	obj/kern/kernel.asm	/^f0100ada:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100ae1	obj/kern/kernel.asm	/^f0100ae1:	89 c2                	mov    %eax,%edx$/;"	l
f0100ae3	obj/kern/kernel.asm	/^f0100ae3:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100ae6	obj/kern/kernel.asm	/^f0100ae6:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	85 d2                	test   %edx,%edx$/;"	l
f0100aed	obj/kern/kernel.asm	/^f0100aed:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100af5	obj/kern/kernel.asm	/^f0100af5:	c3                   	ret    $/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	c3                   	ret    $/;"	l
f0100afc	obj/kern/kernel.asm	/^f0100afc <page_init>:$/;"	l
f0100afc	obj/kern/kernel.asm	/^f0100afc:	55                   	push   %ebp$/;"	l
f0100afd	obj/kern/kernel.asm	/^f0100afd:	89 e5                	mov    %esp,%ebp$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	56                   	push   %esi$/;"	l
f0100b00	obj/kern/kernel.asm	/^f0100b00:	53                   	push   %ebx$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100b04	obj/kern/kernel.asm	/^f0100b04:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	e8 02 ff ff ff       	call   f0100a10 <boot_alloc>$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100b13	obj/kern/kernel.asm	/^f0100b13:	77 20                	ja     f0100b35 <page_init+0x39>$/;"	l
f0100b15	obj/kern/kernel.asm	/^f0100b15:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	c7 44 24 08 a8 54 10 	movl   $0xf01054a8,0x8(%esp)$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	f0 $/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21:	c7 44 24 04 33 01 00 	movl   $0x133,0x4(%esp)$/;"	l
f0100b28	obj/kern/kernel.asm	/^f0100b28:	00 $/;"	l
f0100b29	obj/kern/kernel.asm	/^f0100b29:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0100b30	obj/kern/kernel.asm	/^f0100b30:	e8 0b f5 ff ff       	call   f0100040 <_panic>$/;"	l
f0100b35	obj/kern/kernel.asm	/^f0100b35:	8d b0 00 00 00 10    	lea    0x10000000(%eax),%esi$/;"	l
f0100b3b	obj/kern/kernel.asm	/^f0100b3b:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0100b3e	obj/kern/kernel.asm	/^f0100b3e:	8b 1d 40 92 22 f0    	mov    0xf0229240,%ebx$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	eb 3a                	jmp    f0100b85 <page_init+0x89>$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
f0100b52	obj/kern/kernel.asm	/^f0100b52:	89 c1                	mov    %eax,%ecx$/;"	l
f0100b54	obj/kern/kernel.asm	/^f0100b54:	03 0d 10 9f 22 f0    	add    0xf0229f10,%ecx$/;"	l
f0100b5a	obj/kern/kernel.asm	/^f0100b5a:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	85 d2                	test   %edx,%edx$/;"	l
f0100b62	obj/kern/kernel.asm	/^f0100b62:	74 0c                	je     f0100b70 <page_init+0x74>$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	39 f2                	cmp    %esi,%edx$/;"	l
f0100b66	obj/kern/kernel.asm	/^f0100b66:	77 10                	ja     f0100b78 <page_init+0x7c>$/;"	l
f0100b68	obj/kern/kernel.asm	/^f0100b68:	81 fa 9f 00 00 00    	cmp    $0x9f,%edx$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	76 08                	jbe    f0100b78 <page_init+0x7c>$/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70:	66 c7 41 04 01 00    	movw   $0x1,0x4(%ecx)$/;"	l
f0100b76	obj/kern/kernel.asm	/^f0100b76:	eb 0a                	jmp    f0100b82 <page_init+0x86>$/;"	l
f0100b78	obj/kern/kernel.asm	/^f0100b78:	89 19                	mov    %ebx,(%ecx)$/;"	l
f0100b7a	obj/kern/kernel.asm	/^f0100b7a:	03 05 10 9f 22 f0    	add    0xf0229f10,%eax$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	89 c3                	mov    %eax,%ebx$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	3b 15 08 9f 22 f0    	cmp    0xf0229f08,%edx$/;"	l
f0100b8b	obj/kern/kernel.asm	/^f0100b8b:	72 be                	jb     f0100b4b <page_init+0x4f>$/;"	l
f0100b8d	obj/kern/kernel.asm	/^f0100b8d:	89 1d 40 92 22 f0    	mov    %ebx,0xf0229240$/;"	l
f0100b93	obj/kern/kernel.asm	/^f0100b93:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	5b                   	pop    %ebx$/;"	l
f0100b97	obj/kern/kernel.asm	/^f0100b97:	5e                   	pop    %esi$/;"	l
f0100b98	obj/kern/kernel.asm	/^f0100b98:	5d                   	pop    %ebp$/;"	l
f0100b99	obj/kern/kernel.asm	/^f0100b99:	c3                   	ret    $/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a <page_alloc>:$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	55                   	push   %ebp$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b9d	obj/kern/kernel.asm	/^f0100b9d:	53                   	push   %ebx$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100ba1	obj/kern/kernel.asm	/^f0100ba1:	8b 1d 40 92 22 f0    	mov    0xf0229240,%ebx$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	85 db                	test   %ebx,%ebx$/;"	l
f0100ba9	obj/kern/kernel.asm	/^f0100ba9:	74 6f                	je     f0100c1a <page_alloc+0x80>$/;"	l
f0100bab	obj/kern/kernel.asm	/^f0100bab:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100bad	obj/kern/kernel.asm	/^f0100bad:	a3 40 92 22 f0       	mov    %eax,0xf0229240$/;"	l
f0100bb2	obj/kern/kernel.asm	/^f0100bb2:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f0100bb8	obj/kern/kernel.asm	/^f0100bb8:	89 d8                	mov    %ebx,%eax$/;"	l
f0100bba	obj/kern/kernel.asm	/^f0100bba:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	74 5f                	je     f0100c1f <page_alloc+0x85>$/;"	l
f0100bc0	obj/kern/kernel.asm	/^f0100bc0:	2b 05 10 9f 22 f0    	sub    0xf0229f10,%eax$/;"	l
f0100bc6	obj/kern/kernel.asm	/^f0100bc6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100bc9	obj/kern/kernel.asm	/^f0100bc9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	89 c2                	mov    %eax,%edx$/;"	l
f0100bce	obj/kern/kernel.asm	/^f0100bce:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100bd1	obj/kern/kernel.asm	/^f0100bd1:	3b 15 08 9f 22 f0    	cmp    0xf0229f08,%edx$/;"	l
f0100bd7	obj/kern/kernel.asm	/^f0100bd7:	72 20                	jb     f0100bf9 <page_alloc+0x5f>$/;"	l
f0100bd9	obj/kern/kernel.asm	/^f0100bd9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	f0 $/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100bec	obj/kern/kernel.asm	/^f0100bec:	00 $/;"	l
f0100bed	obj/kern/kernel.asm	/^f0100bed:	c7 04 24 99 5f 10 f0 	movl   $0xf0105f99,(%esp)$/;"	l
f0100bf4	obj/kern/kernel.asm	/^f0100bf4:	e8 47 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100bf9	obj/kern/kernel.asm	/^f0100bf9:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0100c00	obj/kern/kernel.asm	/^f0100c00:	00 $/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	00 $/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100c0e	obj/kern/kernel.asm	/^f0100c0e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	e8 21 3b 00 00       	call   f0104737 <memset>$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	89 d8                	mov    %ebx,%eax$/;"	l
f0100c18	obj/kern/kernel.asm	/^f0100c18:	eb 05                	jmp    f0100c1f <page_alloc+0x85>$/;"	l
f0100c1a	obj/kern/kernel.asm	/^f0100c1a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c1f	obj/kern/kernel.asm	/^f0100c1f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100c22	obj/kern/kernel.asm	/^f0100c22:	5b                   	pop    %ebx$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	5d                   	pop    %ebp$/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	c3                   	ret    $/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25 <page_free>:$/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	55                   	push   %ebp$/;"	l
f0100c26	obj/kern/kernel.asm	/^f0100c26:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c28	obj/kern/kernel.asm	/^f0100c28:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100c2e	obj/kern/kernel.asm	/^f0100c2e:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0100c33	obj/kern/kernel.asm	/^f0100c33:	74 1c                	je     f0100c51 <page_free+0x2c>$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	c7 44 24 08 b3 5f 10 	movl   $0xf0105fb3,0x8(%esp)$/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c:	f0 $/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	c7 44 24 04 6e 01 00 	movl   $0x16e,0x4(%esp)$/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44:	00 $/;"	l
f0100c45	obj/kern/kernel.asm	/^f0100c45:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0100c4c	obj/kern/kernel.asm	/^f0100c4c:	e8 ef f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c51	obj/kern/kernel.asm	/^f0100c51:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0100c54	obj/kern/kernel.asm	/^f0100c54:	74 1c                	je     f0100c72 <page_free+0x4d>$/;"	l
f0100c56	obj/kern/kernel.asm	/^f0100c56:	c7 44 24 08 7c 59 10 	movl   $0xf010597c,0x8(%esp)$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	f0 $/;"	l
f0100c5e	obj/kern/kernel.asm	/^f0100c5e:	c7 44 24 04 71 01 00 	movl   $0x171,0x4(%esp)$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	00 $/;"	l
f0100c66	obj/kern/kernel.asm	/^f0100c66:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	e8 ce f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c72	obj/kern/kernel.asm	/^f0100c72:	8b 15 40 92 22 f0    	mov    0xf0229240,%edx$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	89 10                	mov    %edx,(%eax)$/;"	l
f0100c7a	obj/kern/kernel.asm	/^f0100c7a:	a3 40 92 22 f0       	mov    %eax,0xf0229240$/;"	l
f0100c7f	obj/kern/kernel.asm	/^f0100c7f:	c9                   	leave  $/;"	l
f0100c80	obj/kern/kernel.asm	/^f0100c80:	c3                   	ret    $/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81 <page_decref>:$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	55                   	push   %ebp$/;"	l
f0100c82	obj/kern/kernel.asm	/^f0100c82:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100c8a	obj/kern/kernel.asm	/^f0100c8a:	0f b7 48 04          	movzwl 0x4(%eax),%ecx$/;"	l
f0100c8e	obj/kern/kernel.asm	/^f0100c8e:	8d 51 ff             	lea    -0x1(%ecx),%edx$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0100c95	obj/kern/kernel.asm	/^f0100c95:	66 85 d2             	test   %dx,%dx$/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	75 08                	jne    f0100ca2 <page_decref+0x21>$/;"	l
f0100c9a	obj/kern/kernel.asm	/^f0100c9a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	e8 83 ff ff ff       	call   f0100c25 <page_free>$/;"	l
f0100ca2	obj/kern/kernel.asm	/^f0100ca2:	c9                   	leave  $/;"	l
f0100ca3	obj/kern/kernel.asm	/^f0100ca3:	c3                   	ret    $/;"	l
f0100ca4	obj/kern/kernel.asm	/^f0100ca4 <pgdir_walk>:$/;"	l
f0100ca4	obj/kern/kernel.asm	/^f0100ca4:	55                   	push   %ebp$/;"	l
f0100ca5	obj/kern/kernel.asm	/^f0100ca5:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ca7	obj/kern/kernel.asm	/^f0100ca7:	57                   	push   %edi$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	56                   	push   %esi$/;"	l
f0100ca9	obj/kern/kernel.asm	/^f0100ca9:	53                   	push   %ebx$/;"	l
f0100caa	obj/kern/kernel.asm	/^f0100caa:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100cad	obj/kern/kernel.asm	/^f0100cad:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100cb0	obj/kern/kernel.asm	/^f0100cb0:	89 de                	mov    %ebx,%esi$/;"	l
f0100cb2	obj/kern/kernel.asm	/^f0100cb2:	c1 ee 16             	shr    $0x16,%esi$/;"	l
f0100cb5	obj/kern/kernel.asm	/^f0100cb5:	c1 e6 02             	shl    $0x2,%esi$/;"	l
f0100cb8	obj/kern/kernel.asm	/^f0100cb8:	03 75 08             	add    0x8(%ebp),%esi$/;"	l
f0100cbb	obj/kern/kernel.asm	/^f0100cbb:	8b 06                	mov    (%esi),%eax$/;"	l
f0100cbd	obj/kern/kernel.asm	/^f0100cbd:	a8 01                	test   $0x1,%al$/;"	l
f0100cbf	obj/kern/kernel.asm	/^f0100cbf:	74 47                	je     f0100d08 <pgdir_walk+0x64>$/;"	l
f0100cc1	obj/kern/kernel.asm	/^f0100cc1:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	89 c2                	mov    %eax,%edx$/;"	l
f0100cc8	obj/kern/kernel.asm	/^f0100cc8:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100ccb	obj/kern/kernel.asm	/^f0100ccb:	3b 15 08 9f 22 f0    	cmp    0xf0229f08,%edx$/;"	l
f0100cd1	obj/kern/kernel.asm	/^f0100cd1:	72 20                	jb     f0100cf3 <pgdir_walk+0x4f>$/;"	l
f0100cd3	obj/kern/kernel.asm	/^f0100cd3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f0100cde	obj/kern/kernel.asm	/^f0100cde:	f0 $/;"	l
f0100cdf	obj/kern/kernel.asm	/^f0100cdf:	c7 44 24 04 a2 01 00 	movl   $0x1a2,0x4(%esp)$/;"	l
f0100ce6	obj/kern/kernel.asm	/^f0100ce6:	00 $/;"	l
f0100ce7	obj/kern/kernel.asm	/^f0100ce7:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0100cee	obj/kern/kernel.asm	/^f0100cee:	e8 4d f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100cf3	obj/kern/kernel.asm	/^f0100cf3:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f0100cf6	obj/kern/kernel.asm	/^f0100cf6:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f0100cfc	obj/kern/kernel.asm	/^f0100cfc:	8d 84 18 00 00 00 f0 	lea    -0x10000000(%eax,%ebx,1),%eax$/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03:	e9 40 01 00 00       	jmp    f0100e48 <pgdir_walk+0x1a4>$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)$/;"	l
f0100d0c	obj/kern/kernel.asm	/^f0100d0c:	0f 85 2a 01 00 00    	jne    f0100e3c <pgdir_walk+0x198>$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0100d19	obj/kern/kernel.asm	/^f0100d19:	e8 7c fe ff ff       	call   f0100b9a <page_alloc>$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	89 c7                	mov    %eax,%edi$/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	85 c0                	test   %eax,%eax$/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	0f 84 1b 01 00 00    	je     f0100e43 <pgdir_walk+0x19f>$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	2b 05 10 9f 22 f0    	sub    0xf0229f10,%eax$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	89 c2                	mov    %eax,%edx$/;"	l
f0100d36	obj/kern/kernel.asm	/^f0100d36:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100d39	obj/kern/kernel.asm	/^f0100d39:	3b 15 08 9f 22 f0    	cmp    0xf0229f08,%edx$/;"	l
f0100d3f	obj/kern/kernel.asm	/^f0100d3f:	72 20                	jb     f0100d61 <pgdir_walk+0xbd>$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f0100d4c	obj/kern/kernel.asm	/^f0100d4c:	f0 $/;"	l
f0100d4d	obj/kern/kernel.asm	/^f0100d4d:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	00 $/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55:	c7 04 24 99 5f 10 f0 	movl   $0xf0105f99,(%esp)$/;"	l
f0100d5c	obj/kern/kernel.asm	/^f0100d5c:	e8 df f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	00 $/;"	l
f0100d69	obj/kern/kernel.asm	/^f0100d69:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	00 $/;"	l
f0100d71	obj/kern/kernel.asm	/^f0100d71:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100d76	obj/kern/kernel.asm	/^f0100d76:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100d79	obj/kern/kernel.asm	/^f0100d79:	e8 b9 39 00 00       	call   f0104737 <memset>$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	66 83 47 04 01       	addw   $0x1,0x4(%edi)$/;"	l
f0100d83	obj/kern/kernel.asm	/^f0100d83:	89 f8                	mov    %edi,%eax$/;"	l
f0100d85	obj/kern/kernel.asm	/^f0100d85:	2b 05 10 9f 22 f0    	sub    0xf0229f10,%eax$/;"	l
f0100d8b	obj/kern/kernel.asm	/^f0100d8b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	89 c2                	mov    %eax,%edx$/;"	l
f0100d93	obj/kern/kernel.asm	/^f0100d93:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100d96	obj/kern/kernel.asm	/^f0100d96:	3b 15 08 9f 22 f0    	cmp    0xf0229f08,%edx$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	72 20                	jb     f0100dbe <pgdir_walk+0x11a>$/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f0100da9	obj/kern/kernel.asm	/^f0100da9:	f0 $/;"	l
f0100daa	obj/kern/kernel.asm	/^f0100daa:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100db1	obj/kern/kernel.asm	/^f0100db1:	00 $/;"	l
f0100db2	obj/kern/kernel.asm	/^f0100db2:	c7 04 24 99 5f 10 f0 	movl   $0xf0105f99,(%esp)$/;"	l
f0100db9	obj/kern/kernel.asm	/^f0100db9:	e8 82 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100dbe	obj/kern/kernel.asm	/^f0100dbe:	8d 90 00 00 00 f0    	lea    -0x10000000(%eax),%edx$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	77 20                	ja     f0100dec <pgdir_walk+0x148>$/;"	l
f0100dcc	obj/kern/kernel.asm	/^f0100dcc:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	c7 44 24 08 a8 54 10 	movl   $0xf01054a8,0x8(%esp)$/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	f0 $/;"	l
f0100dd8	obj/kern/kernel.asm	/^f0100dd8:	c7 44 24 04 ab 01 00 	movl   $0x1ab,0x4(%esp)$/;"	l
f0100ddf	obj/kern/kernel.asm	/^f0100ddf:	00 $/;"	l
f0100de0	obj/kern/kernel.asm	/^f0100de0:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0100de7	obj/kern/kernel.asm	/^f0100de7:	e8 54 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	83 c8 07             	or     $0x7,%eax$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	89 06                	mov    %eax,(%esi)$/;"	l
f0100df1	obj/kern/kernel.asm	/^f0100df1:	2b 3d 10 9f 22 f0    	sub    0xf0229f10,%edi$/;"	l
f0100df7	obj/kern/kernel.asm	/^f0100df7:	c1 ff 03             	sar    $0x3,%edi$/;"	l
f0100dfa	obj/kern/kernel.asm	/^f0100dfa:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
f0100dfd	obj/kern/kernel.asm	/^f0100dfd:	89 f8                	mov    %edi,%eax$/;"	l
f0100dff	obj/kern/kernel.asm	/^f0100dff:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	3b 05 08 9f 22 f0    	cmp    0xf0229f08,%eax$/;"	l
f0100e08	obj/kern/kernel.asm	/^f0100e08:	72 20                	jb     f0100e2a <pgdir_walk+0x186>$/;"	l
f0100e0a	obj/kern/kernel.asm	/^f0100e0a:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f0100e15	obj/kern/kernel.asm	/^f0100e15:	f0 $/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100e1d	obj/kern/kernel.asm	/^f0100e1d:	00 $/;"	l
f0100e1e	obj/kern/kernel.asm	/^f0100e1e:	c7 04 24 99 5f 10 f0 	movl   $0xf0105f99,(%esp)$/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25:	e8 16 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e2a	obj/kern/kernel.asm	/^f0100e2a:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f0100e2d	obj/kern/kernel.asm	/^f0100e2d:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f0100e33	obj/kern/kernel.asm	/^f0100e33:	8d 84 1f 00 00 00 f0 	lea    -0x10000000(%edi,%ebx,1),%eax$/;"	l
f0100e3a	obj/kern/kernel.asm	/^f0100e3a:	eb 0c                	jmp    f0100e48 <pgdir_walk+0x1a4>$/;"	l
f0100e3c	obj/kern/kernel.asm	/^f0100e3c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e41	obj/kern/kernel.asm	/^f0100e41:	eb 05                	jmp    f0100e48 <pgdir_walk+0x1a4>$/;"	l
f0100e43	obj/kern/kernel.asm	/^f0100e43:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	5b                   	pop    %ebx$/;"	l
f0100e4c	obj/kern/kernel.asm	/^f0100e4c:	5e                   	pop    %esi$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	5f                   	pop    %edi$/;"	l
f0100e4e	obj/kern/kernel.asm	/^f0100e4e:	5d                   	pop    %ebp$/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	c3                   	ret    $/;"	l
f0100e50	obj/kern/kernel.asm	/^f0100e50 <page_lookup>:$/;"	l
f0100e50	obj/kern/kernel.asm	/^f0100e50:	55                   	push   %ebp$/;"	l
f0100e51	obj/kern/kernel.asm	/^f0100e51:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e53	obj/kern/kernel.asm	/^f0100e53:	53                   	push   %ebx$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100e57	obj/kern/kernel.asm	/^f0100e57:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0100e5a	obj/kern/kernel.asm	/^f0100e5a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100e61	obj/kern/kernel.asm	/^f0100e61:	00 $/;"	l
f0100e62	obj/kern/kernel.asm	/^f0100e62:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100e69	obj/kern/kernel.asm	/^f0100e69:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100e6c	obj/kern/kernel.asm	/^f0100e6c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	e8 30 fe ff ff       	call   f0100ca4 <pgdir_walk>$/;"	l
f0100e74	obj/kern/kernel.asm	/^f0100e74:	85 db                	test   %ebx,%ebx$/;"	l
f0100e76	obj/kern/kernel.asm	/^f0100e76:	74 02                	je     f0100e7a <page_lookup+0x2a>$/;"	l
f0100e78	obj/kern/kernel.asm	/^f0100e78:	89 03                	mov    %eax,(%ebx)$/;"	l
f0100e7a	obj/kern/kernel.asm	/^f0100e7a:	85 c0                	test   %eax,%eax$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	74 38                	je     f0100eb6 <page_lookup+0x66>$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	8b 00                	mov    (%eax),%eax$/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	a8 01                	test   $0x1,%al$/;"	l
f0100e82	obj/kern/kernel.asm	/^f0100e82:	74 39                	je     f0100ebd <page_lookup+0x6d>$/;"	l
f0100e84	obj/kern/kernel.asm	/^f0100e84:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100e87	obj/kern/kernel.asm	/^f0100e87:	3b 05 08 9f 22 f0    	cmp    0xf0229f08,%eax$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	72 1c                	jb     f0100eab <page_lookup+0x5b>$/;"	l
f0100e8f	obj/kern/kernel.asm	/^f0100e8f:	c7 44 24 08 a8 59 10 	movl   $0xf01059a8,0x8(%esp)$/;"	l
f0100e96	obj/kern/kernel.asm	/^f0100e96:	f0 $/;"	l
f0100e97	obj/kern/kernel.asm	/^f0100e97:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0100e9e	obj/kern/kernel.asm	/^f0100e9e:	00 $/;"	l
f0100e9f	obj/kern/kernel.asm	/^f0100e9f:	c7 04 24 99 5f 10 f0 	movl   $0xf0105f99,(%esp)$/;"	l
f0100ea6	obj/kern/kernel.asm	/^f0100ea6:	e8 95 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100eab	obj/kern/kernel.asm	/^f0100eab:	8b 15 10 9f 22 f0    	mov    0xf0229f10,%edx$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0100eb4	obj/kern/kernel.asm	/^f0100eb4:	eb 0c                	jmp    f0100ec2 <page_lookup+0x72>$/;"	l
f0100eb6	obj/kern/kernel.asm	/^f0100eb6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ebb	obj/kern/kernel.asm	/^f0100ebb:	eb 05                	jmp    f0100ec2 <page_lookup+0x72>$/;"	l
f0100ebd	obj/kern/kernel.asm	/^f0100ebd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100ec5	obj/kern/kernel.asm	/^f0100ec5:	5b                   	pop    %ebx$/;"	l
f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	5d                   	pop    %ebp$/;"	l
f0100ec7	obj/kern/kernel.asm	/^f0100ec7:	c3                   	ret    $/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8 <tlb_invalidate>:$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	55                   	push   %ebp$/;"	l
f0100ec9	obj/kern/kernel.asm	/^f0100ec9:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ecb	obj/kern/kernel.asm	/^f0100ecb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece:	e8 b6 3e 00 00       	call   f0104d89 <cpunum>$/;"	l
f0100ed3	obj/kern/kernel.asm	/^f0100ed3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	83 b8 28 a0 22 f0 00 	cmpl   $0x0,-0xfdd5fd8(%eax)$/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	74 16                	je     f0100ef5 <tlb_invalidate+0x2d>$/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	e8 a5 3e 00 00       	call   f0104d89 <cpunum>$/;"	l
f0100ee4	obj/kern/kernel.asm	/^f0100ee4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0100eed	obj/kern/kernel.asm	/^f0100eed:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f0100ef3	obj/kern/kernel.asm	/^f0100ef3:	75 06                	jne    f0100efb <tlb_invalidate+0x33>$/;"	l
f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100ef8	obj/kern/kernel.asm	/^f0100ef8:	0f 01 38             	invlpg (%eax)$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	c9                   	leave  $/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	c3                   	ret    $/;"	l
f0100efd	obj/kern/kernel.asm	/^f0100efd <page_remove>:$/;"	l
f0100efd	obj/kern/kernel.asm	/^f0100efd:	55                   	push   %ebp$/;"	l
f0100efe	obj/kern/kernel.asm	/^f0100efe:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	56                   	push   %esi$/;"	l
f0100f01	obj/kern/kernel.asm	/^f0100f01:	53                   	push   %ebx$/;"	l
f0100f02	obj/kern/kernel.asm	/^f0100f02:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100f0b	obj/kern/kernel.asm	/^f0100f0b:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100f0e	obj/kern/kernel.asm	/^f0100f0e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100f12	obj/kern/kernel.asm	/^f0100f12:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100f19	obj/kern/kernel.asm	/^f0100f19:	e8 32 ff ff ff       	call   f0100e50 <page_lookup>$/;"	l
f0100f1e	obj/kern/kernel.asm	/^f0100f1e:	85 c0                	test   %eax,%eax$/;"	l
f0100f20	obj/kern/kernel.asm	/^f0100f20:	74 1d                	je     f0100f3f <page_remove+0x42>$/;"	l
f0100f22	obj/kern/kernel.asm	/^f0100f22:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100f25	obj/kern/kernel.asm	/^f0100f25:	e8 57 fd ff ff       	call   f0100c81 <page_decref>$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100f2d	obj/kern/kernel.asm	/^f0100f2d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100f37	obj/kern/kernel.asm	/^f0100f37:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	e8 89 ff ff ff       	call   f0100ec8 <tlb_invalidate>$/;"	l
f0100f3f	obj/kern/kernel.asm	/^f0100f3f:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	5b                   	pop    %ebx$/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	5e                   	pop    %esi$/;"	l
f0100f44	obj/kern/kernel.asm	/^f0100f44:	5d                   	pop    %ebp$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	c3                   	ret    $/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46 <page_insert>:$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	55                   	push   %ebp$/;"	l
f0100f47	obj/kern/kernel.asm	/^f0100f47:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	57                   	push   %edi$/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	56                   	push   %esi$/;"	l
f0100f4b	obj/kern/kernel.asm	/^f0100f4b:	53                   	push   %ebx$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100f4f	obj/kern/kernel.asm	/^f0100f4f:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100f52	obj/kern/kernel.asm	/^f0100f52:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0100f55	obj/kern/kernel.asm	/^f0100f55:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0100f5c	obj/kern/kernel.asm	/^f0100f5c:	00 $/;"	l
f0100f5d	obj/kern/kernel.asm	/^f0100f5d:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0100f61	obj/kern/kernel.asm	/^f0100f61:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100f67	obj/kern/kernel.asm	/^f0100f67:	e8 38 fd ff ff       	call   f0100ca4 <pgdir_walk>$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	89 c6                	mov    %eax,%esi$/;"	l
f0100f6e	obj/kern/kernel.asm	/^f0100f6e:	85 c0                	test   %eax,%eax$/;"	l
f0100f70	obj/kern/kernel.asm	/^f0100f70:	74 57                	je     f0100fc9 <page_insert+0x83>$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	8b 00                	mov    (%eax),%eax$/;"	l
f0100f74	obj/kern/kernel.asm	/^f0100f74:	a8 01                	test   $0x1,%al$/;"	l
f0100f76	obj/kern/kernel.asm	/^f0100f76:	74 2d                	je     f0100fa5 <page_insert+0x5f>$/;"	l
f0100f78	obj/kern/kernel.asm	/^f0100f78:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100f7d	obj/kern/kernel.asm	/^f0100f7d:	89 da                	mov    %ebx,%edx$/;"	l
f0100f7f	obj/kern/kernel.asm	/^f0100f7f:	2b 15 10 9f 22 f0    	sub    0xf0229f10,%edx$/;"	l
f0100f85	obj/kern/kernel.asm	/^f0100f85:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0100f88	obj/kern/kernel.asm	/^f0100f88:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0100f8b	obj/kern/kernel.asm	/^f0100f8b:	39 d0                	cmp    %edx,%eax$/;"	l
f0100f8d	obj/kern/kernel.asm	/^f0100f8d:	75 07                	jne    f0100f96 <page_insert+0x50>$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	66 83 6b 04 01       	subw   $0x1,0x4(%ebx)$/;"	l
f0100f94	obj/kern/kernel.asm	/^f0100f94:	eb 0f                	jmp    f0100fa5 <page_insert+0x5f>$/;"	l
f0100f96	obj/kern/kernel.asm	/^f0100f96:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100f9d	obj/kern/kernel.asm	/^f0100f9d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100fa0	obj/kern/kernel.asm	/^f0100fa0:	e8 58 ff ff ff       	call   f0100efd <page_remove>$/;"	l
f0100fa5	obj/kern/kernel.asm	/^f0100fa5:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0100fa8	obj/kern/kernel.asm	/^f0100fa8:	83 ca 01             	or     $0x1,%edx$/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	89 d8                	mov    %ebx,%eax$/;"	l
f0100fad	obj/kern/kernel.asm	/^f0100fad:	2b 05 10 9f 22 f0    	sub    0xf0229f10,%eax$/;"	l
f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100fb9	obj/kern/kernel.asm	/^f0100fb9:	09 d0                	or     %edx,%eax$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	89 06                	mov    %eax,(%esi)$/;"	l
f0100fbd	obj/kern/kernel.asm	/^f0100fbd:	66 83 43 04 01       	addw   $0x1,0x4(%ebx)$/;"	l
f0100fc2	obj/kern/kernel.asm	/^f0100fc2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	eb 05                	jmp    f0100fce <page_insert+0x88>$/;"	l
f0100fc9	obj/kern/kernel.asm	/^f0100fc9:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0100fce	obj/kern/kernel.asm	/^f0100fce:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100fd1	obj/kern/kernel.asm	/^f0100fd1:	5b                   	pop    %ebx$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	5e                   	pop    %esi$/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3:	5f                   	pop    %edi$/;"	l
f0100fd4	obj/kern/kernel.asm	/^f0100fd4:	5d                   	pop    %ebp$/;"	l
f0100fd5	obj/kern/kernel.asm	/^f0100fd5:	c3                   	ret    $/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6 <mmio_map_region>:$/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6:	55                   	push   %ebp$/;"	l
f0100fd7	obj/kern/kernel.asm	/^f0100fd7:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fd9	obj/kern/kernel.asm	/^f0100fd9:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100fdc	obj/kern/kernel.asm	/^f0100fdc:	c7 44 24 08 c8 59 10 	movl   $0xf01059c8,0x8(%esp)$/;"	l
f0100fe3	obj/kern/kernel.asm	/^f0100fe3:	f0 $/;"	l
f0100fe4	obj/kern/kernel.asm	/^f0100fe4:	c7 44 24 04 69 02 00 	movl   $0x269,0x4(%esp)$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	00 $/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0100ff3	obj/kern/kernel.asm	/^f0100ff3:	e8 48 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8 <mem_init>:$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8:	55                   	push   %ebp$/;"	l
f0100ff9	obj/kern/kernel.asm	/^f0100ff9:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	57                   	push   %edi$/;"	l
f0100ffc	obj/kern/kernel.asm	/^f0100ffc:	56                   	push   %esi$/;"	l
f0100ffd	obj/kern/kernel.asm	/^f0100ffd:	53                   	push   %ebx$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0101001	obj/kern/kernel.asm	/^f0101001:	c7 04 24 15 00 00 00 	movl   $0x15,(%esp)$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	e8 1e 21 00 00       	call   f010312b <mc146818_read>$/;"	l
f010100d	obj/kern/kernel.asm	/^f010100d:	89 c3                	mov    %eax,%ebx$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	c7 04 24 16 00 00 00 	movl   $0x16,(%esp)$/;"	l
f0101016	obj/kern/kernel.asm	/^f0101016:	e8 10 21 00 00       	call   f010312b <mc146818_read>$/;"	l
f010101b	obj/kern/kernel.asm	/^f010101b:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f010101e	obj/kern/kernel.asm	/^f010101e:	09 c3                	or     %eax,%ebx$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	89 d8                	mov    %ebx,%eax$/;"	l
f0101022	obj/kern/kernel.asm	/^f0101022:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f010102b	obj/kern/kernel.asm	/^f010102b:	85 c0                	test   %eax,%eax$/;"	l
f010102d	obj/kern/kernel.asm	/^f010102d:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101033	obj/kern/kernel.asm	/^f0101033:	a3 44 92 22 f0       	mov    %eax,0xf0229244$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	c7 04 24 17 00 00 00 	movl   $0x17,(%esp)$/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f:	e8 e7 20 00 00       	call   f010312b <mc146818_read>$/;"	l
f0101044	obj/kern/kernel.asm	/^f0101044:	89 c3                	mov    %eax,%ebx$/;"	l
f0101046	obj/kern/kernel.asm	/^f0101046:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
f010104d	obj/kern/kernel.asm	/^f010104d:	e8 d9 20 00 00       	call   f010312b <mc146818_read>$/;"	l
f0101052	obj/kern/kernel.asm	/^f0101052:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101055	obj/kern/kernel.asm	/^f0101055:	09 c3                	or     %eax,%ebx$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	89 d8                	mov    %ebx,%eax$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f010105c	obj/kern/kernel.asm	/^f010105c:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101062	obj/kern/kernel.asm	/^f0101062:	85 c0                	test   %eax,%eax$/;"	l
f0101064	obj/kern/kernel.asm	/^f0101064:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f010106a	obj/kern/kernel.asm	/^f010106a:	85 c0                	test   %eax,%eax$/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c:	74 0e                	je     f010107c <mem_init+0x84>$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0101074	obj/kern/kernel.asm	/^f0101074:	89 15 08 9f 22 f0    	mov    %edx,0xf0229f08$/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	eb 0c                	jmp    f0101088 <mem_init+0x90>$/;"	l
f010107c	obj/kern/kernel.asm	/^f010107c:	8b 15 44 92 22 f0    	mov    0xf0229244,%edx$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	89 15 08 9f 22 f0    	mov    %edx,0xf0229f08$/;"	l
f0101088	obj/kern/kernel.asm	/^f0101088:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010108b	obj/kern/kernel.asm	/^f010108b:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010108e	obj/kern/kernel.asm	/^f010108e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101092	obj/kern/kernel.asm	/^f0101092:	a1 44 92 22 f0       	mov    0xf0229244,%eax$/;"	l
f0101097	obj/kern/kernel.asm	/^f0101097:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010109d	obj/kern/kernel.asm	/^f010109d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1:	a1 08 9f 22 f0       	mov    0xf0229f08,%eax$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01010b0	obj/kern/kernel.asm	/^f01010b0:	c7 04 24 e8 59 10 f0 	movl   $0xf01059e8,(%esp)$/;"	l
f01010b7	obj/kern/kernel.asm	/^f01010b7:	e8 d8 21 00 00       	call   f0103294 <cprintf>$/;"	l
f01010bc	obj/kern/kernel.asm	/^f01010bc:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	e8 4a f9 ff ff       	call   f0100a10 <boot_alloc>$/;"	l
f01010c6	obj/kern/kernel.asm	/^f01010c6:	a3 0c 9f 22 f0       	mov    %eax,0xf0229f0c$/;"	l
f01010cb	obj/kern/kernel.asm	/^f01010cb:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01010d2	obj/kern/kernel.asm	/^f01010d2:	00 $/;"	l
f01010d3	obj/kern/kernel.asm	/^f01010d3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01010da	obj/kern/kernel.asm	/^f01010da:	00 $/;"	l
f01010db	obj/kern/kernel.asm	/^f01010db:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	e8 54 36 00 00       	call   f0104737 <memset>$/;"	l
f01010e3	obj/kern/kernel.asm	/^f01010e3:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f01010e8	obj/kern/kernel.asm	/^f01010e8:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	77 20                	ja     f010110f <mem_init+0x117>$/;"	l
f01010ef	obj/kern/kernel.asm	/^f01010ef:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01010f3	obj/kern/kernel.asm	/^f01010f3:	c7 44 24 08 a8 54 10 	movl   $0xf01054a8,0x8(%esp)$/;"	l
f01010fa	obj/kern/kernel.asm	/^f01010fa:	f0 $/;"	l
f01010fb	obj/kern/kernel.asm	/^f01010fb:	c7 44 24 04 8f 00 00 	movl   $0x8f,0x4(%esp)$/;"	l
f0101102	obj/kern/kernel.asm	/^f0101102:	00 $/;"	l
f0101103	obj/kern/kernel.asm	/^f0101103:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f010110a	obj/kern/kernel.asm	/^f010110a:	e8 31 ef ff ff       	call   f0100040 <_panic>$/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101115	obj/kern/kernel.asm	/^f0101115:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101118	obj/kern/kernel.asm	/^f0101118:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	a1 08 9f 22 f0       	mov    0xf0229f08,%eax$/;"	l
f0101123	obj/kern/kernel.asm	/^f0101123:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101126	obj/kern/kernel.asm	/^f0101126:	e8 e5 f8 ff ff       	call   f0100a10 <boot_alloc>$/;"	l
f010112b	obj/kern/kernel.asm	/^f010112b:	a3 10 9f 22 f0       	mov    %eax,0xf0229f10$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	8b 3d 08 9f 22 f0    	mov    0xf0229f08,%edi$/;"	l
f0101136	obj/kern/kernel.asm	/^f0101136:	8d 14 fd 00 00 00 00 	lea    0x0(,%edi,8),%edx$/;"	l
f010113d	obj/kern/kernel.asm	/^f010113d:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0101141	obj/kern/kernel.asm	/^f0101141:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	00 $/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	e8 e6 35 00 00       	call   f0104737 <memset>$/;"	l
f0101151	obj/kern/kernel.asm	/^f0101151:	c7 44 24 08 00 04 00 	movl   $0x400,0x8(%esp)$/;"	l
f0101158	obj/kern/kernel.asm	/^f0101158:	00 $/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	c7 44 24 04 7c 00 00 	movl   $0x7c,0x4(%esp)$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	00 $/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	c7 04 24 24 5a 10 f0 	movl   $0xf0105a24,(%esp)$/;"	l
f0101168	obj/kern/kernel.asm	/^f0101168:	e8 27 21 00 00       	call   f0103294 <cprintf>$/;"	l
f010116d	obj/kern/kernel.asm	/^f010116d:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f0101172	obj/kern/kernel.asm	/^f0101172:	e8 99 f8 ff ff       	call   f0100a10 <boot_alloc>$/;"	l
f0101177	obj/kern/kernel.asm	/^f0101177:	a3 48 92 22 f0       	mov    %eax,0xf0229248$/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c:	e8 7b f9 ff ff       	call   f0100afc <page_init>$/;"	l
f0101181	obj/kern/kernel.asm	/^f0101181:	a1 40 92 22 f0       	mov    0xf0229240,%eax$/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	85 c0                	test   %eax,%eax$/;"	l
f0101188	obj/kern/kernel.asm	/^f0101188:	75 1c                	jne    f01011a6 <mem_init+0x1ae>$/;"	l
f010118a	obj/kern/kernel.asm	/^f010118a:	c7 44 24 08 48 5a 10 	movl   $0xf0105a48,0x8(%esp)$/;"	l
f0101191	obj/kern/kernel.asm	/^f0101191:	f0 $/;"	l
f0101192	obj/kern/kernel.asm	/^f0101192:	c7 44 24 04 c2 02 00 	movl   $0x2c2,0x4(%esp)$/;"	l
f0101199	obj/kern/kernel.asm	/^f0101199:	00 $/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01011a1	obj/kern/kernel.asm	/^f01011a1:	e8 9a ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011a6	obj/kern/kernel.asm	/^f01011a6:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f01011ac	obj/kern/kernel.asm	/^f01011ac:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	89 c2                	mov    %eax,%edx$/;"	l
f01011b4	obj/kern/kernel.asm	/^f01011b4:	2b 15 10 9f 22 f0    	sub    0xf0229f10,%edx$/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	0f 95 c2             	setne  %dl$/;"	l
f01011c3	obj/kern/kernel.asm	/^f01011c3:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01011c6	obj/kern/kernel.asm	/^f01011c6:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	89 01                	mov    %eax,(%ecx)$/;"	l
f01011cc	obj/kern/kernel.asm	/^f01011cc:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f01011d0	obj/kern/kernel.asm	/^f01011d0:	8b 00                	mov    (%eax),%eax$/;"	l
f01011d2	obj/kern/kernel.asm	/^f01011d2:	85 c0                	test   %eax,%eax$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	75 dc                	jne    f01011b2 <mem_init+0x1ba>$/;"	l
f01011d6	obj/kern/kernel.asm	/^f01011d6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	89 10                	mov    %edx,(%eax)$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	89 1d 40 92 22 f0    	mov    %ebx,0xf0229240$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	eb 64                	jmp    f0101256 <mem_init+0x25e>$/;"	l
f01011f2	obj/kern/kernel.asm	/^f01011f2:	89 d8                	mov    %ebx,%eax$/;"	l
f01011f4	obj/kern/kernel.asm	/^f01011f4:	2b 05 10 9f 22 f0    	sub    0xf0229f10,%eax$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01011fd	obj/kern/kernel.asm	/^f01011fd:	89 c2                	mov    %eax,%edx$/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101202	obj/kern/kernel.asm	/^f0101202:	a9 00 fc 0f 00       	test   $0xffc00,%eax$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	75 4b                	jne    f0101254 <mem_init+0x25c>$/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	89 d0                	mov    %edx,%eax$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e:	3b 05 08 9f 22 f0    	cmp    0xf0229f08,%eax$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	72 20                	jb     f0101236 <mem_init+0x23e>$/;"	l
f0101216	obj/kern/kernel.asm	/^f0101216:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f0101221	obj/kern/kernel.asm	/^f0101221:	f0 $/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	00 $/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	c7 04 24 99 5f 10 f0 	movl   $0xf0105f99,(%esp)$/;"	l
f0101231	obj/kern/kernel.asm	/^f0101231:	e8 0a ee ff ff       	call   f0100040 <_panic>$/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f010123d	obj/kern/kernel.asm	/^f010123d:	00 $/;"	l
f010123e	obj/kern/kernel.asm	/^f010123e:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0101245	obj/kern/kernel.asm	/^f0101245:	00 $/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f010124c	obj/kern/kernel.asm	/^f010124c:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	e8 e3 34 00 00       	call   f0104737 <memset>$/;"	l
f0101254	obj/kern/kernel.asm	/^f0101254:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0101256	obj/kern/kernel.asm	/^f0101256:	85 db                	test   %ebx,%ebx$/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	75 98                	jne    f01011f2 <mem_init+0x1fa>$/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010125f	obj/kern/kernel.asm	/^f010125f:	e8 ac f7 ff ff       	call   f0100a10 <boot_alloc>$/;"	l
f0101264	obj/kern/kernel.asm	/^f0101264:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	a1 40 92 22 f0       	mov    0xf0229240,%eax$/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f010126f	obj/kern/kernel.asm	/^f010126f:	8b 0d 10 9f 22 f0    	mov    0xf0229f10,%ecx$/;"	l
f0101275	obj/kern/kernel.asm	/^f0101275:	8b 3d 08 9f 22 f0    	mov    0xf0229f08,%edi$/;"	l
f010127b	obj/kern/kernel.asm	/^f010127b:	89 7d c4             	mov    %edi,-0x3c(%ebp)$/;"	l
f010127e	obj/kern/kernel.asm	/^f010127e:	8d 3c f9             	lea    (%ecx,%edi,8),%edi$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0101287	obj/kern/kernel.asm	/^f0101287:	89 c2                	mov    %eax,%edx$/;"	l
f0101289	obj/kern/kernel.asm	/^f0101289:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010128e	obj/kern/kernel.asm	/^f010128e:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
f0101291	obj/kern/kernel.asm	/^f0101291:	e9 c4 01 00 00       	jmp    f010145a <mem_init+0x462>$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	39 d1                	cmp    %edx,%ecx$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	76 24                	jbe    f01012be <mem_init+0x2c6>$/;"	l
f010129a	obj/kern/kernel.asm	/^f010129a:	c7 44 24 0c c9 5f 10 	movl   $0xf0105fc9,0xc(%esp)$/;"	l
f01012a1	obj/kern/kernel.asm	/^f01012a1:	f0 $/;"	l
f01012a2	obj/kern/kernel.asm	/^f01012a2:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01012a9	obj/kern/kernel.asm	/^f01012a9:	f0 $/;"	l
f01012aa	obj/kern/kernel.asm	/^f01012aa:	c7 44 24 04 dc 02 00 	movl   $0x2dc,0x4(%esp)$/;"	l
f01012b1	obj/kern/kernel.asm	/^f01012b1:	00 $/;"	l
f01012b2	obj/kern/kernel.asm	/^f01012b2:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01012b9	obj/kern/kernel.asm	/^f01012b9:	e8 82 ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	72 24                	jb     f01012e7 <mem_init+0x2ef>$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	c7 44 24 0c ea 5f 10 	movl   $0xf0105fea,0xc(%esp)$/;"	l
f01012ca	obj/kern/kernel.asm	/^f01012ca:	f0 $/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01012d2	obj/kern/kernel.asm	/^f01012d2:	f0 $/;"	l
f01012d3	obj/kern/kernel.asm	/^f01012d3:	c7 44 24 04 dd 02 00 	movl   $0x2dd,0x4(%esp)$/;"	l
f01012da	obj/kern/kernel.asm	/^f01012da:	00 $/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01012e2	obj/kern/kernel.asm	/^f01012e2:	e8 59 ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012e7	obj/kern/kernel.asm	/^f01012e7:	89 d0                	mov    %edx,%eax$/;"	l
f01012e9	obj/kern/kernel.asm	/^f01012e9:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f01012ec	obj/kern/kernel.asm	/^f01012ec:	a8 07                	test   $0x7,%al$/;"	l
f01012ee	obj/kern/kernel.asm	/^f01012ee:	74 24                	je     f0101314 <mem_init+0x31c>$/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	c7 44 24 0c 6c 5a 10 	movl   $0xf0105a6c,0xc(%esp)$/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	f0 $/;"	l
f01012f8	obj/kern/kernel.asm	/^f01012f8:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01012ff	obj/kern/kernel.asm	/^f01012ff:	f0 $/;"	l
f0101300	obj/kern/kernel.asm	/^f0101300:	c7 44 24 04 de 02 00 	movl   $0x2de,0x4(%esp)$/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	00 $/;"	l
f0101308	obj/kern/kernel.asm	/^f0101308:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f010130f	obj/kern/kernel.asm	/^f010130f:	e8 2c ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101317	obj/kern/kernel.asm	/^f0101317:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	85 c0                	test   %eax,%eax$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	75 24                	jne    f0101342 <mem_init+0x34a>$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	c7 44 24 0c fe 5f 10 	movl   $0xf0105ffe,0xc(%esp)$/;"	l
f0101325	obj/kern/kernel.asm	/^f0101325:	f0 $/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f010132d	obj/kern/kernel.asm	/^f010132d:	f0 $/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	c7 44 24 04 e1 02 00 	movl   $0x2e1,0x4(%esp)$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	00 $/;"	l
f0101336	obj/kern/kernel.asm	/^f0101336:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f010133d	obj/kern/kernel.asm	/^f010133d:	e8 fe ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101342	obj/kern/kernel.asm	/^f0101342:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0101347	obj/kern/kernel.asm	/^f0101347:	75 24                	jne    f010136d <mem_init+0x375>$/;"	l
f0101349	obj/kern/kernel.asm	/^f0101349:	c7 44 24 0c 0f 60 10 	movl   $0xf010600f,0xc(%esp)$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	f0 $/;"	l
f0101351	obj/kern/kernel.asm	/^f0101351:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101358	obj/kern/kernel.asm	/^f0101358:	f0 $/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	c7 44 24 04 e2 02 00 	movl   $0x2e2,0x4(%esp)$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	00 $/;"	l
f0101361	obj/kern/kernel.asm	/^f0101361:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101368	obj/kern/kernel.asm	/^f0101368:	e8 d3 ec ff ff       	call   f0100040 <_panic>$/;"	l
f010136d	obj/kern/kernel.asm	/^f010136d:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0101372	obj/kern/kernel.asm	/^f0101372:	75 24                	jne    f0101398 <mem_init+0x3a0>$/;"	l
f0101374	obj/kern/kernel.asm	/^f0101374:	c7 44 24 0c a0 5a 10 	movl   $0xf0105aa0,0xc(%esp)$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	f0 $/;"	l
f010137c	obj/kern/kernel.asm	/^f010137c:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	f0 $/;"	l
f0101384	obj/kern/kernel.asm	/^f0101384:	c7 44 24 04 e3 02 00 	movl   $0x2e3,0x4(%esp)$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	00 $/;"	l
f010138c	obj/kern/kernel.asm	/^f010138c:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	e8 a8 ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101398	obj/kern/kernel.asm	/^f0101398:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	75 24                	jne    f01013c3 <mem_init+0x3cb>$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	c7 44 24 0c 28 60 10 	movl   $0xf0106028,0xc(%esp)$/;"	l
f01013a6	obj/kern/kernel.asm	/^f01013a6:	f0 $/;"	l
f01013a7	obj/kern/kernel.asm	/^f01013a7:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	f0 $/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	c7 44 24 04 e4 02 00 	movl   $0x2e4,0x4(%esp)$/;"	l
f01013b6	obj/kern/kernel.asm	/^f01013b6:	00 $/;"	l
f01013b7	obj/kern/kernel.asm	/^f01013b7:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01013be	obj/kern/kernel.asm	/^f01013be:	e8 7d ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013c3	obj/kern/kernel.asm	/^f01013c3:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f01013c8	obj/kern/kernel.asm	/^f01013c8:	0f 86 a3 13 00 00    	jbe    f0102771 <mem_init+0x1779>$/;"	l
f01013ce	obj/kern/kernel.asm	/^f01013ce:	89 c3                	mov    %eax,%ebx$/;"	l
f01013d0	obj/kern/kernel.asm	/^f01013d0:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	39 5d c4             	cmp    %ebx,-0x3c(%ebp)$/;"	l
f01013d6	obj/kern/kernel.asm	/^f01013d6:	77 20                	ja     f01013f8 <mem_init+0x400>$/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	f0 $/;"	l
f01013e4	obj/kern/kernel.asm	/^f01013e4:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01013eb	obj/kern/kernel.asm	/^f01013eb:	00 $/;"	l
f01013ec	obj/kern/kernel.asm	/^f01013ec:	c7 04 24 99 5f 10 f0 	movl   $0xf0105f99,(%esp)$/;"	l
f01013f3	obj/kern/kernel.asm	/^f01013f3:	e8 48 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013f8	obj/kern/kernel.asm	/^f01013f8:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f01013fe	obj/kern/kernel.asm	/^f01013fe:	39 5d c8             	cmp    %ebx,-0x38(%ebp)$/;"	l
f0101401	obj/kern/kernel.asm	/^f0101401:	0f 86 7a 13 00 00    	jbe    f0102781 <mem_init+0x1789>$/;"	l
f0101407	obj/kern/kernel.asm	/^f0101407:	c7 44 24 0c c4 5a 10 	movl   $0xf0105ac4,0xc(%esp)$/;"	l
f010140e	obj/kern/kernel.asm	/^f010140e:	f0 $/;"	l
f010140f	obj/kern/kernel.asm	/^f010140f:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101416	obj/kern/kernel.asm	/^f0101416:	f0 $/;"	l
f0101417	obj/kern/kernel.asm	/^f0101417:	c7 44 24 04 e5 02 00 	movl   $0x2e5,0x4(%esp)$/;"	l
f010141e	obj/kern/kernel.asm	/^f010141e:	00 $/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101426	obj/kern/kernel.asm	/^f0101426:	e8 15 ec ff ff       	call   f0100040 <_panic>$/;"	l
f010142b	obj/kern/kernel.asm	/^f010142b:	c7 44 24 0c 42 60 10 	movl   $0xf0106042,0xc(%esp)$/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432:	f0 $/;"	l
f0101433	obj/kern/kernel.asm	/^f0101433:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	f0 $/;"	l
f010143b	obj/kern/kernel.asm	/^f010143b:	c7 44 24 04 e7 02 00 	movl   $0x2e7,0x4(%esp)$/;"	l
f0101442	obj/kern/kernel.asm	/^f0101442:	00 $/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	e8 f1 eb ff ff       	call   f0100040 <_panic>$/;"	l
f010144f	obj/kern/kernel.asm	/^f010144f:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	eb 03                	jmp    f0101458 <mem_init+0x460>$/;"	l
f0101455	obj/kern/kernel.asm	/^f0101455:	83 c7 01             	add    $0x1,%edi$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	8b 12                	mov    (%edx),%edx$/;"	l
f010145a	obj/kern/kernel.asm	/^f010145a:	85 d2                	test   %edx,%edx$/;"	l
f010145c	obj/kern/kernel.asm	/^f010145c:	0f 85 34 fe ff ff    	jne    f0101296 <mem_init+0x29e>$/;"	l
f0101462	obj/kern/kernel.asm	/^f0101462:	8b 5d cc             	mov    -0x34(%ebp),%ebx$/;"	l
f0101465	obj/kern/kernel.asm	/^f0101465:	85 db                	test   %ebx,%ebx$/;"	l
f0101467	obj/kern/kernel.asm	/^f0101467:	7f 24                	jg     f010148d <mem_init+0x495>$/;"	l
f0101469	obj/kern/kernel.asm	/^f0101469:	c7 44 24 0c 5f 60 10 	movl   $0xf010605f,0xc(%esp)$/;"	l
f0101470	obj/kern/kernel.asm	/^f0101470:	f0 $/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478:	f0 $/;"	l
f0101479	obj/kern/kernel.asm	/^f0101479:	c7 44 24 04 ef 02 00 	movl   $0x2ef,0x4(%esp)$/;"	l
f0101480	obj/kern/kernel.asm	/^f0101480:	00 $/;"	l
f0101481	obj/kern/kernel.asm	/^f0101481:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101488	obj/kern/kernel.asm	/^f0101488:	e8 b3 eb ff ff       	call   f0100040 <_panic>$/;"	l
f010148d	obj/kern/kernel.asm	/^f010148d:	85 ff                	test   %edi,%edi$/;"	l
f010148f	obj/kern/kernel.asm	/^f010148f:	7f 24                	jg     f01014b5 <mem_init+0x4bd>$/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	c7 44 24 0c 71 60 10 	movl   $0xf0106071,0xc(%esp)$/;"	l
f0101498	obj/kern/kernel.asm	/^f0101498:	f0 $/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01014a0	obj/kern/kernel.asm	/^f01014a0:	f0 $/;"	l
f01014a1	obj/kern/kernel.asm	/^f01014a1:	c7 44 24 04 f0 02 00 	movl   $0x2f0,0x4(%esp)$/;"	l
f01014a8	obj/kern/kernel.asm	/^f01014a8:	00 $/;"	l
f01014a9	obj/kern/kernel.asm	/^f01014a9:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01014b0	obj/kern/kernel.asm	/^f01014b0:	e8 8b eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	85 c9                	test   %ecx,%ecx$/;"	l
f01014b7	obj/kern/kernel.asm	/^f01014b7:	74 0a                	je     f01014c3 <mem_init+0x4cb>$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01014be	obj/kern/kernel.asm	/^f01014be:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f01014c1	obj/kern/kernel.asm	/^f01014c1:	eb 21                	jmp    f01014e4 <mem_init+0x4ec>$/;"	l
f01014c3	obj/kern/kernel.asm	/^f01014c3:	c7 44 24 08 82 60 10 	movl   $0xf0106082,0x8(%esp)$/;"	l
f01014ca	obj/kern/kernel.asm	/^f01014ca:	f0 $/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	c7 44 24 04 01 03 00 	movl   $0x301,0x4(%esp)$/;"	l
f01014d2	obj/kern/kernel.asm	/^f01014d2:	00 $/;"	l
f01014d3	obj/kern/kernel.asm	/^f01014d3:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	e8 61 eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01014e2	obj/kern/kernel.asm	/^f01014e2:	8b 00                	mov    (%eax),%eax$/;"	l
f01014e4	obj/kern/kernel.asm	/^f01014e4:	85 c0                	test   %eax,%eax$/;"	l
f01014e6	obj/kern/kernel.asm	/^f01014e6:	75 f7                	jne    f01014df <mem_init+0x4e7>$/;"	l
f01014e8	obj/kern/kernel.asm	/^f01014e8:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01014ef	obj/kern/kernel.asm	/^f01014ef:	e8 a6 f6 ff ff       	call   f0100b9a <page_alloc>$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	89 c7                	mov    %eax,%edi$/;"	l
f01014f6	obj/kern/kernel.asm	/^f01014f6:	85 c0                	test   %eax,%eax$/;"	l
f01014f8	obj/kern/kernel.asm	/^f01014f8:	75 24                	jne    f010151e <mem_init+0x526>$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	c7 44 24 0c 9d 60 10 	movl   $0xf010609d,0xc(%esp)$/;"	l
f0101501	obj/kern/kernel.asm	/^f0101501:	f0 $/;"	l
f0101502	obj/kern/kernel.asm	/^f0101502:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101509	obj/kern/kernel.asm	/^f0101509:	f0 $/;"	l
f010150a	obj/kern/kernel.asm	/^f010150a:	c7 44 24 04 09 03 00 	movl   $0x309,0x4(%esp)$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	00 $/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101519	obj/kern/kernel.asm	/^f0101519:	e8 22 eb ff ff       	call   f0100040 <_panic>$/;"	l
f010151e	obj/kern/kernel.asm	/^f010151e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101525	obj/kern/kernel.asm	/^f0101525:	e8 70 f6 ff ff       	call   f0100b9a <page_alloc>$/;"	l
f010152a	obj/kern/kernel.asm	/^f010152a:	89 c6                	mov    %eax,%esi$/;"	l
f010152c	obj/kern/kernel.asm	/^f010152c:	85 c0                	test   %eax,%eax$/;"	l
f010152e	obj/kern/kernel.asm	/^f010152e:	75 24                	jne    f0101554 <mem_init+0x55c>$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	c7 44 24 0c b3 60 10 	movl   $0xf01060b3,0xc(%esp)$/;"	l
f0101537	obj/kern/kernel.asm	/^f0101537:	f0 $/;"	l
f0101538	obj/kern/kernel.asm	/^f0101538:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	f0 $/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	c7 44 24 04 0a 03 00 	movl   $0x30a,0x4(%esp)$/;"	l
f0101547	obj/kern/kernel.asm	/^f0101547:	00 $/;"	l
f0101548	obj/kern/kernel.asm	/^f0101548:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f010154f	obj/kern/kernel.asm	/^f010154f:	e8 ec ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101554	obj/kern/kernel.asm	/^f0101554:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010155b	obj/kern/kernel.asm	/^f010155b:	e8 3a f6 ff ff       	call   f0100b9a <page_alloc>$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	85 c0                	test   %eax,%eax$/;"	l
f0101565	obj/kern/kernel.asm	/^f0101565:	75 24                	jne    f010158b <mem_init+0x593>$/;"	l
f0101567	obj/kern/kernel.asm	/^f0101567:	c7 44 24 0c c9 60 10 	movl   $0xf01060c9,0xc(%esp)$/;"	l
f010156e	obj/kern/kernel.asm	/^f010156e:	f0 $/;"	l
f010156f	obj/kern/kernel.asm	/^f010156f:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101576	obj/kern/kernel.asm	/^f0101576:	f0 $/;"	l
f0101577	obj/kern/kernel.asm	/^f0101577:	c7 44 24 04 0b 03 00 	movl   $0x30b,0x4(%esp)$/;"	l
f010157e	obj/kern/kernel.asm	/^f010157e:	00 $/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	e8 b5 ea ff ff       	call   f0100040 <_panic>$/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b:	39 f7                	cmp    %esi,%edi$/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d:	75 24                	jne    f01015b3 <mem_init+0x5bb>$/;"	l
f010158f	obj/kern/kernel.asm	/^f010158f:	c7 44 24 0c df 60 10 	movl   $0xf01060df,0xc(%esp)$/;"	l
f0101596	obj/kern/kernel.asm	/^f0101596:	f0 $/;"	l
f0101597	obj/kern/kernel.asm	/^f0101597:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f010159e	obj/kern/kernel.asm	/^f010159e:	f0 $/;"	l
f010159f	obj/kern/kernel.asm	/^f010159f:	c7 44 24 04 0e 03 00 	movl   $0x30e,0x4(%esp)$/;"	l
f01015a6	obj/kern/kernel.asm	/^f01015a6:	00 $/;"	l
f01015a7	obj/kern/kernel.asm	/^f01015a7:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01015ae	obj/kern/kernel.asm	/^f01015ae:	e8 8d ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015b3	obj/kern/kernel.asm	/^f01015b3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01015b6	obj/kern/kernel.asm	/^f01015b6:	39 c6                	cmp    %eax,%esi$/;"	l
f01015b8	obj/kern/kernel.asm	/^f01015b8:	74 04                	je     f01015be <mem_init+0x5c6>$/;"	l
f01015ba	obj/kern/kernel.asm	/^f01015ba:	39 c7                	cmp    %eax,%edi$/;"	l
f01015bc	obj/kern/kernel.asm	/^f01015bc:	75 24                	jne    f01015e2 <mem_init+0x5ea>$/;"	l
f01015be	obj/kern/kernel.asm	/^f01015be:	c7 44 24 0c 0c 5b 10 	movl   $0xf0105b0c,0xc(%esp)$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	f0 $/;"	l
f01015c6	obj/kern/kernel.asm	/^f01015c6:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01015cd	obj/kern/kernel.asm	/^f01015cd:	f0 $/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	c7 44 24 04 0f 03 00 	movl   $0x30f,0x4(%esp)$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	00 $/;"	l
f01015d6	obj/kern/kernel.asm	/^f01015d6:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01015dd	obj/kern/kernel.asm	/^f01015dd:	e8 5e ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015e2	obj/kern/kernel.asm	/^f01015e2:	8b 15 10 9f 22 f0    	mov    0xf0229f10,%edx$/;"	l
f01015e8	obj/kern/kernel.asm	/^f01015e8:	a1 08 9f 22 f0       	mov    0xf0229f08,%eax$/;"	l
f01015ed	obj/kern/kernel.asm	/^f01015ed:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015f0	obj/kern/kernel.asm	/^f01015f0:	89 f9                	mov    %edi,%ecx$/;"	l
f01015f2	obj/kern/kernel.asm	/^f01015f2:	29 d1                	sub    %edx,%ecx$/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f01015fa	obj/kern/kernel.asm	/^f01015fa:	39 c1                	cmp    %eax,%ecx$/;"	l
f01015fc	obj/kern/kernel.asm	/^f01015fc:	72 24                	jb     f0101622 <mem_init+0x62a>$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	c7 44 24 0c f1 60 10 	movl   $0xf01060f1,0xc(%esp)$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	f0 $/;"	l
f0101606	obj/kern/kernel.asm	/^f0101606:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f010160d	obj/kern/kernel.asm	/^f010160d:	f0 $/;"	l
f010160e	obj/kern/kernel.asm	/^f010160e:	c7 44 24 04 10 03 00 	movl   $0x310,0x4(%esp)$/;"	l
f0101615	obj/kern/kernel.asm	/^f0101615:	00 $/;"	l
f0101616	obj/kern/kernel.asm	/^f0101616:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f010161d	obj/kern/kernel.asm	/^f010161d:	e8 1e ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101622	obj/kern/kernel.asm	/^f0101622:	89 f1                	mov    %esi,%ecx$/;"	l
f0101624	obj/kern/kernel.asm	/^f0101624:	29 d1                	sub    %edx,%ecx$/;"	l
f0101626	obj/kern/kernel.asm	/^f0101626:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101629	obj/kern/kernel.asm	/^f0101629:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f010162c	obj/kern/kernel.asm	/^f010162c:	39 c8                	cmp    %ecx,%eax$/;"	l
f010162e	obj/kern/kernel.asm	/^f010162e:	77 24                	ja     f0101654 <mem_init+0x65c>$/;"	l
f0101630	obj/kern/kernel.asm	/^f0101630:	c7 44 24 0c 0e 61 10 	movl   $0xf010610e,0xc(%esp)$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	f0 $/;"	l
f0101638	obj/kern/kernel.asm	/^f0101638:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f010163f	obj/kern/kernel.asm	/^f010163f:	f0 $/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640:	c7 44 24 04 11 03 00 	movl   $0x311,0x4(%esp)$/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	00 $/;"	l
f0101648	obj/kern/kernel.asm	/^f0101648:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f010164f	obj/kern/kernel.asm	/^f010164f:	e8 ec e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101654	obj/kern/kernel.asm	/^f0101654:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	29 d1                	sub    %edx,%ecx$/;"	l
f0101659	obj/kern/kernel.asm	/^f0101659:	89 ca                	mov    %ecx,%edx$/;"	l
f010165b	obj/kern/kernel.asm	/^f010165b:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101661	obj/kern/kernel.asm	/^f0101661:	39 d0                	cmp    %edx,%eax$/;"	l
f0101663	obj/kern/kernel.asm	/^f0101663:	77 24                	ja     f0101689 <mem_init+0x691>$/;"	l
f0101665	obj/kern/kernel.asm	/^f0101665:	c7 44 24 0c 2b 61 10 	movl   $0xf010612b,0xc(%esp)$/;"	l
f010166c	obj/kern/kernel.asm	/^f010166c:	f0 $/;"	l
f010166d	obj/kern/kernel.asm	/^f010166d:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101674	obj/kern/kernel.asm	/^f0101674:	f0 $/;"	l
f0101675	obj/kern/kernel.asm	/^f0101675:	c7 44 24 04 12 03 00 	movl   $0x312,0x4(%esp)$/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	00 $/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101684	obj/kern/kernel.asm	/^f0101684:	e8 b7 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101689	obj/kern/kernel.asm	/^f0101689:	a1 40 92 22 f0       	mov    0xf0229240,%eax$/;"	l
f010168e	obj/kern/kernel.asm	/^f010168e:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	c7 05 40 92 22 f0 00 	movl   $0x0,0xf0229240$/;"	l
f0101698	obj/kern/kernel.asm	/^f0101698:	00 00 00 $/;"	l
f010169b	obj/kern/kernel.asm	/^f010169b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	e8 f3 f4 ff ff       	call   f0100b9a <page_alloc>$/;"	l
f01016a7	obj/kern/kernel.asm	/^f01016a7:	85 c0                	test   %eax,%eax$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	74 24                	je     f01016cf <mem_init+0x6d7>$/;"	l
f01016ab	obj/kern/kernel.asm	/^f01016ab:	c7 44 24 0c 48 61 10 	movl   $0xf0106148,0xc(%esp)$/;"	l
f01016b2	obj/kern/kernel.asm	/^f01016b2:	f0 $/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01016ba	obj/kern/kernel.asm	/^f01016ba:	f0 $/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	c7 44 24 04 19 03 00 	movl   $0x319,0x4(%esp)$/;"	l
f01016c2	obj/kern/kernel.asm	/^f01016c2:	00 $/;"	l
f01016c3	obj/kern/kernel.asm	/^f01016c3:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01016ca	obj/kern/kernel.asm	/^f01016ca:	e8 71 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016cf	obj/kern/kernel.asm	/^f01016cf:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01016d2	obj/kern/kernel.asm	/^f01016d2:	e8 4e f5 ff ff       	call   f0100c25 <page_free>$/;"	l
f01016d7	obj/kern/kernel.asm	/^f01016d7:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01016da	obj/kern/kernel.asm	/^f01016da:	e8 46 f5 ff ff       	call   f0100c25 <page_free>$/;"	l
f01016df	obj/kern/kernel.asm	/^f01016df:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01016e2	obj/kern/kernel.asm	/^f01016e2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01016e5	obj/kern/kernel.asm	/^f01016e5:	e8 3b f5 ff ff       	call   f0100c25 <page_free>$/;"	l
f01016ea	obj/kern/kernel.asm	/^f01016ea:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01016f1	obj/kern/kernel.asm	/^f01016f1:	e8 a4 f4 ff ff       	call   f0100b9a <page_alloc>$/;"	l
f01016f6	obj/kern/kernel.asm	/^f01016f6:	89 c6                	mov    %eax,%esi$/;"	l
f01016f8	obj/kern/kernel.asm	/^f01016f8:	85 c0                	test   %eax,%eax$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	75 24                	jne    f0101720 <mem_init+0x728>$/;"	l
f01016fc	obj/kern/kernel.asm	/^f01016fc:	c7 44 24 0c 9d 60 10 	movl   $0xf010609d,0xc(%esp)$/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	f0 $/;"	l
f0101704	obj/kern/kernel.asm	/^f0101704:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f010170b	obj/kern/kernel.asm	/^f010170b:	f0 $/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c:	c7 44 24 04 20 03 00 	movl   $0x320,0x4(%esp)$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	00 $/;"	l
f0101714	obj/kern/kernel.asm	/^f0101714:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f010171b	obj/kern/kernel.asm	/^f010171b:	e8 20 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101727	obj/kern/kernel.asm	/^f0101727:	e8 6e f4 ff ff       	call   f0100b9a <page_alloc>$/;"	l
f010172c	obj/kern/kernel.asm	/^f010172c:	89 c7                	mov    %eax,%edi$/;"	l
f010172e	obj/kern/kernel.asm	/^f010172e:	85 c0                	test   %eax,%eax$/;"	l
f0101730	obj/kern/kernel.asm	/^f0101730:	75 24                	jne    f0101756 <mem_init+0x75e>$/;"	l
f0101732	obj/kern/kernel.asm	/^f0101732:	c7 44 24 0c b3 60 10 	movl   $0xf01060b3,0xc(%esp)$/;"	l
f0101739	obj/kern/kernel.asm	/^f0101739:	f0 $/;"	l
f010173a	obj/kern/kernel.asm	/^f010173a:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101741	obj/kern/kernel.asm	/^f0101741:	f0 $/;"	l
f0101742	obj/kern/kernel.asm	/^f0101742:	c7 44 24 04 21 03 00 	movl   $0x321,0x4(%esp)$/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	00 $/;"	l
f010174a	obj/kern/kernel.asm	/^f010174a:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101751	obj/kern/kernel.asm	/^f0101751:	e8 ea e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101756	obj/kern/kernel.asm	/^f0101756:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010175d	obj/kern/kernel.asm	/^f010175d:	e8 38 f4 ff ff       	call   f0100b9a <page_alloc>$/;"	l
f0101762	obj/kern/kernel.asm	/^f0101762:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101765	obj/kern/kernel.asm	/^f0101765:	85 c0                	test   %eax,%eax$/;"	l
f0101767	obj/kern/kernel.asm	/^f0101767:	75 24                	jne    f010178d <mem_init+0x795>$/;"	l
f0101769	obj/kern/kernel.asm	/^f0101769:	c7 44 24 0c c9 60 10 	movl   $0xf01060c9,0xc(%esp)$/;"	l
f0101770	obj/kern/kernel.asm	/^f0101770:	f0 $/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	f0 $/;"	l
f0101779	obj/kern/kernel.asm	/^f0101779:	c7 44 24 04 22 03 00 	movl   $0x322,0x4(%esp)$/;"	l
f0101780	obj/kern/kernel.asm	/^f0101780:	00 $/;"	l
f0101781	obj/kern/kernel.asm	/^f0101781:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101788	obj/kern/kernel.asm	/^f0101788:	e8 b3 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010178d	obj/kern/kernel.asm	/^f010178d:	39 fe                	cmp    %edi,%esi$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	75 24                	jne    f01017b5 <mem_init+0x7bd>$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	c7 44 24 0c df 60 10 	movl   $0xf01060df,0xc(%esp)$/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798:	f0 $/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	f0 $/;"	l
f01017a1	obj/kern/kernel.asm	/^f01017a1:	c7 44 24 04 24 03 00 	movl   $0x324,0x4(%esp)$/;"	l
f01017a8	obj/kern/kernel.asm	/^f01017a8:	00 $/;"	l
f01017a9	obj/kern/kernel.asm	/^f01017a9:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01017b0	obj/kern/kernel.asm	/^f01017b0:	e8 8b e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017b5	obj/kern/kernel.asm	/^f01017b5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01017b8	obj/kern/kernel.asm	/^f01017b8:	39 c7                	cmp    %eax,%edi$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	74 04                	je     f01017c0 <mem_init+0x7c8>$/;"	l
f01017bc	obj/kern/kernel.asm	/^f01017bc:	39 c6                	cmp    %eax,%esi$/;"	l
f01017be	obj/kern/kernel.asm	/^f01017be:	75 24                	jne    f01017e4 <mem_init+0x7ec>$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	c7 44 24 0c 0c 5b 10 	movl   $0xf0105b0c,0xc(%esp)$/;"	l
f01017c7	obj/kern/kernel.asm	/^f01017c7:	f0 $/;"	l
f01017c8	obj/kern/kernel.asm	/^f01017c8:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01017cf	obj/kern/kernel.asm	/^f01017cf:	f0 $/;"	l
f01017d0	obj/kern/kernel.asm	/^f01017d0:	c7 44 24 04 25 03 00 	movl   $0x325,0x4(%esp)$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	00 $/;"	l
f01017d8	obj/kern/kernel.asm	/^f01017d8:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	e8 5c e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017e4	obj/kern/kernel.asm	/^f01017e4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	e8 aa f3 ff ff       	call   f0100b9a <page_alloc>$/;"	l
f01017f0	obj/kern/kernel.asm	/^f01017f0:	85 c0                	test   %eax,%eax$/;"	l
f01017f2	obj/kern/kernel.asm	/^f01017f2:	74 24                	je     f0101818 <mem_init+0x820>$/;"	l
f01017f4	obj/kern/kernel.asm	/^f01017f4:	c7 44 24 0c 48 61 10 	movl   $0xf0106148,0xc(%esp)$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	f0 $/;"	l
f01017fc	obj/kern/kernel.asm	/^f01017fc:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101803	obj/kern/kernel.asm	/^f0101803:	f0 $/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	c7 44 24 04 26 03 00 	movl   $0x326,0x4(%esp)$/;"	l
f010180b	obj/kern/kernel.asm	/^f010180b:	00 $/;"	l
f010180c	obj/kern/kernel.asm	/^f010180c:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	e8 28 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101818	obj/kern/kernel.asm	/^f0101818:	89 f0                	mov    %esi,%eax$/;"	l
f010181a	obj/kern/kernel.asm	/^f010181a:	e8 29 f2 ff ff       	call   f0100a48 <page2kva>$/;"	l
f010181f	obj/kern/kernel.asm	/^f010181f:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101826	obj/kern/kernel.asm	/^f0101826:	00 $/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f010182e	obj/kern/kernel.asm	/^f010182e:	00 $/;"	l
f010182f	obj/kern/kernel.asm	/^f010182f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101832	obj/kern/kernel.asm	/^f0101832:	e8 00 2f 00 00       	call   f0104737 <memset>$/;"	l
f0101837	obj/kern/kernel.asm	/^f0101837:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	e8 e6 f3 ff ff       	call   f0100c25 <page_free>$/;"	l
f010183f	obj/kern/kernel.asm	/^f010183f:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101846	obj/kern/kernel.asm	/^f0101846:	e8 4f f3 ff ff       	call   f0100b9a <page_alloc>$/;"	l
f010184b	obj/kern/kernel.asm	/^f010184b:	85 c0                	test   %eax,%eax$/;"	l
f010184d	obj/kern/kernel.asm	/^f010184d:	75 24                	jne    f0101873 <mem_init+0x87b>$/;"	l
f010184f	obj/kern/kernel.asm	/^f010184f:	c7 44 24 0c 57 61 10 	movl   $0xf0106157,0xc(%esp)$/;"	l
f0101856	obj/kern/kernel.asm	/^f0101856:	f0 $/;"	l
f0101857	obj/kern/kernel.asm	/^f0101857:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f010185e	obj/kern/kernel.asm	/^f010185e:	f0 $/;"	l
f010185f	obj/kern/kernel.asm	/^f010185f:	c7 44 24 04 2b 03 00 	movl   $0x32b,0x4(%esp)$/;"	l
f0101866	obj/kern/kernel.asm	/^f0101866:	00 $/;"	l
f0101867	obj/kern/kernel.asm	/^f0101867:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	e8 cd e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101873	obj/kern/kernel.asm	/^f0101873:	39 c6                	cmp    %eax,%esi$/;"	l
f0101875	obj/kern/kernel.asm	/^f0101875:	74 24                	je     f010189b <mem_init+0x8a3>$/;"	l
f0101877	obj/kern/kernel.asm	/^f0101877:	c7 44 24 0c 75 61 10 	movl   $0xf0106175,0xc(%esp)$/;"	l
f010187e	obj/kern/kernel.asm	/^f010187e:	f0 $/;"	l
f010187f	obj/kern/kernel.asm	/^f010187f:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101886	obj/kern/kernel.asm	/^f0101886:	f0 $/;"	l
f0101887	obj/kern/kernel.asm	/^f0101887:	c7 44 24 04 2c 03 00 	movl   $0x32c,0x4(%esp)$/;"	l
f010188e	obj/kern/kernel.asm	/^f010188e:	00 $/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101896	obj/kern/kernel.asm	/^f0101896:	e8 a5 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	89 f0                	mov    %esi,%eax$/;"	l
f010189d	obj/kern/kernel.asm	/^f010189d:	e8 a6 f1 ff ff       	call   f0100a48 <page2kva>$/;"	l
f01018a2	obj/kern/kernel.asm	/^f01018a2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01018a7	obj/kern/kernel.asm	/^f01018a7:	80 3c 10 00          	cmpb   $0x0,(%eax,%edx,1)$/;"	l
f01018ab	obj/kern/kernel.asm	/^f01018ab:	74 24                	je     f01018d1 <mem_init+0x8d9>$/;"	l
f01018ad	obj/kern/kernel.asm	/^f01018ad:	c7 44 24 0c 85 61 10 	movl   $0xf0106185,0xc(%esp)$/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4:	f0 $/;"	l
f01018b5	obj/kern/kernel.asm	/^f01018b5:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01018bc	obj/kern/kernel.asm	/^f01018bc:	f0 $/;"	l
f01018bd	obj/kern/kernel.asm	/^f01018bd:	c7 44 24 04 2f 03 00 	movl   $0x32f,0x4(%esp)$/;"	l
f01018c4	obj/kern/kernel.asm	/^f01018c4:	00 $/;"	l
f01018c5	obj/kern/kernel.asm	/^f01018c5:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01018cc	obj/kern/kernel.asm	/^f01018cc:	e8 6f e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	83 c2 01             	add    $0x1,%edx$/;"	l
f01018d4	obj/kern/kernel.asm	/^f01018d4:	81 fa 00 10 00 00    	cmp    $0x1000,%edx$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	75 cb                	jne    f01018a7 <mem_init+0x8af>$/;"	l
f01018dc	obj/kern/kernel.asm	/^f01018dc:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01018df	obj/kern/kernel.asm	/^f01018df:	a3 40 92 22 f0       	mov    %eax,0xf0229240$/;"	l
f01018e4	obj/kern/kernel.asm	/^f01018e4:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	e8 39 f3 ff ff       	call   f0100c25 <page_free>$/;"	l
f01018ec	obj/kern/kernel.asm	/^f01018ec:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	e8 31 f3 ff ff       	call   f0100c25 <page_free>$/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01018fa	obj/kern/kernel.asm	/^f01018fa:	e8 26 f3 ff ff       	call   f0100c25 <page_free>$/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	a1 40 92 22 f0       	mov    0xf0229240,%eax$/;"	l
f0101904	obj/kern/kernel.asm	/^f0101904:	eb 05                	jmp    f010190b <mem_init+0x913>$/;"	l
f0101906	obj/kern/kernel.asm	/^f0101906:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101909	obj/kern/kernel.asm	/^f0101909:	8b 00                	mov    (%eax),%eax$/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	85 c0                	test   %eax,%eax$/;"	l
f010190d	obj/kern/kernel.asm	/^f010190d:	75 f7                	jne    f0101906 <mem_init+0x90e>$/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	85 db                	test   %ebx,%ebx$/;"	l
f0101911	obj/kern/kernel.asm	/^f0101911:	74 24                	je     f0101937 <mem_init+0x93f>$/;"	l
f0101913	obj/kern/kernel.asm	/^f0101913:	c7 44 24 0c 8f 61 10 	movl   $0xf010618f,0xc(%esp)$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	f0 $/;"	l
f010191b	obj/kern/kernel.asm	/^f010191b:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101922	obj/kern/kernel.asm	/^f0101922:	f0 $/;"	l
f0101923	obj/kern/kernel.asm	/^f0101923:	c7 44 24 04 3c 03 00 	movl   $0x33c,0x4(%esp)$/;"	l
f010192a	obj/kern/kernel.asm	/^f010192a:	00 $/;"	l
f010192b	obj/kern/kernel.asm	/^f010192b:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101932	obj/kern/kernel.asm	/^f0101932:	e8 09 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101937	obj/kern/kernel.asm	/^f0101937:	c7 04 24 2c 5b 10 f0 	movl   $0xf0105b2c,(%esp)$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	e8 51 19 00 00       	call   f0103294 <cprintf>$/;"	l
f0101943	obj/kern/kernel.asm	/^f0101943:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010194a	obj/kern/kernel.asm	/^f010194a:	e8 4b f2 ff ff       	call   f0100b9a <page_alloc>$/;"	l
f010194f	obj/kern/kernel.asm	/^f010194f:	89 c3                	mov    %eax,%ebx$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	85 c0                	test   %eax,%eax$/;"	l
f0101953	obj/kern/kernel.asm	/^f0101953:	75 24                	jne    f0101979 <mem_init+0x981>$/;"	l
f0101955	obj/kern/kernel.asm	/^f0101955:	c7 44 24 0c 9d 60 10 	movl   $0xf010609d,0xc(%esp)$/;"	l
f010195c	obj/kern/kernel.asm	/^f010195c:	f0 $/;"	l
f010195d	obj/kern/kernel.asm	/^f010195d:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101964	obj/kern/kernel.asm	/^f0101964:	f0 $/;"	l
f0101965	obj/kern/kernel.asm	/^f0101965:	c7 44 24 04 a2 03 00 	movl   $0x3a2,0x4(%esp)$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	00 $/;"	l
f010196d	obj/kern/kernel.asm	/^f010196d:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101974	obj/kern/kernel.asm	/^f0101974:	e8 c7 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101979	obj/kern/kernel.asm	/^f0101979:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	e8 15 f2 ff ff       	call   f0100b9a <page_alloc>$/;"	l
f0101985	obj/kern/kernel.asm	/^f0101985:	89 c6                	mov    %eax,%esi$/;"	l
f0101987	obj/kern/kernel.asm	/^f0101987:	85 c0                	test   %eax,%eax$/;"	l
f0101989	obj/kern/kernel.asm	/^f0101989:	75 24                	jne    f01019af <mem_init+0x9b7>$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	c7 44 24 0c b3 60 10 	movl   $0xf01060b3,0xc(%esp)$/;"	l
f0101992	obj/kern/kernel.asm	/^f0101992:	f0 $/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	f0 $/;"	l
f010199b	obj/kern/kernel.asm	/^f010199b:	c7 44 24 04 a3 03 00 	movl   $0x3a3,0x4(%esp)$/;"	l
f01019a2	obj/kern/kernel.asm	/^f01019a2:	00 $/;"	l
f01019a3	obj/kern/kernel.asm	/^f01019a3:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	e8 91 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019af	obj/kern/kernel.asm	/^f01019af:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01019b6	obj/kern/kernel.asm	/^f01019b6:	e8 df f1 ff ff       	call   f0100b9a <page_alloc>$/;"	l
f01019bb	obj/kern/kernel.asm	/^f01019bb:	89 c7                	mov    %eax,%edi$/;"	l
f01019bd	obj/kern/kernel.asm	/^f01019bd:	85 c0                	test   %eax,%eax$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	75 24                	jne    f01019e5 <mem_init+0x9ed>$/;"	l
f01019c1	obj/kern/kernel.asm	/^f01019c1:	c7 44 24 0c c9 60 10 	movl   $0xf01060c9,0xc(%esp)$/;"	l
f01019c8	obj/kern/kernel.asm	/^f01019c8:	f0 $/;"	l
f01019c9	obj/kern/kernel.asm	/^f01019c9:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	f0 $/;"	l
f01019d1	obj/kern/kernel.asm	/^f01019d1:	c7 44 24 04 a4 03 00 	movl   $0x3a4,0x4(%esp)$/;"	l
f01019d8	obj/kern/kernel.asm	/^f01019d8:	00 $/;"	l
f01019d9	obj/kern/kernel.asm	/^f01019d9:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01019e0	obj/kern/kernel.asm	/^f01019e0:	e8 5b e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019e5	obj/kern/kernel.asm	/^f01019e5:	39 f3                	cmp    %esi,%ebx$/;"	l
f01019e7	obj/kern/kernel.asm	/^f01019e7:	75 24                	jne    f0101a0d <mem_init+0xa15>$/;"	l
f01019e9	obj/kern/kernel.asm	/^f01019e9:	c7 44 24 0c df 60 10 	movl   $0xf01060df,0xc(%esp)$/;"	l
f01019f0	obj/kern/kernel.asm	/^f01019f0:	f0 $/;"	l
f01019f1	obj/kern/kernel.asm	/^f01019f1:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01019f8	obj/kern/kernel.asm	/^f01019f8:	f0 $/;"	l
f01019f9	obj/kern/kernel.asm	/^f01019f9:	c7 44 24 04 a7 03 00 	movl   $0x3a7,0x4(%esp)$/;"	l
f0101a00	obj/kern/kernel.asm	/^f0101a00:	00 $/;"	l
f0101a01	obj/kern/kernel.asm	/^f0101a01:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101a08	obj/kern/kernel.asm	/^f0101a08:	e8 33 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a0d	obj/kern/kernel.asm	/^f0101a0d:	39 c6                	cmp    %eax,%esi$/;"	l
f0101a0f	obj/kern/kernel.asm	/^f0101a0f:	74 04                	je     f0101a15 <mem_init+0xa1d>$/;"	l
f0101a11	obj/kern/kernel.asm	/^f0101a11:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101a13	obj/kern/kernel.asm	/^f0101a13:	75 24                	jne    f0101a39 <mem_init+0xa41>$/;"	l
f0101a15	obj/kern/kernel.asm	/^f0101a15:	c7 44 24 0c 0c 5b 10 	movl   $0xf0105b0c,0xc(%esp)$/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	f0 $/;"	l
f0101a1d	obj/kern/kernel.asm	/^f0101a1d:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101a24	obj/kern/kernel.asm	/^f0101a24:	f0 $/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	c7 44 24 04 a8 03 00 	movl   $0x3a8,0x4(%esp)$/;"	l
f0101a2c	obj/kern/kernel.asm	/^f0101a2c:	00 $/;"	l
f0101a2d	obj/kern/kernel.asm	/^f0101a2d:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	e8 07 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a39	obj/kern/kernel.asm	/^f0101a39:	a1 40 92 22 f0       	mov    0xf0229240,%eax$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	c7 05 40 92 22 f0 00 	movl   $0x0,0xf0229240$/;"	l
f0101a48	obj/kern/kernel.asm	/^f0101a48:	00 00 00 $/;"	l
f0101a4b	obj/kern/kernel.asm	/^f0101a4b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101a52	obj/kern/kernel.asm	/^f0101a52:	e8 43 f1 ff ff       	call   f0100b9a <page_alloc>$/;"	l
f0101a57	obj/kern/kernel.asm	/^f0101a57:	85 c0                	test   %eax,%eax$/;"	l
f0101a59	obj/kern/kernel.asm	/^f0101a59:	74 24                	je     f0101a7f <mem_init+0xa87>$/;"	l
f0101a5b	obj/kern/kernel.asm	/^f0101a5b:	c7 44 24 0c 48 61 10 	movl   $0xf0106148,0xc(%esp)$/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	f0 $/;"	l
f0101a63	obj/kern/kernel.asm	/^f0101a63:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101a6a	obj/kern/kernel.asm	/^f0101a6a:	f0 $/;"	l
f0101a6b	obj/kern/kernel.asm	/^f0101a6b:	c7 44 24 04 af 03 00 	movl   $0x3af,0x4(%esp)$/;"	l
f0101a72	obj/kern/kernel.asm	/^f0101a72:	00 $/;"	l
f0101a73	obj/kern/kernel.asm	/^f0101a73:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101a7a	obj/kern/kernel.asm	/^f0101a7a:	e8 c1 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a7f	obj/kern/kernel.asm	/^f0101a7f:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0101a82	obj/kern/kernel.asm	/^f0101a82:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101a86	obj/kern/kernel.asm	/^f0101a86:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101a8d	obj/kern/kernel.asm	/^f0101a8d:	00 $/;"	l
f0101a8e	obj/kern/kernel.asm	/^f0101a8e:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f0101a93	obj/kern/kernel.asm	/^f0101a93:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a96	obj/kern/kernel.asm	/^f0101a96:	e8 b5 f3 ff ff       	call   f0100e50 <page_lookup>$/;"	l
f0101a9b	obj/kern/kernel.asm	/^f0101a9b:	85 c0                	test   %eax,%eax$/;"	l
f0101a9d	obj/kern/kernel.asm	/^f0101a9d:	74 24                	je     f0101ac3 <mem_init+0xacb>$/;"	l
f0101a9f	obj/kern/kernel.asm	/^f0101a9f:	c7 44 24 0c 4c 5b 10 	movl   $0xf0105b4c,0xc(%esp)$/;"	l
f0101aa6	obj/kern/kernel.asm	/^f0101aa6:	f0 $/;"	l
f0101aa7	obj/kern/kernel.asm	/^f0101aa7:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101aae	obj/kern/kernel.asm	/^f0101aae:	f0 $/;"	l
f0101aaf	obj/kern/kernel.asm	/^f0101aaf:	c7 44 24 04 b3 03 00 	movl   $0x3b3,0x4(%esp)$/;"	l
f0101ab6	obj/kern/kernel.asm	/^f0101ab6:	00 $/;"	l
f0101ab7	obj/kern/kernel.asm	/^f0101ab7:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101abe	obj/kern/kernel.asm	/^f0101abe:	e8 7d e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ac3	obj/kern/kernel.asm	/^f0101ac3:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101aca	obj/kern/kernel.asm	/^f0101aca:	00 $/;"	l
f0101acb	obj/kern/kernel.asm	/^f0101acb:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101ad2	obj/kern/kernel.asm	/^f0101ad2:	00 $/;"	l
f0101ad3	obj/kern/kernel.asm	/^f0101ad3:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101adf	obj/kern/kernel.asm	/^f0101adf:	e8 62 f4 ff ff       	call   f0100f46 <page_insert>$/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	85 c0                	test   %eax,%eax$/;"	l
f0101ae6	obj/kern/kernel.asm	/^f0101ae6:	78 24                	js     f0101b0c <mem_init+0xb14>$/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	c7 44 24 0c 84 5b 10 	movl   $0xf0105b84,0xc(%esp)$/;"	l
f0101aef	obj/kern/kernel.asm	/^f0101aef:	f0 $/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101af7	obj/kern/kernel.asm	/^f0101af7:	f0 $/;"	l
f0101af8	obj/kern/kernel.asm	/^f0101af8:	c7 44 24 04 b6 03 00 	movl   $0x3b6,0x4(%esp)$/;"	l
f0101aff	obj/kern/kernel.asm	/^f0101aff:	00 $/;"	l
f0101b00	obj/kern/kernel.asm	/^f0101b00:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101b07	obj/kern/kernel.asm	/^f0101b07:	e8 34 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b0c	obj/kern/kernel.asm	/^f0101b0c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101b0f	obj/kern/kernel.asm	/^f0101b0f:	e8 11 f1 ff ff       	call   f0100c25 <page_free>$/;"	l
f0101b14	obj/kern/kernel.asm	/^f0101b14:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101b1b	obj/kern/kernel.asm	/^f0101b1b:	00 $/;"	l
f0101b1c	obj/kern/kernel.asm	/^f0101b1c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101b23	obj/kern/kernel.asm	/^f0101b23:	00 $/;"	l
f0101b24	obj/kern/kernel.asm	/^f0101b24:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f0101b2d	obj/kern/kernel.asm	/^f0101b2d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101b30	obj/kern/kernel.asm	/^f0101b30:	e8 11 f4 ff ff       	call   f0100f46 <page_insert>$/;"	l
f0101b35	obj/kern/kernel.asm	/^f0101b35:	85 c0                	test   %eax,%eax$/;"	l
f0101b37	obj/kern/kernel.asm	/^f0101b37:	74 24                	je     f0101b5d <mem_init+0xb65>$/;"	l
f0101b39	obj/kern/kernel.asm	/^f0101b39:	c7 44 24 0c b4 5b 10 	movl   $0xf0105bb4,0xc(%esp)$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	f0 $/;"	l
f0101b41	obj/kern/kernel.asm	/^f0101b41:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101b48	obj/kern/kernel.asm	/^f0101b48:	f0 $/;"	l
f0101b49	obj/kern/kernel.asm	/^f0101b49:	c7 44 24 04 b9 03 00 	movl   $0x3b9,0x4(%esp)$/;"	l
f0101b50	obj/kern/kernel.asm	/^f0101b50:	00 $/;"	l
f0101b51	obj/kern/kernel.asm	/^f0101b51:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101b58	obj/kern/kernel.asm	/^f0101b58:	e8 e3 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b5d	obj/kern/kernel.asm	/^f0101b5d:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f0101b62	obj/kern/kernel.asm	/^f0101b62:	8b 0d 10 9f 22 f0    	mov    0xf0229f10,%ecx$/;"	l
f0101b68	obj/kern/kernel.asm	/^f0101b68:	89 ca                	mov    %ecx,%edx$/;"	l
f0101b6a	obj/kern/kernel.asm	/^f0101b6a:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0101b6d	obj/kern/kernel.asm	/^f0101b6d:	8b 08                	mov    (%eax),%ecx$/;"	l
f0101b6f	obj/kern/kernel.asm	/^f0101b6f:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f0101b78	obj/kern/kernel.asm	/^f0101b78:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101b7a	obj/kern/kernel.asm	/^f0101b7a:	29 d1                	sub    %edx,%ecx$/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	89 ca                	mov    %ecx,%edx$/;"	l
f0101b7e	obj/kern/kernel.asm	/^f0101b7e:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101b81	obj/kern/kernel.asm	/^f0101b81:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	39 55 cc             	cmp    %edx,-0x34(%ebp)$/;"	l
f0101b87	obj/kern/kernel.asm	/^f0101b87:	74 24                	je     f0101bad <mem_init+0xbb5>$/;"	l
f0101b89	obj/kern/kernel.asm	/^f0101b89:	c7 44 24 0c e4 5b 10 	movl   $0xf0105be4,0xc(%esp)$/;"	l
f0101b90	obj/kern/kernel.asm	/^f0101b90:	f0 $/;"	l
f0101b91	obj/kern/kernel.asm	/^f0101b91:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101b98	obj/kern/kernel.asm	/^f0101b98:	f0 $/;"	l
f0101b99	obj/kern/kernel.asm	/^f0101b99:	c7 44 24 04 ba 03 00 	movl   $0x3ba,0x4(%esp)$/;"	l
f0101ba0	obj/kern/kernel.asm	/^f0101ba0:	00 $/;"	l
f0101ba1	obj/kern/kernel.asm	/^f0101ba1:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101ba8	obj/kern/kernel.asm	/^f0101ba8:	e8 93 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bad	obj/kern/kernel.asm	/^f0101bad:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101bb2	obj/kern/kernel.asm	/^f0101bb2:	e8 d6 ee ff ff       	call   f0100a8d <check_va2pa>$/;"	l
f0101bb7	obj/kern/kernel.asm	/^f0101bb7:	89 f2                	mov    %esi,%edx$/;"	l
f0101bb9	obj/kern/kernel.asm	/^f0101bb9:	2b 55 d0             	sub    -0x30(%ebp),%edx$/;"	l
f0101bbc	obj/kern/kernel.asm	/^f0101bbc:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101bbf	obj/kern/kernel.asm	/^f0101bbf:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101bc2	obj/kern/kernel.asm	/^f0101bc2:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101bca	obj/kern/kernel.asm	/^f0101bca:	c7 04 24 9a 61 10 f0 	movl   $0xf010619a,(%esp)$/;"	l
f0101bd1	obj/kern/kernel.asm	/^f0101bd1:	e8 be 16 00 00       	call   f0103294 <cprintf>$/;"	l
f0101bd6	obj/kern/kernel.asm	/^f0101bd6:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f0101bdb	obj/kern/kernel.asm	/^f0101bdb:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101bde	obj/kern/kernel.asm	/^f0101bde:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101be3	obj/kern/kernel.asm	/^f0101be3:	e8 a5 ee ff ff       	call   f0100a8d <check_va2pa>$/;"	l
f0101be8	obj/kern/kernel.asm	/^f0101be8:	89 f2                	mov    %esi,%edx$/;"	l
f0101bea	obj/kern/kernel.asm	/^f0101bea:	2b 15 10 9f 22 f0    	sub    0xf0229f10,%edx$/;"	l
f0101bf0	obj/kern/kernel.asm	/^f0101bf0:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101bf3	obj/kern/kernel.asm	/^f0101bf3:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101bf6	obj/kern/kernel.asm	/^f0101bf6:	39 d0                	cmp    %edx,%eax$/;"	l
f0101bf8	obj/kern/kernel.asm	/^f0101bf8:	74 24                	je     f0101c1e <mem_init+0xc26>$/;"	l
f0101bfa	obj/kern/kernel.asm	/^f0101bfa:	c7 44 24 0c 0c 5c 10 	movl   $0xf0105c0c,0xc(%esp)$/;"	l
f0101c01	obj/kern/kernel.asm	/^f0101c01:	f0 $/;"	l
f0101c02	obj/kern/kernel.asm	/^f0101c02:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101c09	obj/kern/kernel.asm	/^f0101c09:	f0 $/;"	l
f0101c0a	obj/kern/kernel.asm	/^f0101c0a:	c7 44 24 04 bc 03 00 	movl   $0x3bc,0x4(%esp)$/;"	l
f0101c11	obj/kern/kernel.asm	/^f0101c11:	00 $/;"	l
f0101c12	obj/kern/kernel.asm	/^f0101c12:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101c19	obj/kern/kernel.asm	/^f0101c19:	e8 22 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c1e	obj/kern/kernel.asm	/^f0101c1e:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101c23	obj/kern/kernel.asm	/^f0101c23:	74 24                	je     f0101c49 <mem_init+0xc51>$/;"	l
f0101c25	obj/kern/kernel.asm	/^f0101c25:	c7 44 24 0c a1 61 10 	movl   $0xf01061a1,0xc(%esp)$/;"	l
f0101c2c	obj/kern/kernel.asm	/^f0101c2c:	f0 $/;"	l
f0101c2d	obj/kern/kernel.asm	/^f0101c2d:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101c34	obj/kern/kernel.asm	/^f0101c34:	f0 $/;"	l
f0101c35	obj/kern/kernel.asm	/^f0101c35:	c7 44 24 04 bd 03 00 	movl   $0x3bd,0x4(%esp)$/;"	l
f0101c3c	obj/kern/kernel.asm	/^f0101c3c:	00 $/;"	l
f0101c3d	obj/kern/kernel.asm	/^f0101c3d:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101c44	obj/kern/kernel.asm	/^f0101c44:	e8 f7 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c49	obj/kern/kernel.asm	/^f0101c49:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101c4e	obj/kern/kernel.asm	/^f0101c4e:	74 24                	je     f0101c74 <mem_init+0xc7c>$/;"	l
f0101c50	obj/kern/kernel.asm	/^f0101c50:	c7 44 24 0c b2 61 10 	movl   $0xf01061b2,0xc(%esp)$/;"	l
f0101c57	obj/kern/kernel.asm	/^f0101c57:	f0 $/;"	l
f0101c58	obj/kern/kernel.asm	/^f0101c58:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101c5f	obj/kern/kernel.asm	/^f0101c5f:	f0 $/;"	l
f0101c60	obj/kern/kernel.asm	/^f0101c60:	c7 44 24 04 be 03 00 	movl   $0x3be,0x4(%esp)$/;"	l
f0101c67	obj/kern/kernel.asm	/^f0101c67:	00 $/;"	l
f0101c68	obj/kern/kernel.asm	/^f0101c68:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101c6f	obj/kern/kernel.asm	/^f0101c6f:	e8 cc e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c74	obj/kern/kernel.asm	/^f0101c74:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101c7b	obj/kern/kernel.asm	/^f0101c7b:	00 $/;"	l
f0101c7c	obj/kern/kernel.asm	/^f0101c7c:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101c83	obj/kern/kernel.asm	/^f0101c83:	00 $/;"	l
f0101c84	obj/kern/kernel.asm	/^f0101c84:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101c88	obj/kern/kernel.asm	/^f0101c88:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101c8b	obj/kern/kernel.asm	/^f0101c8b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c8e	obj/kern/kernel.asm	/^f0101c8e:	e8 b3 f2 ff ff       	call   f0100f46 <page_insert>$/;"	l
f0101c93	obj/kern/kernel.asm	/^f0101c93:	85 c0                	test   %eax,%eax$/;"	l
f0101c95	obj/kern/kernel.asm	/^f0101c95:	74 24                	je     f0101cbb <mem_init+0xcc3>$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	c7 44 24 0c 3c 5c 10 	movl   $0xf0105c3c,0xc(%esp)$/;"	l
f0101c9e	obj/kern/kernel.asm	/^f0101c9e:	f0 $/;"	l
f0101c9f	obj/kern/kernel.asm	/^f0101c9f:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101ca6	obj/kern/kernel.asm	/^f0101ca6:	f0 $/;"	l
f0101ca7	obj/kern/kernel.asm	/^f0101ca7:	c7 44 24 04 c1 03 00 	movl   $0x3c1,0x4(%esp)$/;"	l
f0101cae	obj/kern/kernel.asm	/^f0101cae:	00 $/;"	l
f0101caf	obj/kern/kernel.asm	/^f0101caf:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101cb6	obj/kern/kernel.asm	/^f0101cb6:	e8 85 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cbb	obj/kern/kernel.asm	/^f0101cbb:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101cc0	obj/kern/kernel.asm	/^f0101cc0:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f0101cc5	obj/kern/kernel.asm	/^f0101cc5:	e8 c3 ed ff ff       	call   f0100a8d <check_va2pa>$/;"	l
f0101cca	obj/kern/kernel.asm	/^f0101cca:	89 fa                	mov    %edi,%edx$/;"	l
f0101ccc	obj/kern/kernel.asm	/^f0101ccc:	2b 15 10 9f 22 f0    	sub    0xf0229f10,%edx$/;"	l
f0101cd2	obj/kern/kernel.asm	/^f0101cd2:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101cd5	obj/kern/kernel.asm	/^f0101cd5:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101cd8	obj/kern/kernel.asm	/^f0101cd8:	39 d0                	cmp    %edx,%eax$/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	74 24                	je     f0101d00 <mem_init+0xd08>$/;"	l
f0101cdc	obj/kern/kernel.asm	/^f0101cdc:	c7 44 24 0c 78 5c 10 	movl   $0xf0105c78,0xc(%esp)$/;"	l
f0101ce3	obj/kern/kernel.asm	/^f0101ce3:	f0 $/;"	l
f0101ce4	obj/kern/kernel.asm	/^f0101ce4:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101ceb	obj/kern/kernel.asm	/^f0101ceb:	f0 $/;"	l
f0101cec	obj/kern/kernel.asm	/^f0101cec:	c7 44 24 04 c2 03 00 	movl   $0x3c2,0x4(%esp)$/;"	l
f0101cf3	obj/kern/kernel.asm	/^f0101cf3:	00 $/;"	l
f0101cf4	obj/kern/kernel.asm	/^f0101cf4:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101cfb	obj/kern/kernel.asm	/^f0101cfb:	e8 40 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d00	obj/kern/kernel.asm	/^f0101d00:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101d05	obj/kern/kernel.asm	/^f0101d05:	74 24                	je     f0101d2b <mem_init+0xd33>$/;"	l
f0101d07	obj/kern/kernel.asm	/^f0101d07:	c7 44 24 0c c3 61 10 	movl   $0xf01061c3,0xc(%esp)$/;"	l
f0101d0e	obj/kern/kernel.asm	/^f0101d0e:	f0 $/;"	l
f0101d0f	obj/kern/kernel.asm	/^f0101d0f:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101d16	obj/kern/kernel.asm	/^f0101d16:	f0 $/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	c7 44 24 04 c3 03 00 	movl   $0x3c3,0x4(%esp)$/;"	l
f0101d1e	obj/kern/kernel.asm	/^f0101d1e:	00 $/;"	l
f0101d1f	obj/kern/kernel.asm	/^f0101d1f:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101d26	obj/kern/kernel.asm	/^f0101d26:	e8 15 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d2b	obj/kern/kernel.asm	/^f0101d2b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d32	obj/kern/kernel.asm	/^f0101d32:	e8 63 ee ff ff       	call   f0100b9a <page_alloc>$/;"	l
f0101d37	obj/kern/kernel.asm	/^f0101d37:	85 c0                	test   %eax,%eax$/;"	l
f0101d39	obj/kern/kernel.asm	/^f0101d39:	74 24                	je     f0101d5f <mem_init+0xd67>$/;"	l
f0101d3b	obj/kern/kernel.asm	/^f0101d3b:	c7 44 24 0c 48 61 10 	movl   $0xf0106148,0xc(%esp)$/;"	l
f0101d42	obj/kern/kernel.asm	/^f0101d42:	f0 $/;"	l
f0101d43	obj/kern/kernel.asm	/^f0101d43:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101d4a	obj/kern/kernel.asm	/^f0101d4a:	f0 $/;"	l
f0101d4b	obj/kern/kernel.asm	/^f0101d4b:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)$/;"	l
f0101d52	obj/kern/kernel.asm	/^f0101d52:	00 $/;"	l
f0101d53	obj/kern/kernel.asm	/^f0101d53:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101d5a	obj/kern/kernel.asm	/^f0101d5a:	e8 e1 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d5f	obj/kern/kernel.asm	/^f0101d5f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101d66	obj/kern/kernel.asm	/^f0101d66:	00 $/;"	l
f0101d67	obj/kern/kernel.asm	/^f0101d67:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101d6e	obj/kern/kernel.asm	/^f0101d6e:	00 $/;"	l
f0101d6f	obj/kern/kernel.asm	/^f0101d6f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101d73	obj/kern/kernel.asm	/^f0101d73:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f0101d78	obj/kern/kernel.asm	/^f0101d78:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101d7b	obj/kern/kernel.asm	/^f0101d7b:	e8 c6 f1 ff ff       	call   f0100f46 <page_insert>$/;"	l
f0101d80	obj/kern/kernel.asm	/^f0101d80:	85 c0                	test   %eax,%eax$/;"	l
f0101d82	obj/kern/kernel.asm	/^f0101d82:	74 24                	je     f0101da8 <mem_init+0xdb0>$/;"	l
f0101d84	obj/kern/kernel.asm	/^f0101d84:	c7 44 24 0c 3c 5c 10 	movl   $0xf0105c3c,0xc(%esp)$/;"	l
f0101d8b	obj/kern/kernel.asm	/^f0101d8b:	f0 $/;"	l
f0101d8c	obj/kern/kernel.asm	/^f0101d8c:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101d93	obj/kern/kernel.asm	/^f0101d93:	f0 $/;"	l
f0101d94	obj/kern/kernel.asm	/^f0101d94:	c7 44 24 04 c9 03 00 	movl   $0x3c9,0x4(%esp)$/;"	l
f0101d9b	obj/kern/kernel.asm	/^f0101d9b:	00 $/;"	l
f0101d9c	obj/kern/kernel.asm	/^f0101d9c:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101da3	obj/kern/kernel.asm	/^f0101da3:	e8 98 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101da8	obj/kern/kernel.asm	/^f0101da8:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f0101db2	obj/kern/kernel.asm	/^f0101db2:	e8 d6 ec ff ff       	call   f0100a8d <check_va2pa>$/;"	l
f0101db7	obj/kern/kernel.asm	/^f0101db7:	89 fa                	mov    %edi,%edx$/;"	l
f0101db9	obj/kern/kernel.asm	/^f0101db9:	2b 15 10 9f 22 f0    	sub    0xf0229f10,%edx$/;"	l
f0101dbf	obj/kern/kernel.asm	/^f0101dbf:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101dc2	obj/kern/kernel.asm	/^f0101dc2:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101dc5	obj/kern/kernel.asm	/^f0101dc5:	39 d0                	cmp    %edx,%eax$/;"	l
f0101dc7	obj/kern/kernel.asm	/^f0101dc7:	74 24                	je     f0101ded <mem_init+0xdf5>$/;"	l
f0101dc9	obj/kern/kernel.asm	/^f0101dc9:	c7 44 24 0c 78 5c 10 	movl   $0xf0105c78,0xc(%esp)$/;"	l
f0101dd0	obj/kern/kernel.asm	/^f0101dd0:	f0 $/;"	l
f0101dd1	obj/kern/kernel.asm	/^f0101dd1:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101dd8	obj/kern/kernel.asm	/^f0101dd8:	f0 $/;"	l
f0101dd9	obj/kern/kernel.asm	/^f0101dd9:	c7 44 24 04 ca 03 00 	movl   $0x3ca,0x4(%esp)$/;"	l
f0101de0	obj/kern/kernel.asm	/^f0101de0:	00 $/;"	l
f0101de1	obj/kern/kernel.asm	/^f0101de1:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101de8	obj/kern/kernel.asm	/^f0101de8:	e8 53 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ded	obj/kern/kernel.asm	/^f0101ded:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101df2	obj/kern/kernel.asm	/^f0101df2:	74 24                	je     f0101e18 <mem_init+0xe20>$/;"	l
f0101df4	obj/kern/kernel.asm	/^f0101df4:	c7 44 24 0c c3 61 10 	movl   $0xf01061c3,0xc(%esp)$/;"	l
f0101dfb	obj/kern/kernel.asm	/^f0101dfb:	f0 $/;"	l
f0101dfc	obj/kern/kernel.asm	/^f0101dfc:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101e03	obj/kern/kernel.asm	/^f0101e03:	f0 $/;"	l
f0101e04	obj/kern/kernel.asm	/^f0101e04:	c7 44 24 04 cb 03 00 	movl   $0x3cb,0x4(%esp)$/;"	l
f0101e0b	obj/kern/kernel.asm	/^f0101e0b:	00 $/;"	l
f0101e0c	obj/kern/kernel.asm	/^f0101e0c:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101e13	obj/kern/kernel.asm	/^f0101e13:	e8 28 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e18	obj/kern/kernel.asm	/^f0101e18:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101e1f	obj/kern/kernel.asm	/^f0101e1f:	e8 76 ed ff ff       	call   f0100b9a <page_alloc>$/;"	l
f0101e24	obj/kern/kernel.asm	/^f0101e24:	85 c0                	test   %eax,%eax$/;"	l
f0101e26	obj/kern/kernel.asm	/^f0101e26:	74 24                	je     f0101e4c <mem_init+0xe54>$/;"	l
f0101e28	obj/kern/kernel.asm	/^f0101e28:	c7 44 24 0c 48 61 10 	movl   $0xf0106148,0xc(%esp)$/;"	l
f0101e2f	obj/kern/kernel.asm	/^f0101e2f:	f0 $/;"	l
f0101e30	obj/kern/kernel.asm	/^f0101e30:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101e37	obj/kern/kernel.asm	/^f0101e37:	f0 $/;"	l
f0101e38	obj/kern/kernel.asm	/^f0101e38:	c7 44 24 04 cf 03 00 	movl   $0x3cf,0x4(%esp)$/;"	l
f0101e3f	obj/kern/kernel.asm	/^f0101e3f:	00 $/;"	l
f0101e40	obj/kern/kernel.asm	/^f0101e40:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101e47	obj/kern/kernel.asm	/^f0101e47:	e8 f4 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	8b 15 0c 9f 22 f0    	mov    0xf0229f0c,%edx$/;"	l
f0101e52	obj/kern/kernel.asm	/^f0101e52:	8b 02                	mov    (%edx),%eax$/;"	l
f0101e54	obj/kern/kernel.asm	/^f0101e54:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101e59	obj/kern/kernel.asm	/^f0101e59:	89 c1                	mov    %eax,%ecx$/;"	l
f0101e5b	obj/kern/kernel.asm	/^f0101e5b:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101e5e	obj/kern/kernel.asm	/^f0101e5e:	3b 0d 08 9f 22 f0    	cmp    0xf0229f08,%ecx$/;"	l
f0101e64	obj/kern/kernel.asm	/^f0101e64:	72 20                	jb     f0101e86 <mem_init+0xe8e>$/;"	l
f0101e66	obj/kern/kernel.asm	/^f0101e66:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101e6a	obj/kern/kernel.asm	/^f0101e6a:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f0101e71	obj/kern/kernel.asm	/^f0101e71:	f0 $/;"	l
f0101e72	obj/kern/kernel.asm	/^f0101e72:	c7 44 24 04 d2 03 00 	movl   $0x3d2,0x4(%esp)$/;"	l
f0101e79	obj/kern/kernel.asm	/^f0101e79:	00 $/;"	l
f0101e7a	obj/kern/kernel.asm	/^f0101e7a:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101e81	obj/kern/kernel.asm	/^f0101e81:	e8 ba e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e86	obj/kern/kernel.asm	/^f0101e86:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101e8b	obj/kern/kernel.asm	/^f0101e8b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101e8e	obj/kern/kernel.asm	/^f0101e8e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101e95	obj/kern/kernel.asm	/^f0101e95:	00 $/;"	l
f0101e96	obj/kern/kernel.asm	/^f0101e96:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0101e9d	obj/kern/kernel.asm	/^f0101e9d:	00 $/;"	l
f0101e9e	obj/kern/kernel.asm	/^f0101e9e:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0101ea1	obj/kern/kernel.asm	/^f0101ea1:	e8 fe ed ff ff       	call   f0100ca4 <pgdir_walk>$/;"	l
f0101ea6	obj/kern/kernel.asm	/^f0101ea6:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0101ea9	obj/kern/kernel.asm	/^f0101ea9:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f0101eac	obj/kern/kernel.asm	/^f0101eac:	39 d0                	cmp    %edx,%eax$/;"	l
f0101eae	obj/kern/kernel.asm	/^f0101eae:	74 24                	je     f0101ed4 <mem_init+0xedc>$/;"	l
f0101eb0	obj/kern/kernel.asm	/^f0101eb0:	c7 44 24 0c a8 5c 10 	movl   $0xf0105ca8,0xc(%esp)$/;"	l
f0101eb7	obj/kern/kernel.asm	/^f0101eb7:	f0 $/;"	l
f0101eb8	obj/kern/kernel.asm	/^f0101eb8:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101ebf	obj/kern/kernel.asm	/^f0101ebf:	f0 $/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	c7 44 24 04 d3 03 00 	movl   $0x3d3,0x4(%esp)$/;"	l
f0101ec7	obj/kern/kernel.asm	/^f0101ec7:	00 $/;"	l
f0101ec8	obj/kern/kernel.asm	/^f0101ec8:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101ecf	obj/kern/kernel.asm	/^f0101ecf:	e8 6c e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ed4	obj/kern/kernel.asm	/^f0101ed4:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0101edb	obj/kern/kernel.asm	/^f0101edb:	00 $/;"	l
f0101edc	obj/kern/kernel.asm	/^f0101edc:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101ee3	obj/kern/kernel.asm	/^f0101ee3:	00 $/;"	l
f0101ee4	obj/kern/kernel.asm	/^f0101ee4:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101ee8	obj/kern/kernel.asm	/^f0101ee8:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ef0	obj/kern/kernel.asm	/^f0101ef0:	e8 51 f0 ff ff       	call   f0100f46 <page_insert>$/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	85 c0                	test   %eax,%eax$/;"	l
f0101ef7	obj/kern/kernel.asm	/^f0101ef7:	74 24                	je     f0101f1d <mem_init+0xf25>$/;"	l
f0101ef9	obj/kern/kernel.asm	/^f0101ef9:	c7 44 24 0c e8 5c 10 	movl   $0xf0105ce8,0xc(%esp)$/;"	l
f0101f00	obj/kern/kernel.asm	/^f0101f00:	f0 $/;"	l
f0101f01	obj/kern/kernel.asm	/^f0101f01:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101f08	obj/kern/kernel.asm	/^f0101f08:	f0 $/;"	l
f0101f09	obj/kern/kernel.asm	/^f0101f09:	c7 44 24 04 d6 03 00 	movl   $0x3d6,0x4(%esp)$/;"	l
f0101f10	obj/kern/kernel.asm	/^f0101f10:	00 $/;"	l
f0101f11	obj/kern/kernel.asm	/^f0101f11:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101f18	obj/kern/kernel.asm	/^f0101f18:	e8 23 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f1d	obj/kern/kernel.asm	/^f0101f1d:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f0101f22	obj/kern/kernel.asm	/^f0101f22:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101f25	obj/kern/kernel.asm	/^f0101f25:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101f2a	obj/kern/kernel.asm	/^f0101f2a:	e8 5e eb ff ff       	call   f0100a8d <check_va2pa>$/;"	l
f0101f2f	obj/kern/kernel.asm	/^f0101f2f:	89 fa                	mov    %edi,%edx$/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	2b 15 10 9f 22 f0    	sub    0xf0229f10,%edx$/;"	l
f0101f37	obj/kern/kernel.asm	/^f0101f37:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101f3a	obj/kern/kernel.asm	/^f0101f3a:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101f3d	obj/kern/kernel.asm	/^f0101f3d:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f3f	obj/kern/kernel.asm	/^f0101f3f:	74 24                	je     f0101f65 <mem_init+0xf6d>$/;"	l
f0101f41	obj/kern/kernel.asm	/^f0101f41:	c7 44 24 0c 78 5c 10 	movl   $0xf0105c78,0xc(%esp)$/;"	l
f0101f48	obj/kern/kernel.asm	/^f0101f48:	f0 $/;"	l
f0101f49	obj/kern/kernel.asm	/^f0101f49:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101f50	obj/kern/kernel.asm	/^f0101f50:	f0 $/;"	l
f0101f51	obj/kern/kernel.asm	/^f0101f51:	c7 44 24 04 d7 03 00 	movl   $0x3d7,0x4(%esp)$/;"	l
f0101f58	obj/kern/kernel.asm	/^f0101f58:	00 $/;"	l
f0101f59	obj/kern/kernel.asm	/^f0101f59:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101f60	obj/kern/kernel.asm	/^f0101f60:	e8 db e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f65	obj/kern/kernel.asm	/^f0101f65:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101f6a	obj/kern/kernel.asm	/^f0101f6a:	74 24                	je     f0101f90 <mem_init+0xf98>$/;"	l
f0101f6c	obj/kern/kernel.asm	/^f0101f6c:	c7 44 24 0c c3 61 10 	movl   $0xf01061c3,0xc(%esp)$/;"	l
f0101f73	obj/kern/kernel.asm	/^f0101f73:	f0 $/;"	l
f0101f74	obj/kern/kernel.asm	/^f0101f74:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101f7b	obj/kern/kernel.asm	/^f0101f7b:	f0 $/;"	l
f0101f7c	obj/kern/kernel.asm	/^f0101f7c:	c7 44 24 04 d8 03 00 	movl   $0x3d8,0x4(%esp)$/;"	l
f0101f83	obj/kern/kernel.asm	/^f0101f83:	00 $/;"	l
f0101f84	obj/kern/kernel.asm	/^f0101f84:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101f8b	obj/kern/kernel.asm	/^f0101f8b:	e8 b0 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f90	obj/kern/kernel.asm	/^f0101f90:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101f97	obj/kern/kernel.asm	/^f0101f97:	00 $/;"	l
f0101f98	obj/kern/kernel.asm	/^f0101f98:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0101f9f	obj/kern/kernel.asm	/^f0101f9f:	00 $/;"	l
f0101fa0	obj/kern/kernel.asm	/^f0101fa0:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101fa3	obj/kern/kernel.asm	/^f0101fa3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101fa6	obj/kern/kernel.asm	/^f0101fa6:	e8 f9 ec ff ff       	call   f0100ca4 <pgdir_walk>$/;"	l
f0101fab	obj/kern/kernel.asm	/^f0101fab:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101fae	obj/kern/kernel.asm	/^f0101fae:	75 24                	jne    f0101fd4 <mem_init+0xfdc>$/;"	l
f0101fb0	obj/kern/kernel.asm	/^f0101fb0:	c7 44 24 0c 28 5d 10 	movl   $0xf0105d28,0xc(%esp)$/;"	l
f0101fb7	obj/kern/kernel.asm	/^f0101fb7:	f0 $/;"	l
f0101fb8	obj/kern/kernel.asm	/^f0101fb8:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101fbf	obj/kern/kernel.asm	/^f0101fbf:	f0 $/;"	l
f0101fc0	obj/kern/kernel.asm	/^f0101fc0:	c7 44 24 04 d9 03 00 	movl   $0x3d9,0x4(%esp)$/;"	l
f0101fc7	obj/kern/kernel.asm	/^f0101fc7:	00 $/;"	l
f0101fc8	obj/kern/kernel.asm	/^f0101fc8:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101fcf	obj/kern/kernel.asm	/^f0101fcf:	e8 6c e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fd4	obj/kern/kernel.asm	/^f0101fd4:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f0101fd9	obj/kern/kernel.asm	/^f0101fd9:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101fdc	obj/kern/kernel.asm	/^f0101fdc:	75 24                	jne    f0102002 <mem_init+0x100a>$/;"	l
f0101fde	obj/kern/kernel.asm	/^f0101fde:	c7 44 24 0c d4 61 10 	movl   $0xf01061d4,0xc(%esp)$/;"	l
f0101fe5	obj/kern/kernel.asm	/^f0101fe5:	f0 $/;"	l
f0101fe6	obj/kern/kernel.asm	/^f0101fe6:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0101fed	obj/kern/kernel.asm	/^f0101fed:	f0 $/;"	l
f0101fee	obj/kern/kernel.asm	/^f0101fee:	c7 44 24 04 da 03 00 	movl   $0x3da,0x4(%esp)$/;"	l
f0101ff5	obj/kern/kernel.asm	/^f0101ff5:	00 $/;"	l
f0101ff6	obj/kern/kernel.asm	/^f0101ff6:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	e8 3e e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102002	obj/kern/kernel.asm	/^f0102002:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102009	obj/kern/kernel.asm	/^f0102009:	00 $/;"	l
f010200a	obj/kern/kernel.asm	/^f010200a:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102011	obj/kern/kernel.asm	/^f0102011:	00 $/;"	l
f0102012	obj/kern/kernel.asm	/^f0102012:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0102016	obj/kern/kernel.asm	/^f0102016:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102019	obj/kern/kernel.asm	/^f0102019:	e8 28 ef ff ff       	call   f0100f46 <page_insert>$/;"	l
f010201e	obj/kern/kernel.asm	/^f010201e:	85 c0                	test   %eax,%eax$/;"	l
f0102020	obj/kern/kernel.asm	/^f0102020:	74 24                	je     f0102046 <mem_init+0x104e>$/;"	l
f0102022	obj/kern/kernel.asm	/^f0102022:	c7 44 24 0c 3c 5c 10 	movl   $0xf0105c3c,0xc(%esp)$/;"	l
f0102029	obj/kern/kernel.asm	/^f0102029:	f0 $/;"	l
f010202a	obj/kern/kernel.asm	/^f010202a:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0102031	obj/kern/kernel.asm	/^f0102031:	f0 $/;"	l
f0102032	obj/kern/kernel.asm	/^f0102032:	c7 44 24 04 dd 03 00 	movl   $0x3dd,0x4(%esp)$/;"	l
f0102039	obj/kern/kernel.asm	/^f0102039:	00 $/;"	l
f010203a	obj/kern/kernel.asm	/^f010203a:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0102041	obj/kern/kernel.asm	/^f0102041:	e8 fa df ff ff       	call   f0100040 <_panic>$/;"	l
f0102046	obj/kern/kernel.asm	/^f0102046:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010204d	obj/kern/kernel.asm	/^f010204d:	00 $/;"	l
f010204e	obj/kern/kernel.asm	/^f010204e:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102055	obj/kern/kernel.asm	/^f0102055:	00 $/;"	l
f0102056	obj/kern/kernel.asm	/^f0102056:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f010205b	obj/kern/kernel.asm	/^f010205b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010205e	obj/kern/kernel.asm	/^f010205e:	e8 41 ec ff ff       	call   f0100ca4 <pgdir_walk>$/;"	l
f0102063	obj/kern/kernel.asm	/^f0102063:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0102066	obj/kern/kernel.asm	/^f0102066:	75 24                	jne    f010208c <mem_init+0x1094>$/;"	l
f0102068	obj/kern/kernel.asm	/^f0102068:	c7 44 24 0c 5c 5d 10 	movl   $0xf0105d5c,0xc(%esp)$/;"	l
f010206f	obj/kern/kernel.asm	/^f010206f:	f0 $/;"	l
f0102070	obj/kern/kernel.asm	/^f0102070:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0102077	obj/kern/kernel.asm	/^f0102077:	f0 $/;"	l
f0102078	obj/kern/kernel.asm	/^f0102078:	c7 44 24 04 de 03 00 	movl   $0x3de,0x4(%esp)$/;"	l
f010207f	obj/kern/kernel.asm	/^f010207f:	00 $/;"	l
f0102080	obj/kern/kernel.asm	/^f0102080:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0102087	obj/kern/kernel.asm	/^f0102087:	e8 b4 df ff ff       	call   f0100040 <_panic>$/;"	l
f010208c	obj/kern/kernel.asm	/^f010208c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102093	obj/kern/kernel.asm	/^f0102093:	00 $/;"	l
f0102094	obj/kern/kernel.asm	/^f0102094:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010209b	obj/kern/kernel.asm	/^f010209b:	00 $/;"	l
f010209c	obj/kern/kernel.asm	/^f010209c:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f01020a1	obj/kern/kernel.asm	/^f01020a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01020a4	obj/kern/kernel.asm	/^f01020a4:	e8 fb eb ff ff       	call   f0100ca4 <pgdir_walk>$/;"	l
f01020a9	obj/kern/kernel.asm	/^f01020a9:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01020ac	obj/kern/kernel.asm	/^f01020ac:	74 24                	je     f01020d2 <mem_init+0x10da>$/;"	l
f01020ae	obj/kern/kernel.asm	/^f01020ae:	c7 44 24 0c 90 5d 10 	movl   $0xf0105d90,0xc(%esp)$/;"	l
f01020b5	obj/kern/kernel.asm	/^f01020b5:	f0 $/;"	l
f01020b6	obj/kern/kernel.asm	/^f01020b6:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01020bd	obj/kern/kernel.asm	/^f01020bd:	f0 $/;"	l
f01020be	obj/kern/kernel.asm	/^f01020be:	c7 44 24 04 df 03 00 	movl   $0x3df,0x4(%esp)$/;"	l
f01020c5	obj/kern/kernel.asm	/^f01020c5:	00 $/;"	l
f01020c6	obj/kern/kernel.asm	/^f01020c6:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01020cd	obj/kern/kernel.asm	/^f01020cd:	e8 6e df ff ff       	call   f0100040 <_panic>$/;"	l
f01020d2	obj/kern/kernel.asm	/^f01020d2:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01020d9	obj/kern/kernel.asm	/^f01020d9:	00 $/;"	l
f01020da	obj/kern/kernel.asm	/^f01020da:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f01020e1	obj/kern/kernel.asm	/^f01020e1:	00 $/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01020e6	obj/kern/kernel.asm	/^f01020e6:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f01020eb	obj/kern/kernel.asm	/^f01020eb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01020ee	obj/kern/kernel.asm	/^f01020ee:	e8 53 ee ff ff       	call   f0100f46 <page_insert>$/;"	l
f01020f3	obj/kern/kernel.asm	/^f01020f3:	85 c0                	test   %eax,%eax$/;"	l
f01020f5	obj/kern/kernel.asm	/^f01020f5:	78 24                	js     f010211b <mem_init+0x1123>$/;"	l
f01020f7	obj/kern/kernel.asm	/^f01020f7:	c7 44 24 0c c8 5d 10 	movl   $0xf0105dc8,0xc(%esp)$/;"	l
f01020fe	obj/kern/kernel.asm	/^f01020fe:	f0 $/;"	l
f01020ff	obj/kern/kernel.asm	/^f01020ff:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0102106	obj/kern/kernel.asm	/^f0102106:	f0 $/;"	l
f0102107	obj/kern/kernel.asm	/^f0102107:	c7 44 24 04 e2 03 00 	movl   $0x3e2,0x4(%esp)$/;"	l
f010210e	obj/kern/kernel.asm	/^f010210e:	00 $/;"	l
f010210f	obj/kern/kernel.asm	/^f010210f:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0102116	obj/kern/kernel.asm	/^f0102116:	e8 25 df ff ff       	call   f0100040 <_panic>$/;"	l
f010211b	obj/kern/kernel.asm	/^f010211b:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102122	obj/kern/kernel.asm	/^f0102122:	00 $/;"	l
f0102123	obj/kern/kernel.asm	/^f0102123:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010212a	obj/kern/kernel.asm	/^f010212a:	00 $/;"	l
f010212b	obj/kern/kernel.asm	/^f010212b:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010212f	obj/kern/kernel.asm	/^f010212f:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f0102134	obj/kern/kernel.asm	/^f0102134:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102137	obj/kern/kernel.asm	/^f0102137:	e8 0a ee ff ff       	call   f0100f46 <page_insert>$/;"	l
f010213c	obj/kern/kernel.asm	/^f010213c:	85 c0                	test   %eax,%eax$/;"	l
f010213e	obj/kern/kernel.asm	/^f010213e:	74 24                	je     f0102164 <mem_init+0x116c>$/;"	l
f0102140	obj/kern/kernel.asm	/^f0102140:	c7 44 24 0c 00 5e 10 	movl   $0xf0105e00,0xc(%esp)$/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	f0 $/;"	l
f0102148	obj/kern/kernel.asm	/^f0102148:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f010214f	obj/kern/kernel.asm	/^f010214f:	f0 $/;"	l
f0102150	obj/kern/kernel.asm	/^f0102150:	c7 44 24 04 e5 03 00 	movl   $0x3e5,0x4(%esp)$/;"	l
f0102157	obj/kern/kernel.asm	/^f0102157:	00 $/;"	l
f0102158	obj/kern/kernel.asm	/^f0102158:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f010215f	obj/kern/kernel.asm	/^f010215f:	e8 dc de ff ff       	call   f0100040 <_panic>$/;"	l
f0102164	obj/kern/kernel.asm	/^f0102164:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010216b	obj/kern/kernel.asm	/^f010216b:	00 $/;"	l
f010216c	obj/kern/kernel.asm	/^f010216c:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102173	obj/kern/kernel.asm	/^f0102173:	00 $/;"	l
f0102174	obj/kern/kernel.asm	/^f0102174:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f0102179	obj/kern/kernel.asm	/^f0102179:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010217c	obj/kern/kernel.asm	/^f010217c:	e8 23 eb ff ff       	call   f0100ca4 <pgdir_walk>$/;"	l
f0102181	obj/kern/kernel.asm	/^f0102181:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102184	obj/kern/kernel.asm	/^f0102184:	74 24                	je     f01021aa <mem_init+0x11b2>$/;"	l
f0102186	obj/kern/kernel.asm	/^f0102186:	c7 44 24 0c 90 5d 10 	movl   $0xf0105d90,0xc(%esp)$/;"	l
f010218d	obj/kern/kernel.asm	/^f010218d:	f0 $/;"	l
f010218e	obj/kern/kernel.asm	/^f010218e:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0102195	obj/kern/kernel.asm	/^f0102195:	f0 $/;"	l
f0102196	obj/kern/kernel.asm	/^f0102196:	c7 44 24 04 e6 03 00 	movl   $0x3e6,0x4(%esp)$/;"	l
f010219d	obj/kern/kernel.asm	/^f010219d:	00 $/;"	l
f010219e	obj/kern/kernel.asm	/^f010219e:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01021a5	obj/kern/kernel.asm	/^f01021a5:	e8 96 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021aa	obj/kern/kernel.asm	/^f01021aa:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f01021af	obj/kern/kernel.asm	/^f01021af:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01021b2	obj/kern/kernel.asm	/^f01021b2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01021b7	obj/kern/kernel.asm	/^f01021b7:	e8 d1 e8 ff ff       	call   f0100a8d <check_va2pa>$/;"	l
f01021bc	obj/kern/kernel.asm	/^f01021bc:	89 c1                	mov    %eax,%ecx$/;"	l
f01021be	obj/kern/kernel.asm	/^f01021be:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01021c1	obj/kern/kernel.asm	/^f01021c1:	89 f0                	mov    %esi,%eax$/;"	l
f01021c3	obj/kern/kernel.asm	/^f01021c3:	2b 05 10 9f 22 f0    	sub    0xf0229f10,%eax$/;"	l
f01021c9	obj/kern/kernel.asm	/^f01021c9:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01021cc	obj/kern/kernel.asm	/^f01021cc:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	39 c1                	cmp    %eax,%ecx$/;"	l
f01021d1	obj/kern/kernel.asm	/^f01021d1:	74 24                	je     f01021f7 <mem_init+0x11ff>$/;"	l
f01021d3	obj/kern/kernel.asm	/^f01021d3:	c7 44 24 0c 3c 5e 10 	movl   $0xf0105e3c,0xc(%esp)$/;"	l
f01021da	obj/kern/kernel.asm	/^f01021da:	f0 $/;"	l
f01021db	obj/kern/kernel.asm	/^f01021db:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01021e2	obj/kern/kernel.asm	/^f01021e2:	f0 $/;"	l
f01021e3	obj/kern/kernel.asm	/^f01021e3:	c7 44 24 04 e9 03 00 	movl   $0x3e9,0x4(%esp)$/;"	l
f01021ea	obj/kern/kernel.asm	/^f01021ea:	00 $/;"	l
f01021eb	obj/kern/kernel.asm	/^f01021eb:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01021f2	obj/kern/kernel.asm	/^f01021f2:	e8 49 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021f7	obj/kern/kernel.asm	/^f01021f7:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01021fc	obj/kern/kernel.asm	/^f01021fc:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01021ff	obj/kern/kernel.asm	/^f01021ff:	e8 89 e8 ff ff       	call   f0100a8d <check_va2pa>$/;"	l
f0102204	obj/kern/kernel.asm	/^f0102204:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0102207	obj/kern/kernel.asm	/^f0102207:	74 24                	je     f010222d <mem_init+0x1235>$/;"	l
f0102209	obj/kern/kernel.asm	/^f0102209:	c7 44 24 0c 68 5e 10 	movl   $0xf0105e68,0xc(%esp)$/;"	l
f0102210	obj/kern/kernel.asm	/^f0102210:	f0 $/;"	l
f0102211	obj/kern/kernel.asm	/^f0102211:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0102218	obj/kern/kernel.asm	/^f0102218:	f0 $/;"	l
f0102219	obj/kern/kernel.asm	/^f0102219:	c7 44 24 04 ea 03 00 	movl   $0x3ea,0x4(%esp)$/;"	l
f0102220	obj/kern/kernel.asm	/^f0102220:	00 $/;"	l
f0102221	obj/kern/kernel.asm	/^f0102221:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0102228	obj/kern/kernel.asm	/^f0102228:	e8 13 de ff ff       	call   f0100040 <_panic>$/;"	l
f010222d	obj/kern/kernel.asm	/^f010222d:	66 83 7e 04 02       	cmpw   $0x2,0x4(%esi)$/;"	l
f0102232	obj/kern/kernel.asm	/^f0102232:	74 24                	je     f0102258 <mem_init+0x1260>$/;"	l
f0102234	obj/kern/kernel.asm	/^f0102234:	c7 44 24 0c ea 61 10 	movl   $0xf01061ea,0xc(%esp)$/;"	l
f010223b	obj/kern/kernel.asm	/^f010223b:	f0 $/;"	l
f010223c	obj/kern/kernel.asm	/^f010223c:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0102243	obj/kern/kernel.asm	/^f0102243:	f0 $/;"	l
f0102244	obj/kern/kernel.asm	/^f0102244:	c7 44 24 04 ec 03 00 	movl   $0x3ec,0x4(%esp)$/;"	l
f010224b	obj/kern/kernel.asm	/^f010224b:	00 $/;"	l
f010224c	obj/kern/kernel.asm	/^f010224c:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0102253	obj/kern/kernel.asm	/^f0102253:	e8 e8 dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102258	obj/kern/kernel.asm	/^f0102258:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f010225d	obj/kern/kernel.asm	/^f010225d:	74 24                	je     f0102283 <mem_init+0x128b>$/;"	l
f010225f	obj/kern/kernel.asm	/^f010225f:	c7 44 24 0c fb 61 10 	movl   $0xf01061fb,0xc(%esp)$/;"	l
f0102266	obj/kern/kernel.asm	/^f0102266:	f0 $/;"	l
f0102267	obj/kern/kernel.asm	/^f0102267:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	f0 $/;"	l
f010226f	obj/kern/kernel.asm	/^f010226f:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)$/;"	l
f0102276	obj/kern/kernel.asm	/^f0102276:	00 $/;"	l
f0102277	obj/kern/kernel.asm	/^f0102277:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f010227e	obj/kern/kernel.asm	/^f010227e:	e8 bd dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102283	obj/kern/kernel.asm	/^f0102283:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010228a	obj/kern/kernel.asm	/^f010228a:	e8 0b e9 ff ff       	call   f0100b9a <page_alloc>$/;"	l
f010228f	obj/kern/kernel.asm	/^f010228f:	85 c0                	test   %eax,%eax$/;"	l
f0102291	obj/kern/kernel.asm	/^f0102291:	74 04                	je     f0102297 <mem_init+0x129f>$/;"	l
f0102293	obj/kern/kernel.asm	/^f0102293:	39 c7                	cmp    %eax,%edi$/;"	l
f0102295	obj/kern/kernel.asm	/^f0102295:	74 24                	je     f01022bb <mem_init+0x12c3>$/;"	l
f0102297	obj/kern/kernel.asm	/^f0102297:	c7 44 24 0c 98 5e 10 	movl   $0xf0105e98,0xc(%esp)$/;"	l
f010229e	obj/kern/kernel.asm	/^f010229e:	f0 $/;"	l
f010229f	obj/kern/kernel.asm	/^f010229f:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01022a6	obj/kern/kernel.asm	/^f01022a6:	f0 $/;"	l
f01022a7	obj/kern/kernel.asm	/^f01022a7:	c7 44 24 04 f0 03 00 	movl   $0x3f0,0x4(%esp)$/;"	l
f01022ae	obj/kern/kernel.asm	/^f01022ae:	00 $/;"	l
f01022af	obj/kern/kernel.asm	/^f01022af:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01022b6	obj/kern/kernel.asm	/^f01022b6:	e8 85 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022bb	obj/kern/kernel.asm	/^f01022bb:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01022c2	obj/kern/kernel.asm	/^f01022c2:	00 $/;"	l
f01022c3	obj/kern/kernel.asm	/^f01022c3:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f01022c8	obj/kern/kernel.asm	/^f01022c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01022cb	obj/kern/kernel.asm	/^f01022cb:	e8 2d ec ff ff       	call   f0100efd <page_remove>$/;"	l
f01022d0	obj/kern/kernel.asm	/^f01022d0:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f01022d5	obj/kern/kernel.asm	/^f01022d5:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01022d8	obj/kern/kernel.asm	/^f01022d8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01022dd	obj/kern/kernel.asm	/^f01022dd:	e8 ab e7 ff ff       	call   f0100a8d <check_va2pa>$/;"	l
f01022e2	obj/kern/kernel.asm	/^f01022e2:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01022e5	obj/kern/kernel.asm	/^f01022e5:	74 24                	je     f010230b <mem_init+0x1313>$/;"	l
f01022e7	obj/kern/kernel.asm	/^f01022e7:	c7 44 24 0c bc 5e 10 	movl   $0xf0105ebc,0xc(%esp)$/;"	l
f01022ee	obj/kern/kernel.asm	/^f01022ee:	f0 $/;"	l
f01022ef	obj/kern/kernel.asm	/^f01022ef:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01022f6	obj/kern/kernel.asm	/^f01022f6:	f0 $/;"	l
f01022f7	obj/kern/kernel.asm	/^f01022f7:	c7 44 24 04 f4 03 00 	movl   $0x3f4,0x4(%esp)$/;"	l
f01022fe	obj/kern/kernel.asm	/^f01022fe:	00 $/;"	l
f01022ff	obj/kern/kernel.asm	/^f01022ff:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0102306	obj/kern/kernel.asm	/^f0102306:	e8 35 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010230b	obj/kern/kernel.asm	/^f010230b:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102310	obj/kern/kernel.asm	/^f0102310:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0102313	obj/kern/kernel.asm	/^f0102313:	e8 75 e7 ff ff       	call   f0100a8d <check_va2pa>$/;"	l
f0102318	obj/kern/kernel.asm	/^f0102318:	89 f2                	mov    %esi,%edx$/;"	l
f010231a	obj/kern/kernel.asm	/^f010231a:	2b 15 10 9f 22 f0    	sub    0xf0229f10,%edx$/;"	l
f0102320	obj/kern/kernel.asm	/^f0102320:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102326	obj/kern/kernel.asm	/^f0102326:	39 d0                	cmp    %edx,%eax$/;"	l
f0102328	obj/kern/kernel.asm	/^f0102328:	74 24                	je     f010234e <mem_init+0x1356>$/;"	l
f010232a	obj/kern/kernel.asm	/^f010232a:	c7 44 24 0c 68 5e 10 	movl   $0xf0105e68,0xc(%esp)$/;"	l
f0102331	obj/kern/kernel.asm	/^f0102331:	f0 $/;"	l
f0102332	obj/kern/kernel.asm	/^f0102332:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0102339	obj/kern/kernel.asm	/^f0102339:	f0 $/;"	l
f010233a	obj/kern/kernel.asm	/^f010233a:	c7 44 24 04 f5 03 00 	movl   $0x3f5,0x4(%esp)$/;"	l
f0102341	obj/kern/kernel.asm	/^f0102341:	00 $/;"	l
f0102342	obj/kern/kernel.asm	/^f0102342:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0102349	obj/kern/kernel.asm	/^f0102349:	e8 f2 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010234e	obj/kern/kernel.asm	/^f010234e:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102353	obj/kern/kernel.asm	/^f0102353:	74 24                	je     f0102379 <mem_init+0x1381>$/;"	l
f0102355	obj/kern/kernel.asm	/^f0102355:	c7 44 24 0c a1 61 10 	movl   $0xf01061a1,0xc(%esp)$/;"	l
f010235c	obj/kern/kernel.asm	/^f010235c:	f0 $/;"	l
f010235d	obj/kern/kernel.asm	/^f010235d:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0102364	obj/kern/kernel.asm	/^f0102364:	f0 $/;"	l
f0102365	obj/kern/kernel.asm	/^f0102365:	c7 44 24 04 f6 03 00 	movl   $0x3f6,0x4(%esp)$/;"	l
f010236c	obj/kern/kernel.asm	/^f010236c:	00 $/;"	l
f010236d	obj/kern/kernel.asm	/^f010236d:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0102374	obj/kern/kernel.asm	/^f0102374:	e8 c7 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102379	obj/kern/kernel.asm	/^f0102379:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f010237e	obj/kern/kernel.asm	/^f010237e:	74 24                	je     f01023a4 <mem_init+0x13ac>$/;"	l
f0102380	obj/kern/kernel.asm	/^f0102380:	c7 44 24 0c fb 61 10 	movl   $0xf01061fb,0xc(%esp)$/;"	l
f0102387	obj/kern/kernel.asm	/^f0102387:	f0 $/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f010238f	obj/kern/kernel.asm	/^f010238f:	f0 $/;"	l
f0102390	obj/kern/kernel.asm	/^f0102390:	c7 44 24 04 f7 03 00 	movl   $0x3f7,0x4(%esp)$/;"	l
f0102397	obj/kern/kernel.asm	/^f0102397:	00 $/;"	l
f0102398	obj/kern/kernel.asm	/^f0102398:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f010239f	obj/kern/kernel.asm	/^f010239f:	e8 9c dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023a4	obj/kern/kernel.asm	/^f01023a4:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f01023ab	obj/kern/kernel.asm	/^f01023ab:	00 $/;"	l
f01023ac	obj/kern/kernel.asm	/^f01023ac:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01023b3	obj/kern/kernel.asm	/^f01023b3:	00 $/;"	l
f01023b4	obj/kern/kernel.asm	/^f01023b4:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01023b8	obj/kern/kernel.asm	/^f01023b8:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01023bb	obj/kern/kernel.asm	/^f01023bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01023be	obj/kern/kernel.asm	/^f01023be:	e8 83 eb ff ff       	call   f0100f46 <page_insert>$/;"	l
f01023c3	obj/kern/kernel.asm	/^f01023c3:	85 c0                	test   %eax,%eax$/;"	l
f01023c5	obj/kern/kernel.asm	/^f01023c5:	74 24                	je     f01023eb <mem_init+0x13f3>$/;"	l
f01023c7	obj/kern/kernel.asm	/^f01023c7:	c7 44 24 0c e0 5e 10 	movl   $0xf0105ee0,0xc(%esp)$/;"	l
f01023ce	obj/kern/kernel.asm	/^f01023ce:	f0 $/;"	l
f01023cf	obj/kern/kernel.asm	/^f01023cf:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01023d6	obj/kern/kernel.asm	/^f01023d6:	f0 $/;"	l
f01023d7	obj/kern/kernel.asm	/^f01023d7:	c7 44 24 04 fa 03 00 	movl   $0x3fa,0x4(%esp)$/;"	l
f01023de	obj/kern/kernel.asm	/^f01023de:	00 $/;"	l
f01023df	obj/kern/kernel.asm	/^f01023df:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01023e6	obj/kern/kernel.asm	/^f01023e6:	e8 55 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023eb	obj/kern/kernel.asm	/^f01023eb:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01023f0	obj/kern/kernel.asm	/^f01023f0:	75 24                	jne    f0102416 <mem_init+0x141e>$/;"	l
f01023f2	obj/kern/kernel.asm	/^f01023f2:	c7 44 24 0c 0c 62 10 	movl   $0xf010620c,0xc(%esp)$/;"	l
f01023f9	obj/kern/kernel.asm	/^f01023f9:	f0 $/;"	l
f01023fa	obj/kern/kernel.asm	/^f01023fa:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0102401	obj/kern/kernel.asm	/^f0102401:	f0 $/;"	l
f0102402	obj/kern/kernel.asm	/^f0102402:	c7 44 24 04 fb 03 00 	movl   $0x3fb,0x4(%esp)$/;"	l
f0102409	obj/kern/kernel.asm	/^f0102409:	00 $/;"	l
f010240a	obj/kern/kernel.asm	/^f010240a:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0102411	obj/kern/kernel.asm	/^f0102411:	e8 2a dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102416	obj/kern/kernel.asm	/^f0102416:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0102419	obj/kern/kernel.asm	/^f0102419:	74 24                	je     f010243f <mem_init+0x1447>$/;"	l
f010241b	obj/kern/kernel.asm	/^f010241b:	c7 44 24 0c 18 62 10 	movl   $0xf0106218,0xc(%esp)$/;"	l
f0102422	obj/kern/kernel.asm	/^f0102422:	f0 $/;"	l
f0102423	obj/kern/kernel.asm	/^f0102423:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f010242a	obj/kern/kernel.asm	/^f010242a:	f0 $/;"	l
f010242b	obj/kern/kernel.asm	/^f010242b:	c7 44 24 04 fc 03 00 	movl   $0x3fc,0x4(%esp)$/;"	l
f0102432	obj/kern/kernel.asm	/^f0102432:	00 $/;"	l
f0102433	obj/kern/kernel.asm	/^f0102433:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f010243a	obj/kern/kernel.asm	/^f010243a:	e8 01 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010243f	obj/kern/kernel.asm	/^f010243f:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102446	obj/kern/kernel.asm	/^f0102446:	00 $/;"	l
f0102447	obj/kern/kernel.asm	/^f0102447:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f010244c	obj/kern/kernel.asm	/^f010244c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010244f	obj/kern/kernel.asm	/^f010244f:	e8 a9 ea ff ff       	call   f0100efd <page_remove>$/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f0102459	obj/kern/kernel.asm	/^f0102459:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010245c	obj/kern/kernel.asm	/^f010245c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102461	obj/kern/kernel.asm	/^f0102461:	e8 27 e6 ff ff       	call   f0100a8d <check_va2pa>$/;"	l
f0102466	obj/kern/kernel.asm	/^f0102466:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102469	obj/kern/kernel.asm	/^f0102469:	74 24                	je     f010248f <mem_init+0x1497>$/;"	l
f010246b	obj/kern/kernel.asm	/^f010246b:	c7 44 24 0c bc 5e 10 	movl   $0xf0105ebc,0xc(%esp)$/;"	l
f0102472	obj/kern/kernel.asm	/^f0102472:	f0 $/;"	l
f0102473	obj/kern/kernel.asm	/^f0102473:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f010247a	obj/kern/kernel.asm	/^f010247a:	f0 $/;"	l
f010247b	obj/kern/kernel.asm	/^f010247b:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)$/;"	l
f0102482	obj/kern/kernel.asm	/^f0102482:	00 $/;"	l
f0102483	obj/kern/kernel.asm	/^f0102483:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f010248a	obj/kern/kernel.asm	/^f010248a:	e8 b1 db ff ff       	call   f0100040 <_panic>$/;"	l
f010248f	obj/kern/kernel.asm	/^f010248f:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102494	obj/kern/kernel.asm	/^f0102494:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0102497	obj/kern/kernel.asm	/^f0102497:	e8 f1 e5 ff ff       	call   f0100a8d <check_va2pa>$/;"	l
f010249c	obj/kern/kernel.asm	/^f010249c:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010249f	obj/kern/kernel.asm	/^f010249f:	74 24                	je     f01024c5 <mem_init+0x14cd>$/;"	l
f01024a1	obj/kern/kernel.asm	/^f01024a1:	c7 44 24 0c 18 5f 10 	movl   $0xf0105f18,0xc(%esp)$/;"	l
f01024a8	obj/kern/kernel.asm	/^f01024a8:	f0 $/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01024b0	obj/kern/kernel.asm	/^f01024b0:	f0 $/;"	l
f01024b1	obj/kern/kernel.asm	/^f01024b1:	c7 44 24 04 01 04 00 	movl   $0x401,0x4(%esp)$/;"	l
f01024b8	obj/kern/kernel.asm	/^f01024b8:	00 $/;"	l
f01024b9	obj/kern/kernel.asm	/^f01024b9:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01024c0	obj/kern/kernel.asm	/^f01024c0:	e8 7b db ff ff       	call   f0100040 <_panic>$/;"	l
f01024c5	obj/kern/kernel.asm	/^f01024c5:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01024ca	obj/kern/kernel.asm	/^f01024ca:	74 24                	je     f01024f0 <mem_init+0x14f8>$/;"	l
f01024cc	obj/kern/kernel.asm	/^f01024cc:	c7 44 24 0c 2d 62 10 	movl   $0xf010622d,0xc(%esp)$/;"	l
f01024d3	obj/kern/kernel.asm	/^f01024d3:	f0 $/;"	l
f01024d4	obj/kern/kernel.asm	/^f01024d4:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01024db	obj/kern/kernel.asm	/^f01024db:	f0 $/;"	l
f01024dc	obj/kern/kernel.asm	/^f01024dc:	c7 44 24 04 02 04 00 	movl   $0x402,0x4(%esp)$/;"	l
f01024e3	obj/kern/kernel.asm	/^f01024e3:	00 $/;"	l
f01024e4	obj/kern/kernel.asm	/^f01024e4:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01024eb	obj/kern/kernel.asm	/^f01024eb:	e8 50 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024f0	obj/kern/kernel.asm	/^f01024f0:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f01024f5	obj/kern/kernel.asm	/^f01024f5:	74 24                	je     f010251b <mem_init+0x1523>$/;"	l
f01024f7	obj/kern/kernel.asm	/^f01024f7:	c7 44 24 0c fb 61 10 	movl   $0xf01061fb,0xc(%esp)$/;"	l
f01024fe	obj/kern/kernel.asm	/^f01024fe:	f0 $/;"	l
f01024ff	obj/kern/kernel.asm	/^f01024ff:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0102506	obj/kern/kernel.asm	/^f0102506:	f0 $/;"	l
f0102507	obj/kern/kernel.asm	/^f0102507:	c7 44 24 04 03 04 00 	movl   $0x403,0x4(%esp)$/;"	l
f010250e	obj/kern/kernel.asm	/^f010250e:	00 $/;"	l
f010250f	obj/kern/kernel.asm	/^f010250f:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0102516	obj/kern/kernel.asm	/^f0102516:	e8 25 db ff ff       	call   f0100040 <_panic>$/;"	l
f010251b	obj/kern/kernel.asm	/^f010251b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102522	obj/kern/kernel.asm	/^f0102522:	e8 73 e6 ff ff       	call   f0100b9a <page_alloc>$/;"	l
f0102527	obj/kern/kernel.asm	/^f0102527:	85 c0                	test   %eax,%eax$/;"	l
f0102529	obj/kern/kernel.asm	/^f0102529:	74 04                	je     f010252f <mem_init+0x1537>$/;"	l
f010252b	obj/kern/kernel.asm	/^f010252b:	39 c6                	cmp    %eax,%esi$/;"	l
f010252d	obj/kern/kernel.asm	/^f010252d:	74 24                	je     f0102553 <mem_init+0x155b>$/;"	l
f010252f	obj/kern/kernel.asm	/^f010252f:	c7 44 24 0c 40 5f 10 	movl   $0xf0105f40,0xc(%esp)$/;"	l
f0102536	obj/kern/kernel.asm	/^f0102536:	f0 $/;"	l
f0102537	obj/kern/kernel.asm	/^f0102537:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f010253e	obj/kern/kernel.asm	/^f010253e:	f0 $/;"	l
f010253f	obj/kern/kernel.asm	/^f010253f:	c7 44 24 04 06 04 00 	movl   $0x406,0x4(%esp)$/;"	l
f0102546	obj/kern/kernel.asm	/^f0102546:	00 $/;"	l
f0102547	obj/kern/kernel.asm	/^f0102547:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f010254e	obj/kern/kernel.asm	/^f010254e:	e8 ed da ff ff       	call   f0100040 <_panic>$/;"	l
f0102553	obj/kern/kernel.asm	/^f0102553:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010255a	obj/kern/kernel.asm	/^f010255a:	e8 3b e6 ff ff       	call   f0100b9a <page_alloc>$/;"	l
f010255f	obj/kern/kernel.asm	/^f010255f:	85 c0                	test   %eax,%eax$/;"	l
f0102561	obj/kern/kernel.asm	/^f0102561:	74 24                	je     f0102587 <mem_init+0x158f>$/;"	l
f0102563	obj/kern/kernel.asm	/^f0102563:	c7 44 24 0c 48 61 10 	movl   $0xf0106148,0xc(%esp)$/;"	l
f010256a	obj/kern/kernel.asm	/^f010256a:	f0 $/;"	l
f010256b	obj/kern/kernel.asm	/^f010256b:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0102572	obj/kern/kernel.asm	/^f0102572:	f0 $/;"	l
f0102573	obj/kern/kernel.asm	/^f0102573:	c7 44 24 04 09 04 00 	movl   $0x409,0x4(%esp)$/;"	l
f010257a	obj/kern/kernel.asm	/^f010257a:	00 $/;"	l
f010257b	obj/kern/kernel.asm	/^f010257b:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0102582	obj/kern/kernel.asm	/^f0102582:	e8 b9 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102587	obj/kern/kernel.asm	/^f0102587:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f010258c	obj/kern/kernel.asm	/^f010258c:	8b 08                	mov    (%eax),%ecx$/;"	l
f010258e	obj/kern/kernel.asm	/^f010258e:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102594	obj/kern/kernel.asm	/^f0102594:	89 da                	mov    %ebx,%edx$/;"	l
f0102596	obj/kern/kernel.asm	/^f0102596:	2b 15 10 9f 22 f0    	sub    0xf0229f10,%edx$/;"	l
f010259c	obj/kern/kernel.asm	/^f010259c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010259f	obj/kern/kernel.asm	/^f010259f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01025a2	obj/kern/kernel.asm	/^f01025a2:	39 d1                	cmp    %edx,%ecx$/;"	l
f01025a4	obj/kern/kernel.asm	/^f01025a4:	74 24                	je     f01025ca <mem_init+0x15d2>$/;"	l
f01025a6	obj/kern/kernel.asm	/^f01025a6:	c7 44 24 0c e4 5b 10 	movl   $0xf0105be4,0xc(%esp)$/;"	l
f01025ad	obj/kern/kernel.asm	/^f01025ad:	f0 $/;"	l
f01025ae	obj/kern/kernel.asm	/^f01025ae:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01025b5	obj/kern/kernel.asm	/^f01025b5:	f0 $/;"	l
f01025b6	obj/kern/kernel.asm	/^f01025b6:	c7 44 24 04 0c 04 00 	movl   $0x40c,0x4(%esp)$/;"	l
f01025bd	obj/kern/kernel.asm	/^f01025bd:	00 $/;"	l
f01025be	obj/kern/kernel.asm	/^f01025be:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01025c5	obj/kern/kernel.asm	/^f01025c5:	e8 76 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025ca	obj/kern/kernel.asm	/^f01025ca:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01025d0	obj/kern/kernel.asm	/^f01025d0:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01025d5	obj/kern/kernel.asm	/^f01025d5:	74 24                	je     f01025fb <mem_init+0x1603>$/;"	l
f01025d7	obj/kern/kernel.asm	/^f01025d7:	c7 44 24 0c b2 61 10 	movl   $0xf01061b2,0xc(%esp)$/;"	l
f01025de	obj/kern/kernel.asm	/^f01025de:	f0 $/;"	l
f01025df	obj/kern/kernel.asm	/^f01025df:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01025e6	obj/kern/kernel.asm	/^f01025e6:	f0 $/;"	l
f01025e7	obj/kern/kernel.asm	/^f01025e7:	c7 44 24 04 0e 04 00 	movl   $0x40e,0x4(%esp)$/;"	l
f01025ee	obj/kern/kernel.asm	/^f01025ee:	00 $/;"	l
f01025ef	obj/kern/kernel.asm	/^f01025ef:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f01025f6	obj/kern/kernel.asm	/^f01025f6:	e8 45 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025fb	obj/kern/kernel.asm	/^f01025fb:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102601	obj/kern/kernel.asm	/^f0102601:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102604	obj/kern/kernel.asm	/^f0102604:	e8 1c e6 ff ff       	call   f0100c25 <page_free>$/;"	l
f0102609	obj/kern/kernel.asm	/^f0102609:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102610	obj/kern/kernel.asm	/^f0102610:	00 $/;"	l
f0102611	obj/kern/kernel.asm	/^f0102611:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f0102618	obj/kern/kernel.asm	/^f0102618:	00 $/;"	l
f0102619	obj/kern/kernel.asm	/^f0102619:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f010261e	obj/kern/kernel.asm	/^f010261e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102621	obj/kern/kernel.asm	/^f0102621:	e8 7e e6 ff ff       	call   f0100ca4 <pgdir_walk>$/;"	l
f0102626	obj/kern/kernel.asm	/^f0102626:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102629	obj/kern/kernel.asm	/^f0102629:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010262c	obj/kern/kernel.asm	/^f010262c:	8b 15 0c 9f 22 f0    	mov    0xf0229f0c,%edx$/;"	l
f0102632	obj/kern/kernel.asm	/^f0102632:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f0102635	obj/kern/kernel.asm	/^f0102635:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f010263b	obj/kern/kernel.asm	/^f010263b:	89 c8                	mov    %ecx,%eax$/;"	l
f010263d	obj/kern/kernel.asm	/^f010263d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102640	obj/kern/kernel.asm	/^f0102640:	3b 05 08 9f 22 f0    	cmp    0xf0229f08,%eax$/;"	l
f0102646	obj/kern/kernel.asm	/^f0102646:	72 20                	jb     f0102668 <mem_init+0x1670>$/;"	l
f0102648	obj/kern/kernel.asm	/^f0102648:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010264c	obj/kern/kernel.asm	/^f010264c:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f0102653	obj/kern/kernel.asm	/^f0102653:	f0 $/;"	l
f0102654	obj/kern/kernel.asm	/^f0102654:	c7 44 24 04 15 04 00 	movl   $0x415,0x4(%esp)$/;"	l
f010265b	obj/kern/kernel.asm	/^f010265b:	00 $/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0102663	obj/kern/kernel.asm	/^f0102663:	e8 d8 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102668	obj/kern/kernel.asm	/^f0102668:	81 e9 fc ff ff 0f    	sub    $0xffffffc,%ecx$/;"	l
f010266e	obj/kern/kernel.asm	/^f010266e:	39 4d d0             	cmp    %ecx,-0x30(%ebp)$/;"	l
f0102671	obj/kern/kernel.asm	/^f0102671:	74 24                	je     f0102697 <mem_init+0x169f>$/;"	l
f0102673	obj/kern/kernel.asm	/^f0102673:	c7 44 24 0c 3e 62 10 	movl   $0xf010623e,0xc(%esp)$/;"	l
f010267a	obj/kern/kernel.asm	/^f010267a:	f0 $/;"	l
f010267b	obj/kern/kernel.asm	/^f010267b:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f0102682	obj/kern/kernel.asm	/^f0102682:	f0 $/;"	l
f0102683	obj/kern/kernel.asm	/^f0102683:	c7 44 24 04 16 04 00 	movl   $0x416,0x4(%esp)$/;"	l
f010268a	obj/kern/kernel.asm	/^f010268a:	00 $/;"	l
f010268b	obj/kern/kernel.asm	/^f010268b:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f0102692	obj/kern/kernel.asm	/^f0102692:	e8 a9 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102697	obj/kern/kernel.asm	/^f0102697:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)$/;"	l
f010269e	obj/kern/kernel.asm	/^f010269e:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f01026a4	obj/kern/kernel.asm	/^f01026a4:	89 d8                	mov    %ebx,%eax$/;"	l
f01026a6	obj/kern/kernel.asm	/^f01026a6:	e8 9d e3 ff ff       	call   f0100a48 <page2kva>$/;"	l
f01026ab	obj/kern/kernel.asm	/^f01026ab:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01026b2	obj/kern/kernel.asm	/^f01026b2:	00 $/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f01026ba	obj/kern/kernel.asm	/^f01026ba:	00 $/;"	l
f01026bb	obj/kern/kernel.asm	/^f01026bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01026be	obj/kern/kernel.asm	/^f01026be:	e8 74 20 00 00       	call   f0104737 <memset>$/;"	l
f01026c3	obj/kern/kernel.asm	/^f01026c3:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01026c6	obj/kern/kernel.asm	/^f01026c6:	e8 5a e5 ff ff       	call   f0100c25 <page_free>$/;"	l
f01026cb	obj/kern/kernel.asm	/^f01026cb:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01026d2	obj/kern/kernel.asm	/^f01026d2:	00 $/;"	l
f01026d3	obj/kern/kernel.asm	/^f01026d3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01026da	obj/kern/kernel.asm	/^f01026da:	00 $/;"	l
f01026db	obj/kern/kernel.asm	/^f01026db:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f01026e0	obj/kern/kernel.asm	/^f01026e0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01026e3	obj/kern/kernel.asm	/^f01026e3:	e8 bc e5 ff ff       	call   f0100ca4 <pgdir_walk>$/;"	l
f01026e8	obj/kern/kernel.asm	/^f01026e8:	89 d8                	mov    %ebx,%eax$/;"	l
f01026ea	obj/kern/kernel.asm	/^f01026ea:	e8 59 e3 ff ff       	call   f0100a48 <page2kva>$/;"	l
f01026ef	obj/kern/kernel.asm	/^f01026ef:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01026f2	obj/kern/kernel.asm	/^f01026f2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01026f7	obj/kern/kernel.asm	/^f01026f7:	f6 04 90 01          	testb  $0x1,(%eax,%edx,4)$/;"	l
f01026fb	obj/kern/kernel.asm	/^f01026fb:	74 24                	je     f0102721 <mem_init+0x1729>$/;"	l
f01026fd	obj/kern/kernel.asm	/^f01026fd:	c7 44 24 0c 56 62 10 	movl   $0xf0106256,0xc(%esp)$/;"	l
f0102704	obj/kern/kernel.asm	/^f0102704:	f0 $/;"	l
f0102705	obj/kern/kernel.asm	/^f0102705:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f010270c	obj/kern/kernel.asm	/^f010270c:	f0 $/;"	l
f010270d	obj/kern/kernel.asm	/^f010270d:	c7 44 24 04 20 04 00 	movl   $0x420,0x4(%esp)$/;"	l
f0102714	obj/kern/kernel.asm	/^f0102714:	00 $/;"	l
f0102715	obj/kern/kernel.asm	/^f0102715:	c7 04 24 a7 5f 10 f0 	movl   $0xf0105fa7,(%esp)$/;"	l
f010271c	obj/kern/kernel.asm	/^f010271c:	e8 1f d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102721	obj/kern/kernel.asm	/^f0102721:	83 c2 01             	add    $0x1,%edx$/;"	l
f0102724	obj/kern/kernel.asm	/^f0102724:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f010272a	obj/kern/kernel.asm	/^f010272a:	75 cb                	jne    f01026f7 <mem_init+0x16ff>$/;"	l
f010272c	obj/kern/kernel.asm	/^f010272c:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f0102731	obj/kern/kernel.asm	/^f0102731:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102737	obj/kern/kernel.asm	/^f0102737:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f010273d	obj/kern/kernel.asm	/^f010273d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102740	obj/kern/kernel.asm	/^f0102740:	a3 40 92 22 f0       	mov    %eax,0xf0229240$/;"	l
f0102745	obj/kern/kernel.asm	/^f0102745:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102748	obj/kern/kernel.asm	/^f0102748:	e8 d8 e4 ff ff       	call   f0100c25 <page_free>$/;"	l
f010274d	obj/kern/kernel.asm	/^f010274d:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102750	obj/kern/kernel.asm	/^f0102750:	e8 d0 e4 ff ff       	call   f0100c25 <page_free>$/;"	l
f0102755	obj/kern/kernel.asm	/^f0102755:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102758	obj/kern/kernel.asm	/^f0102758:	e8 c8 e4 ff ff       	call   f0100c25 <page_free>$/;"	l
f010275d	obj/kern/kernel.asm	/^f010275d:	c7 44 24 04 01 10 00 	movl   $0x1001,0x4(%esp)$/;"	l
f0102764	obj/kern/kernel.asm	/^f0102764:	00 $/;"	l
f0102765	obj/kern/kernel.asm	/^f0102765:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010276c	obj/kern/kernel.asm	/^f010276c:	e8 65 e8 ff ff       	call   f0100fd6 <mmio_map_region>$/;"	l
f0102771	obj/kern/kernel.asm	/^f0102771:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0102776	obj/kern/kernel.asm	/^f0102776:	0f 85 d3 ec ff ff    	jne    f010144f <mem_init+0x457>$/;"	l
f010277c	obj/kern/kernel.asm	/^f010277c:	e9 aa ec ff ff       	jmp    f010142b <mem_init+0x433>$/;"	l
f0102781	obj/kern/kernel.asm	/^f0102781:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0102786	obj/kern/kernel.asm	/^f0102786:	0f 85 c9 ec ff ff    	jne    f0101455 <mem_init+0x45d>$/;"	l
f010278c	obj/kern/kernel.asm	/^f010278c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0102790	obj/kern/kernel.asm	/^f0102790:	e9 96 ec ff ff       	jmp    f010142b <mem_init+0x433>$/;"	l
f0102795	obj/kern/kernel.asm	/^f0102795 <user_mem_check>:$/;"	l
f0102795	obj/kern/kernel.asm	/^f0102795:	55                   	push   %ebp$/;"	l
f0102796	obj/kern/kernel.asm	/^f0102796:	89 e5                	mov    %esp,%ebp$/;"	l
f0102798	obj/kern/kernel.asm	/^f0102798:	57                   	push   %edi$/;"	l
f0102799	obj/kern/kernel.asm	/^f0102799:	56                   	push   %esi$/;"	l
f010279a	obj/kern/kernel.asm	/^f010279a:	53                   	push   %ebx$/;"	l
f010279b	obj/kern/kernel.asm	/^f010279b:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010279e	obj/kern/kernel.asm	/^f010279e:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01027a1	obj/kern/kernel.asm	/^f01027a1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01027a4	obj/kern/kernel.asm	/^f01027a4:	89 c3                	mov    %eax,%ebx$/;"	l
f01027a6	obj/kern/kernel.asm	/^f01027a6:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01027a9	obj/kern/kernel.asm	/^f01027a9:	8d 44 10 ff          	lea    -0x1(%eax,%edx,1),%eax$/;"	l
f01027ad	obj/kern/kernel.asm	/^f01027ad:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01027b0	obj/kern/kernel.asm	/^f01027b0:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f01027b3	obj/kern/kernel.asm	/^f01027b3:	83 ce 05             	or     $0x5,%esi$/;"	l
f01027b6	obj/kern/kernel.asm	/^f01027b6:	eb 51                	jmp    f0102809 <user_mem_check+0x74>$/;"	l
f01027b8	obj/kern/kernel.asm	/^f01027b8:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f01027be	obj/kern/kernel.asm	/^f01027be:	76 0d                	jbe    f01027cd <user_mem_check+0x38>$/;"	l
f01027c0	obj/kern/kernel.asm	/^f01027c0:	89 1d 3c 92 22 f0    	mov    %ebx,0xf022923c$/;"	l
f01027c6	obj/kern/kernel.asm	/^f01027c6:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01027cb	obj/kern/kernel.asm	/^f01027cb:	eb 46                	jmp    f0102813 <user_mem_check+0x7e>$/;"	l
f01027cd	obj/kern/kernel.asm	/^f01027cd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01027d4	obj/kern/kernel.asm	/^f01027d4:	00 $/;"	l
f01027d5	obj/kern/kernel.asm	/^f01027d5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01027d9	obj/kern/kernel.asm	/^f01027d9:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01027dc	obj/kern/kernel.asm	/^f01027dc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01027df	obj/kern/kernel.asm	/^f01027df:	e8 c0 e4 ff ff       	call   f0100ca4 <pgdir_walk>$/;"	l
f01027e4	obj/kern/kernel.asm	/^f01027e4:	85 c0                	test   %eax,%eax$/;"	l
f01027e6	obj/kern/kernel.asm	/^f01027e6:	74 08                	je     f01027f0 <user_mem_check+0x5b>$/;"	l
f01027e8	obj/kern/kernel.asm	/^f01027e8:	89 f1                	mov    %esi,%ecx$/;"	l
f01027ea	obj/kern/kernel.asm	/^f01027ea:	23 08                	and    (%eax),%ecx$/;"	l
f01027ec	obj/kern/kernel.asm	/^f01027ec:	39 ce                	cmp    %ecx,%esi$/;"	l
f01027ee	obj/kern/kernel.asm	/^f01027ee:	74 0d                	je     f01027fd <user_mem_check+0x68>$/;"	l
f01027f0	obj/kern/kernel.asm	/^f01027f0:	89 1d 3c 92 22 f0    	mov    %ebx,0xf022923c$/;"	l
f01027f6	obj/kern/kernel.asm	/^f01027f6:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01027fb	obj/kern/kernel.asm	/^f01027fb:	eb 16                	jmp    f0102813 <user_mem_check+0x7e>$/;"	l
f01027fd	obj/kern/kernel.asm	/^f01027fd:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102803	obj/kern/kernel.asm	/^f0102803:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102809	obj/kern/kernel.asm	/^f0102809:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f010280c	obj/kern/kernel.asm	/^f010280c:	76 aa                	jbe    f01027b8 <user_mem_check+0x23>$/;"	l
f010280e	obj/kern/kernel.asm	/^f010280e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102813	obj/kern/kernel.asm	/^f0102813:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0102816	obj/kern/kernel.asm	/^f0102816:	5b                   	pop    %ebx$/;"	l
f0102817	obj/kern/kernel.asm	/^f0102817:	5e                   	pop    %esi$/;"	l
f0102818	obj/kern/kernel.asm	/^f0102818:	5f                   	pop    %edi$/;"	l
f0102819	obj/kern/kernel.asm	/^f0102819:	5d                   	pop    %ebp$/;"	l
f010281a	obj/kern/kernel.asm	/^f010281a:	c3                   	ret    $/;"	l
f010281b	obj/kern/kernel.asm	/^f010281b <user_mem_assert>:$/;"	l
f010281b	obj/kern/kernel.asm	/^f010281b:	55                   	push   %ebp$/;"	l
f010281c	obj/kern/kernel.asm	/^f010281c:	89 e5                	mov    %esp,%ebp$/;"	l
f010281e	obj/kern/kernel.asm	/^f010281e:	53                   	push   %ebx$/;"	l
f010281f	obj/kern/kernel.asm	/^f010281f:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0102822	obj/kern/kernel.asm	/^f0102822:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0102825	obj/kern/kernel.asm	/^f0102825:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0102828	obj/kern/kernel.asm	/^f0102828:	83 c8 04             	or     $0x4,%eax$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010282f	obj/kern/kernel.asm	/^f010282f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0102832	obj/kern/kernel.asm	/^f0102832:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102836	obj/kern/kernel.asm	/^f0102836:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102839	obj/kern/kernel.asm	/^f0102839:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010283d	obj/kern/kernel.asm	/^f010283d:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102840	obj/kern/kernel.asm	/^f0102840:	e8 50 ff ff ff       	call   f0102795 <user_mem_check>$/;"	l
f0102845	obj/kern/kernel.asm	/^f0102845:	85 c0                	test   %eax,%eax$/;"	l
f0102847	obj/kern/kernel.asm	/^f0102847:	79 24                	jns    f010286d <user_mem_assert+0x52>$/;"	l
f0102849	obj/kern/kernel.asm	/^f0102849:	a1 3c 92 22 f0       	mov    0xf022923c,%eax$/;"	l
f010284e	obj/kern/kernel.asm	/^f010284e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102852	obj/kern/kernel.asm	/^f0102852:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0102855	obj/kern/kernel.asm	/^f0102855:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102859	obj/kern/kernel.asm	/^f0102859:	c7 04 24 64 5f 10 f0 	movl   $0xf0105f64,(%esp)$/;"	l
f0102860	obj/kern/kernel.asm	/^f0102860:	e8 2f 0a 00 00       	call   f0103294 <cprintf>$/;"	l
f0102865	obj/kern/kernel.asm	/^f0102865:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102868	obj/kern/kernel.asm	/^f0102868:	e8 e4 06 00 00       	call   f0102f51 <env_destroy>$/;"	l
f010286d	obj/kern/kernel.asm	/^f010286d:	83 c4 14             	add    $0x14,%esp$/;"	l
f0102870	obj/kern/kernel.asm	/^f0102870:	5b                   	pop    %ebx$/;"	l
f0102871	obj/kern/kernel.asm	/^f0102871:	5d                   	pop    %ebp$/;"	l
f0102872	obj/kern/kernel.asm	/^f0102872:	c3                   	ret    $/;"	l
f0102873	obj/kern/kernel.asm	/^f0102873 <region_alloc>:$/;"	l
f0102873	obj/kern/kernel.asm	/^f0102873:	55                   	push   %ebp$/;"	l
f0102874	obj/kern/kernel.asm	/^f0102874:	89 e5                	mov    %esp,%ebp$/;"	l
f0102876	obj/kern/kernel.asm	/^f0102876:	57                   	push   %edi$/;"	l
f0102877	obj/kern/kernel.asm	/^f0102877:	56                   	push   %esi$/;"	l
f0102878	obj/kern/kernel.asm	/^f0102878:	53                   	push   %ebx$/;"	l
f0102879	obj/kern/kernel.asm	/^f0102879:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010287c	obj/kern/kernel.asm	/^f010287c:	89 c7                	mov    %eax,%edi$/;"	l
f010287e	obj/kern/kernel.asm	/^f010287e:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102884	obj/kern/kernel.asm	/^f0102884:	89 d6                	mov    %edx,%esi$/;"	l
f0102886	obj/kern/kernel.asm	/^f0102886:	8d 99 ff 0f 00 00    	lea    0xfff(%ecx),%ebx$/;"	l
f010288c	obj/kern/kernel.asm	/^f010288c:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102892	obj/kern/kernel.asm	/^f0102892:	eb 77                	jmp    f010290b <region_alloc+0x98>$/;"	l
f0102894	obj/kern/kernel.asm	/^f0102894:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f010289b	obj/kern/kernel.asm	/^f010289b:	e8 fa e2 ff ff       	call   f0100b9a <page_alloc>$/;"	l
f01028a0	obj/kern/kernel.asm	/^f01028a0:	85 c0                	test   %eax,%eax$/;"	l
f01028a2	obj/kern/kernel.asm	/^f01028a2:	75 1c                	jne    f01028c0 <region_alloc+0x4d>$/;"	l
f01028a4	obj/kern/kernel.asm	/^f01028a4:	c7 44 24 08 70 62 10 	movl   $0xf0106270,0x8(%esp)$/;"	l
f01028ab	obj/kern/kernel.asm	/^f01028ab:	f0 $/;"	l
f01028ac	obj/kern/kernel.asm	/^f01028ac:	c7 44 24 04 34 01 00 	movl   $0x134,0x4(%esp)$/;"	l
f01028b3	obj/kern/kernel.asm	/^f01028b3:	00 $/;"	l
f01028b4	obj/kern/kernel.asm	/^f01028b4:	c7 04 24 26 63 10 f0 	movl   $0xf0106326,(%esp)$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	e8 80 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028c0	obj/kern/kernel.asm	/^f01028c0:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f01028c7	obj/kern/kernel.asm	/^f01028c7:	00 $/;"	l
f01028c8	obj/kern/kernel.asm	/^f01028c8:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01028cc	obj/kern/kernel.asm	/^f01028cc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01028d0	obj/kern/kernel.asm	/^f01028d0:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01028d3	obj/kern/kernel.asm	/^f01028d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01028d6	obj/kern/kernel.asm	/^f01028d6:	e8 6b e6 ff ff       	call   f0100f46 <page_insert>$/;"	l
f01028db	obj/kern/kernel.asm	/^f01028db:	85 c0                	test   %eax,%eax$/;"	l
f01028dd	obj/kern/kernel.asm	/^f01028dd:	74 20                	je     f01028ff <region_alloc+0x8c>$/;"	l
f01028df	obj/kern/kernel.asm	/^f01028df:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01028e3	obj/kern/kernel.asm	/^f01028e3:	c7 44 24 08 a4 62 10 	movl   $0xf01062a4,0x8(%esp)$/;"	l
f01028ea	obj/kern/kernel.asm	/^f01028ea:	f0 $/;"	l
f01028eb	obj/kern/kernel.asm	/^f01028eb:	c7 44 24 04 39 01 00 	movl   $0x139,0x4(%esp)$/;"	l
f01028f2	obj/kern/kernel.asm	/^f01028f2:	00 $/;"	l
f01028f3	obj/kern/kernel.asm	/^f01028f3:	c7 04 24 26 63 10 f0 	movl   $0xf0106326,(%esp)$/;"	l
f01028fa	obj/kern/kernel.asm	/^f01028fa:	e8 41 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028ff	obj/kern/kernel.asm	/^f01028ff:	81 eb 00 10 00 00    	sub    $0x1000,%ebx$/;"	l
f0102905	obj/kern/kernel.asm	/^f0102905:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f010290b	obj/kern/kernel.asm	/^f010290b:	85 db                	test   %ebx,%ebx$/;"	l
f010290d	obj/kern/kernel.asm	/^f010290d:	75 85                	jne    f0102894 <region_alloc+0x21>$/;"	l
f010290f	obj/kern/kernel.asm	/^f010290f:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0102912	obj/kern/kernel.asm	/^f0102912:	5b                   	pop    %ebx$/;"	l
f0102913	obj/kern/kernel.asm	/^f0102913:	5e                   	pop    %esi$/;"	l
f0102914	obj/kern/kernel.asm	/^f0102914:	5f                   	pop    %edi$/;"	l
f0102915	obj/kern/kernel.asm	/^f0102915:	5d                   	pop    %ebp$/;"	l
f0102916	obj/kern/kernel.asm	/^f0102916:	c3                   	ret    $/;"	l
f0102917	obj/kern/kernel.asm	/^f0102917 <envid2env>:$/;"	l
f0102917	obj/kern/kernel.asm	/^f0102917:	55                   	push   %ebp$/;"	l
f0102918	obj/kern/kernel.asm	/^f0102918:	89 e5                	mov    %esp,%ebp$/;"	l
f010291a	obj/kern/kernel.asm	/^f010291a:	56                   	push   %esi$/;"	l
f010291b	obj/kern/kernel.asm	/^f010291b:	53                   	push   %ebx$/;"	l
f010291c	obj/kern/kernel.asm	/^f010291c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010291f	obj/kern/kernel.asm	/^f010291f:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0102922	obj/kern/kernel.asm	/^f0102922:	85 c0                	test   %eax,%eax$/;"	l
f0102924	obj/kern/kernel.asm	/^f0102924:	75 1a                	jne    f0102940 <envid2env+0x29>$/;"	l
f0102926	obj/kern/kernel.asm	/^f0102926:	e8 5e 24 00 00       	call   f0104d89 <cpunum>$/;"	l
f010292b	obj/kern/kernel.asm	/^f010292b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010292e	obj/kern/kernel.asm	/^f010292e:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0102934	obj/kern/kernel.asm	/^f0102934:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0102937	obj/kern/kernel.asm	/^f0102937:	89 01                	mov    %eax,(%ecx)$/;"	l
f0102939	obj/kern/kernel.asm	/^f0102939:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010293e	obj/kern/kernel.asm	/^f010293e:	eb 70                	jmp    f01029b0 <envid2env+0x99>$/;"	l
f0102940	obj/kern/kernel.asm	/^f0102940:	89 c3                	mov    %eax,%ebx$/;"	l
f0102942	obj/kern/kernel.asm	/^f0102942:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0102948	obj/kern/kernel.asm	/^f0102948:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f010294b	obj/kern/kernel.asm	/^f010294b:	03 1d 48 92 22 f0    	add    0xf0229248,%ebx$/;"	l
f0102951	obj/kern/kernel.asm	/^f0102951:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0102955	obj/kern/kernel.asm	/^f0102955:	74 05                	je     f010295c <envid2env+0x45>$/;"	l
f0102957	obj/kern/kernel.asm	/^f0102957:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f010295a	obj/kern/kernel.asm	/^f010295a:	74 10                	je     f010296c <envid2env+0x55>$/;"	l
f010295c	obj/kern/kernel.asm	/^f010295c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010295f	obj/kern/kernel.asm	/^f010295f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102965	obj/kern/kernel.asm	/^f0102965:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010296a	obj/kern/kernel.asm	/^f010296a:	eb 44                	jmp    f01029b0 <envid2env+0x99>$/;"	l
f010296c	obj/kern/kernel.asm	/^f010296c:	84 d2                	test   %dl,%dl$/;"	l
f010296e	obj/kern/kernel.asm	/^f010296e:	74 36                	je     f01029a6 <envid2env+0x8f>$/;"	l
f0102970	obj/kern/kernel.asm	/^f0102970:	e8 14 24 00 00       	call   f0104d89 <cpunum>$/;"	l
f0102975	obj/kern/kernel.asm	/^f0102975:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102978	obj/kern/kernel.asm	/^f0102978:	39 98 28 a0 22 f0    	cmp    %ebx,-0xfdd5fd8(%eax)$/;"	l
f010297e	obj/kern/kernel.asm	/^f010297e:	74 26                	je     f01029a6 <envid2env+0x8f>$/;"	l
f0102980	obj/kern/kernel.asm	/^f0102980:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f0102983	obj/kern/kernel.asm	/^f0102983:	e8 01 24 00 00       	call   f0104d89 <cpunum>$/;"	l
f0102988	obj/kern/kernel.asm	/^f0102988:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010298b	obj/kern/kernel.asm	/^f010298b:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0102991	obj/kern/kernel.asm	/^f0102991:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f0102994	obj/kern/kernel.asm	/^f0102994:	74 10                	je     f01029a6 <envid2env+0x8f>$/;"	l
f0102996	obj/kern/kernel.asm	/^f0102996:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010299f	obj/kern/kernel.asm	/^f010299f:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01029a4	obj/kern/kernel.asm	/^f01029a4:	eb 0a                	jmp    f01029b0 <envid2env+0x99>$/;"	l
f01029a6	obj/kern/kernel.asm	/^f01029a6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01029a9	obj/kern/kernel.asm	/^f01029a9:	89 18                	mov    %ebx,(%eax)$/;"	l
f01029ab	obj/kern/kernel.asm	/^f01029ab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01029b0	obj/kern/kernel.asm	/^f01029b0:	5b                   	pop    %ebx$/;"	l
f01029b1	obj/kern/kernel.asm	/^f01029b1:	5e                   	pop    %esi$/;"	l
f01029b2	obj/kern/kernel.asm	/^f01029b2:	5d                   	pop    %ebp$/;"	l
f01029b3	obj/kern/kernel.asm	/^f01029b3:	c3                   	ret    $/;"	l
f01029b4	obj/kern/kernel.asm	/^f01029b4 <env_init_percpu>:$/;"	l
f01029b4	obj/kern/kernel.asm	/^f01029b4:	55                   	push   %ebp$/;"	l
f01029b5	obj/kern/kernel.asm	/^f01029b5:	89 e5                	mov    %esp,%ebp$/;"	l
f01029b7	obj/kern/kernel.asm	/^f01029b7:	b8 00 e3 11 f0       	mov    $0xf011e300,%eax$/;"	l
f01029bc	obj/kern/kernel.asm	/^f01029bc:	0f 01 10             	lgdtl  (%eax)$/;"	l
f01029bf	obj/kern/kernel.asm	/^f01029bf:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f01029c4	obj/kern/kernel.asm	/^f01029c4:	8e e8                	mov    %eax,%gs$/;"	l
f01029c6	obj/kern/kernel.asm	/^f01029c6:	8e e0                	mov    %eax,%fs$/;"	l
f01029c8	obj/kern/kernel.asm	/^f01029c8:	b0 10                	mov    $0x10,%al$/;"	l
f01029ca	obj/kern/kernel.asm	/^f01029ca:	8e c0                	mov    %eax,%es$/;"	l
f01029cc	obj/kern/kernel.asm	/^f01029cc:	8e d8                	mov    %eax,%ds$/;"	l
f01029ce	obj/kern/kernel.asm	/^f01029ce:	8e d0                	mov    %eax,%ss$/;"	l
f01029d0	obj/kern/kernel.asm	/^f01029d0:	ea d7 29 10 f0 08 00 	ljmp   $0x8,$0xf01029d7$/;"	l
f01029d7	obj/kern/kernel.asm	/^f01029d7:	b0 00                	mov    $0x0,%al$/;"	l
f01029d9	obj/kern/kernel.asm	/^f01029d9:	0f 00 d0             	lldt   %ax$/;"	l
f01029dc	obj/kern/kernel.asm	/^f01029dc:	5d                   	pop    %ebp$/;"	l
f01029dd	obj/kern/kernel.asm	/^f01029dd:	c3                   	ret    $/;"	l
f01029de	obj/kern/kernel.asm	/^f01029de <env_init>:$/;"	l
f01029de	obj/kern/kernel.asm	/^f01029de:	55                   	push   %ebp$/;"	l
f01029df	obj/kern/kernel.asm	/^f01029df:	89 e5                	mov    %esp,%ebp$/;"	l
f01029e1	obj/kern/kernel.asm	/^f01029e1:	56                   	push   %esi$/;"	l
f01029e2	obj/kern/kernel.asm	/^f01029e2:	53                   	push   %ebx$/;"	l
f01029e3	obj/kern/kernel.asm	/^f01029e3:	8b 35 48 92 22 f0    	mov    0xf0229248,%esi$/;"	l
f01029e9	obj/kern/kernel.asm	/^f01029e9:	8b 0d 4c 92 22 f0    	mov    0xf022924c,%ecx$/;"	l
f01029ef	obj/kern/kernel.asm	/^f01029ef:	8d 86 84 ef 01 00    	lea    0x1ef84(%esi),%eax$/;"	l
f01029f5	obj/kern/kernel.asm	/^f01029f5:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01029fa	obj/kern/kernel.asm	/^f01029fa:	89 c3                	mov    %eax,%ebx$/;"	l
f01029fc	obj/kern/kernel.asm	/^f01029fc:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f0102a03	obj/kern/kernel.asm	/^f0102a03:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f0102a0a	obj/kern/kernel.asm	/^f0102a0a:	89 48 44             	mov    %ecx,0x44(%eax)$/;"	l
f0102a0d	obj/kern/kernel.asm	/^f0102a0d:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
f0102a10	obj/kern/kernel.asm	/^f0102a10:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0102a13	obj/kern/kernel.asm	/^f0102a13:	74 04                	je     f0102a19 <env_init+0x3b>$/;"	l
f0102a15	obj/kern/kernel.asm	/^f0102a15:	89 d9                	mov    %ebx,%ecx$/;"	l
f0102a17	obj/kern/kernel.asm	/^f0102a17:	eb e1                	jmp    f01029fa <env_init+0x1c>$/;"	l
f0102a19	obj/kern/kernel.asm	/^f0102a19:	89 35 4c 92 22 f0    	mov    %esi,0xf022924c$/;"	l
f0102a1f	obj/kern/kernel.asm	/^f0102a1f:	e8 90 ff ff ff       	call   f01029b4 <env_init_percpu>$/;"	l
f0102a24	obj/kern/kernel.asm	/^f0102a24:	5b                   	pop    %ebx$/;"	l
f0102a25	obj/kern/kernel.asm	/^f0102a25:	5e                   	pop    %esi$/;"	l
f0102a26	obj/kern/kernel.asm	/^f0102a26:	5d                   	pop    %ebp$/;"	l
f0102a27	obj/kern/kernel.asm	/^f0102a27:	c3                   	ret    $/;"	l
f0102a28	obj/kern/kernel.asm	/^f0102a28 <env_alloc>:$/;"	l
f0102a28	obj/kern/kernel.asm	/^f0102a28:	55                   	push   %ebp$/;"	l
f0102a29	obj/kern/kernel.asm	/^f0102a29:	89 e5                	mov    %esp,%ebp$/;"	l
f0102a2b	obj/kern/kernel.asm	/^f0102a2b:	53                   	push   %ebx$/;"	l
f0102a2c	obj/kern/kernel.asm	/^f0102a2c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0102a2f	obj/kern/kernel.asm	/^f0102a2f:	8b 1d 4c 92 22 f0    	mov    0xf022924c,%ebx$/;"	l
f0102a35	obj/kern/kernel.asm	/^f0102a35:	85 db                	test   %ebx,%ebx$/;"	l
f0102a37	obj/kern/kernel.asm	/^f0102a37:	0f 84 a5 01 00 00    	je     f0102be2 <env_alloc+0x1ba>$/;"	l
f0102a3d	obj/kern/kernel.asm	/^f0102a3d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0102a44	obj/kern/kernel.asm	/^f0102a44:	e8 51 e1 ff ff       	call   f0100b9a <page_alloc>$/;"	l
f0102a49	obj/kern/kernel.asm	/^f0102a49:	85 c0                	test   %eax,%eax$/;"	l
f0102a4b	obj/kern/kernel.asm	/^f0102a4b:	0f 84 98 01 00 00    	je     f0102be9 <env_alloc+0x1c1>$/;"	l
f0102a51	obj/kern/kernel.asm	/^f0102a51:	89 c2                	mov    %eax,%edx$/;"	l
f0102a53	obj/kern/kernel.asm	/^f0102a53:	2b 15 10 9f 22 f0    	sub    0xf0229f10,%edx$/;"	l
f0102a59	obj/kern/kernel.asm	/^f0102a59:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102a5c	obj/kern/kernel.asm	/^f0102a5c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102a5f	obj/kern/kernel.asm	/^f0102a5f:	89 d1                	mov    %edx,%ecx$/;"	l
f0102a61	obj/kern/kernel.asm	/^f0102a61:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102a64	obj/kern/kernel.asm	/^f0102a64:	3b 0d 08 9f 22 f0    	cmp    0xf0229f08,%ecx$/;"	l
f0102a6a	obj/kern/kernel.asm	/^f0102a6a:	72 20                	jb     f0102a8c <env_alloc+0x64>$/;"	l
f0102a6c	obj/kern/kernel.asm	/^f0102a6c:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102a70	obj/kern/kernel.asm	/^f0102a70:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f0102a77	obj/kern/kernel.asm	/^f0102a77:	f0 $/;"	l
f0102a78	obj/kern/kernel.asm	/^f0102a78:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0102a7f	obj/kern/kernel.asm	/^f0102a7f:	00 $/;"	l
f0102a80	obj/kern/kernel.asm	/^f0102a80:	c7 04 24 99 5f 10 f0 	movl   $0xf0105f99,(%esp)$/;"	l
f0102a87	obj/kern/kernel.asm	/^f0102a87:	e8 b4 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a8c	obj/kern/kernel.asm	/^f0102a8c:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0102a92	obj/kern/kernel.asm	/^f0102a92:	89 53 60             	mov    %edx,0x60(%ebx)$/;"	l
f0102a95	obj/kern/kernel.asm	/^f0102a95:	83 00 08             	addl   $0x8,(%eax)$/;"	l
f0102a98	obj/kern/kernel.asm	/^f0102a98:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102a9f	obj/kern/kernel.asm	/^f0102a9f:	00 $/;"	l
f0102aa0	obj/kern/kernel.asm	/^f0102aa0:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f0102aa5	obj/kern/kernel.asm	/^f0102aa5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102aa9	obj/kern/kernel.asm	/^f0102aa9:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0102aac	obj/kern/kernel.asm	/^f0102aac:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102aaf	obj/kern/kernel.asm	/^f0102aaf:	e8 d0 1c 00 00       	call   f0104784 <memmove>$/;"	l
f0102ab4	obj/kern/kernel.asm	/^f0102ab4:	c7 44 24 08 ec 0e 00 	movl   $0xeec,0x8(%esp)$/;"	l
f0102abb	obj/kern/kernel.asm	/^f0102abb:	00 $/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102ac3	obj/kern/kernel.asm	/^f0102ac3:	00 $/;"	l
f0102ac4	obj/kern/kernel.asm	/^f0102ac4:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0102ac7	obj/kern/kernel.asm	/^f0102ac7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102aca	obj/kern/kernel.asm	/^f0102aca:	e8 68 1c 00 00       	call   f0104737 <memset>$/;"	l
f0102acf	obj/kern/kernel.asm	/^f0102acf:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0102ad2	obj/kern/kernel.asm	/^f0102ad2:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102ad7	obj/kern/kernel.asm	/^f0102ad7:	77 20                	ja     f0102af9 <env_alloc+0xd1>$/;"	l
f0102ad9	obj/kern/kernel.asm	/^f0102ad9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102add	obj/kern/kernel.asm	/^f0102add:	c7 44 24 08 a8 54 10 	movl   $0xf01054a8,0x8(%esp)$/;"	l
f0102ae4	obj/kern/kernel.asm	/^f0102ae4:	f0 $/;"	l
f0102ae5	obj/kern/kernel.asm	/^f0102ae5:	c7 44 24 04 ca 00 00 	movl   $0xca,0x4(%esp)$/;"	l
f0102aec	obj/kern/kernel.asm	/^f0102aec:	00 $/;"	l
f0102aed	obj/kern/kernel.asm	/^f0102aed:	c7 04 24 26 63 10 f0 	movl   $0xf0106326,(%esp)$/;"	l
f0102af4	obj/kern/kernel.asm	/^f0102af4:	e8 47 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102af9	obj/kern/kernel.asm	/^f0102af9:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0102aff	obj/kern/kernel.asm	/^f0102aff:	83 ca 05             	or     $0x5,%edx$/;"	l
f0102b02	obj/kern/kernel.asm	/^f0102b02:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0102b08	obj/kern/kernel.asm	/^f0102b08:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0102b0b	obj/kern/kernel.asm	/^f0102b0b:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0102b10	obj/kern/kernel.asm	/^f0102b10:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0102b15	obj/kern/kernel.asm	/^f0102b15:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102b1a	obj/kern/kernel.asm	/^f0102b1a:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f0102b1d	obj/kern/kernel.asm	/^f0102b1d:	89 da                	mov    %ebx,%edx$/;"	l
f0102b1f	obj/kern/kernel.asm	/^f0102b1f:	2b 15 48 92 22 f0    	sub    0xf0229248,%edx$/;"	l
f0102b25	obj/kern/kernel.asm	/^f0102b25:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0102b28	obj/kern/kernel.asm	/^f0102b28:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f0102b2e	obj/kern/kernel.asm	/^f0102b2e:	09 d0                	or     %edx,%eax$/;"	l
f0102b30	obj/kern/kernel.asm	/^f0102b30:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0102b33	obj/kern/kernel.asm	/^f0102b33:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102b36	obj/kern/kernel.asm	/^f0102b36:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0102b39	obj/kern/kernel.asm	/^f0102b39:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f0102b40	obj/kern/kernel.asm	/^f0102b40:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0102b47	obj/kern/kernel.asm	/^f0102b47:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0102b4e	obj/kern/kernel.asm	/^f0102b4e:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0102b55	obj/kern/kernel.asm	/^f0102b55:	00 $/;"	l
f0102b56	obj/kern/kernel.asm	/^f0102b56:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102b5d	obj/kern/kernel.asm	/^f0102b5d:	00 $/;"	l
f0102b5e	obj/kern/kernel.asm	/^f0102b5e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102b61	obj/kern/kernel.asm	/^f0102b61:	e8 d1 1b 00 00       	call   f0104737 <memset>$/;"	l
f0102b66	obj/kern/kernel.asm	/^f0102b66:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0102b6c	obj/kern/kernel.asm	/^f0102b6c:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f0102b72	obj/kern/kernel.asm	/^f0102b72:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0102b78	obj/kern/kernel.asm	/^f0102b78:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0102b7f	obj/kern/kernel.asm	/^f0102b7f:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f0102b85	obj/kern/kernel.asm	/^f0102b85:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f0102b8c	obj/kern/kernel.asm	/^f0102b8c:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f0102b90	obj/kern/kernel.asm	/^f0102b90:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0102b93	obj/kern/kernel.asm	/^f0102b93:	a3 4c 92 22 f0       	mov    %eax,0xf022924c$/;"	l
f0102b98	obj/kern/kernel.asm	/^f0102b98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102b9b	obj/kern/kernel.asm	/^f0102b9b:	89 18                	mov    %ebx,(%eax)$/;"	l
f0102b9d	obj/kern/kernel.asm	/^f0102b9d:	8b 5b 48             	mov    0x48(%ebx),%ebx$/;"	l
f0102ba0	obj/kern/kernel.asm	/^f0102ba0:	e8 e4 21 00 00       	call   f0104d89 <cpunum>$/;"	l
f0102ba5	obj/kern/kernel.asm	/^f0102ba5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102ba8	obj/kern/kernel.asm	/^f0102ba8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102bad	obj/kern/kernel.asm	/^f0102bad:	83 b8 28 a0 22 f0 00 	cmpl   $0x0,-0xfdd5fd8(%eax)$/;"	l
f0102bb4	obj/kern/kernel.asm	/^f0102bb4:	74 11                	je     f0102bc7 <env_alloc+0x19f>$/;"	l
f0102bb6	obj/kern/kernel.asm	/^f0102bb6:	e8 ce 21 00 00       	call   f0104d89 <cpunum>$/;"	l
f0102bbb	obj/kern/kernel.asm	/^f0102bbb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102bbe	obj/kern/kernel.asm	/^f0102bbe:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0102bc4	obj/kern/kernel.asm	/^f0102bc4:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f0102bc7	obj/kern/kernel.asm	/^f0102bc7:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0102bcb	obj/kern/kernel.asm	/^f0102bcb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0102bcf	obj/kern/kernel.asm	/^f0102bcf:	c7 04 24 31 63 10 f0 	movl   $0xf0106331,(%esp)$/;"	l
f0102bd6	obj/kern/kernel.asm	/^f0102bd6:	e8 b9 06 00 00       	call   f0103294 <cprintf>$/;"	l
f0102bdb	obj/kern/kernel.asm	/^f0102bdb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102be0	obj/kern/kernel.asm	/^f0102be0:	eb 0c                	jmp    f0102bee <env_alloc+0x1c6>$/;"	l
f0102be2	obj/kern/kernel.asm	/^f0102be2:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0102be7	obj/kern/kernel.asm	/^f0102be7:	eb 05                	jmp    f0102bee <env_alloc+0x1c6>$/;"	l
f0102be9	obj/kern/kernel.asm	/^f0102be9:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0102bee	obj/kern/kernel.asm	/^f0102bee:	83 c4 14             	add    $0x14,%esp$/;"	l
f0102bf1	obj/kern/kernel.asm	/^f0102bf1:	5b                   	pop    %ebx$/;"	l
f0102bf2	obj/kern/kernel.asm	/^f0102bf2:	5d                   	pop    %ebp$/;"	l
f0102bf3	obj/kern/kernel.asm	/^f0102bf3:	c3                   	ret    $/;"	l
f0102bf4	obj/kern/kernel.asm	/^f0102bf4 <env_create>:$/;"	l
f0102bf4	obj/kern/kernel.asm	/^f0102bf4:	55                   	push   %ebp$/;"	l
f0102bf5	obj/kern/kernel.asm	/^f0102bf5:	89 e5                	mov    %esp,%ebp$/;"	l
f0102bf7	obj/kern/kernel.asm	/^f0102bf7:	57                   	push   %edi$/;"	l
f0102bf8	obj/kern/kernel.asm	/^f0102bf8:	56                   	push   %esi$/;"	l
f0102bf9	obj/kern/kernel.asm	/^f0102bf9:	53                   	push   %ebx$/;"	l
f0102bfa	obj/kern/kernel.asm	/^f0102bfa:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0102bfd	obj/kern/kernel.asm	/^f0102bfd:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0102c00	obj/kern/kernel.asm	/^f0102c00:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102c07	obj/kern/kernel.asm	/^f0102c07:	00 $/;"	l
f0102c08	obj/kern/kernel.asm	/^f0102c08:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0102c0b	obj/kern/kernel.asm	/^f0102c0b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c0e	obj/kern/kernel.asm	/^f0102c0e:	e8 15 fe ff ff       	call   f0102a28 <env_alloc>$/;"	l
f0102c13	obj/kern/kernel.asm	/^f0102c13:	85 c0                	test   %eax,%eax$/;"	l
f0102c15	obj/kern/kernel.asm	/^f0102c15:	79 20                	jns    f0102c37 <env_create+0x43>$/;"	l
f0102c17	obj/kern/kernel.asm	/^f0102c17:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102c1b	obj/kern/kernel.asm	/^f0102c1b:	c7 44 24 08 46 63 10 	movl   $0xf0106346,0x8(%esp)$/;"	l
f0102c22	obj/kern/kernel.asm	/^f0102c22:	f0 $/;"	l
f0102c23	obj/kern/kernel.asm	/^f0102c23:	c7 44 24 04 a6 01 00 	movl   $0x1a6,0x4(%esp)$/;"	l
f0102c2a	obj/kern/kernel.asm	/^f0102c2a:	00 $/;"	l
f0102c2b	obj/kern/kernel.asm	/^f0102c2b:	c7 04 24 26 63 10 f0 	movl   $0xf0106326,(%esp)$/;"	l
f0102c32	obj/kern/kernel.asm	/^f0102c32:	e8 09 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c37	obj/kern/kernel.asm	/^f0102c37:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0102c3a	obj/kern/kernel.asm	/^f0102c3a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102c3d	obj/kern/kernel.asm	/^f0102c3d:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f0102c43	obj/kern/kernel.asm	/^f0102c43:	74 1c                	je     f0102c61 <env_create+0x6d>$/;"	l
f0102c45	obj/kern/kernel.asm	/^f0102c45:	c7 44 24 08 dc 62 10 	movl   $0xf01062dc,0x8(%esp)$/;"	l
f0102c4c	obj/kern/kernel.asm	/^f0102c4c:	f0 $/;"	l
f0102c4d	obj/kern/kernel.asm	/^f0102c4d:	c7 44 24 04 78 01 00 	movl   $0x178,0x4(%esp)$/;"	l
f0102c54	obj/kern/kernel.asm	/^f0102c54:	00 $/;"	l
f0102c55	obj/kern/kernel.asm	/^f0102c55:	c7 04 24 26 63 10 f0 	movl   $0xf0106326,(%esp)$/;"	l
f0102c5c	obj/kern/kernel.asm	/^f0102c5c:	e8 df d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c61	obj/kern/kernel.asm	/^f0102c61:	89 fb                	mov    %edi,%ebx$/;"	l
f0102c63	obj/kern/kernel.asm	/^f0102c63:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f0102c66	obj/kern/kernel.asm	/^f0102c66:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f0102c6a	obj/kern/kernel.asm	/^f0102c6a:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f0102c6d	obj/kern/kernel.asm	/^f0102c6d:	01 de                	add    %ebx,%esi$/;"	l
f0102c6f	obj/kern/kernel.asm	/^f0102c6f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102c72	obj/kern/kernel.asm	/^f0102c72:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0102c75	obj/kern/kernel.asm	/^f0102c75:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102c7a	obj/kern/kernel.asm	/^f0102c7a:	77 20                	ja     f0102c9c <env_create+0xa8>$/;"	l
f0102c7c	obj/kern/kernel.asm	/^f0102c7c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102c80	obj/kern/kernel.asm	/^f0102c80:	c7 44 24 08 a8 54 10 	movl   $0xf01054a8,0x8(%esp)$/;"	l
f0102c87	obj/kern/kernel.asm	/^f0102c87:	f0 $/;"	l
f0102c88	obj/kern/kernel.asm	/^f0102c88:	c7 44 24 04 7e 01 00 	movl   $0x17e,0x4(%esp)$/;"	l
f0102c8f	obj/kern/kernel.asm	/^f0102c8f:	00 $/;"	l
f0102c90	obj/kern/kernel.asm	/^f0102c90:	c7 04 24 26 63 10 f0 	movl   $0xf0106326,(%esp)$/;"	l
f0102c97	obj/kern/kernel.asm	/^f0102c97:	e8 a4 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c9c	obj/kern/kernel.asm	/^f0102c9c:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102ca1	obj/kern/kernel.asm	/^f0102ca1:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102ca4	obj/kern/kernel.asm	/^f0102ca4:	eb 4b                	jmp    f0102cf1 <env_create+0xfd>$/;"	l
f0102ca6	obj/kern/kernel.asm	/^f0102ca6:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0102ca9	obj/kern/kernel.asm	/^f0102ca9:	75 43                	jne    f0102cee <env_create+0xfa>$/;"	l
f0102cab	obj/kern/kernel.asm	/^f0102cab:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0102cae	obj/kern/kernel.asm	/^f0102cae:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0102cb1	obj/kern/kernel.asm	/^f0102cb1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102cb4	obj/kern/kernel.asm	/^f0102cb4:	e8 ba fb ff ff       	call   f0102873 <region_alloc>$/;"	l
f0102cb9	obj/kern/kernel.asm	/^f0102cb9:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0102cbc	obj/kern/kernel.asm	/^f0102cbc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102cc0	obj/kern/kernel.asm	/^f0102cc0:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102cc7	obj/kern/kernel.asm	/^f0102cc7:	00 $/;"	l
f0102cc8	obj/kern/kernel.asm	/^f0102cc8:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0102ccb	obj/kern/kernel.asm	/^f0102ccb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102cce	obj/kern/kernel.asm	/^f0102cce:	e8 64 1a 00 00       	call   f0104737 <memset>$/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0102cd6	obj/kern/kernel.asm	/^f0102cd6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102cda	obj/kern/kernel.asm	/^f0102cda:	89 f8                	mov    %edi,%eax$/;"	l
f0102cdc	obj/kern/kernel.asm	/^f0102cdc:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0102cdf	obj/kern/kernel.asm	/^f0102cdf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102ce3	obj/kern/kernel.asm	/^f0102ce3:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0102ce6	obj/kern/kernel.asm	/^f0102ce6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ce9	obj/kern/kernel.asm	/^f0102ce9:	e8 96 1a 00 00       	call   f0104784 <memmove>$/;"	l
f0102cee	obj/kern/kernel.asm	/^f0102cee:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0102cf1	obj/kern/kernel.asm	/^f0102cf1:	39 de                	cmp    %ebx,%esi$/;"	l
f0102cf3	obj/kern/kernel.asm	/^f0102cf3:	77 b1                	ja     f0102ca6 <env_create+0xb2>$/;"	l
f0102cf5	obj/kern/kernel.asm	/^f0102cf5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102cf8	obj/kern/kernel.asm	/^f0102cf8:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0102cfb	obj/kern/kernel.asm	/^f0102cfb:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d00	obj/kern/kernel.asm	/^f0102d00:	77 20                	ja     f0102d22 <env_create+0x12e>$/;"	l
f0102d02	obj/kern/kernel.asm	/^f0102d02:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102d06	obj/kern/kernel.asm	/^f0102d06:	c7 44 24 08 a8 54 10 	movl   $0xf01054a8,0x8(%esp)$/;"	l
f0102d0d	obj/kern/kernel.asm	/^f0102d0d:	f0 $/;"	l
f0102d0e	obj/kern/kernel.asm	/^f0102d0e:	c7 44 24 04 89 01 00 	movl   $0x189,0x4(%esp)$/;"	l
f0102d15	obj/kern/kernel.asm	/^f0102d15:	00 $/;"	l
f0102d16	obj/kern/kernel.asm	/^f0102d16:	c7 04 24 26 63 10 f0 	movl   $0xf0106326,(%esp)$/;"	l
f0102d1d	obj/kern/kernel.asm	/^f0102d1d:	e8 1e d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d22	obj/kern/kernel.asm	/^f0102d22:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102d27	obj/kern/kernel.asm	/^f0102d27:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102d2a	obj/kern/kernel.asm	/^f0102d2a:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0102d2d	obj/kern/kernel.asm	/^f0102d2d:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102d30	obj/kern/kernel.asm	/^f0102d30:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0102d33	obj/kern/kernel.asm	/^f0102d33:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0102d38	obj/kern/kernel.asm	/^f0102d38:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0102d3d	obj/kern/kernel.asm	/^f0102d3d:	89 f8                	mov    %edi,%eax$/;"	l
f0102d3f	obj/kern/kernel.asm	/^f0102d3f:	e8 2f fb ff ff       	call   f0102873 <region_alloc>$/;"	l
f0102d44	obj/kern/kernel.asm	/^f0102d44:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0102d47	obj/kern/kernel.asm	/^f0102d47:	5b                   	pop    %ebx$/;"	l
f0102d48	obj/kern/kernel.asm	/^f0102d48:	5e                   	pop    %esi$/;"	l
f0102d49	obj/kern/kernel.asm	/^f0102d49:	5f                   	pop    %edi$/;"	l
f0102d4a	obj/kern/kernel.asm	/^f0102d4a:	5d                   	pop    %ebp$/;"	l
f0102d4b	obj/kern/kernel.asm	/^f0102d4b:	c3                   	ret    $/;"	l
f0102d4c	obj/kern/kernel.asm	/^f0102d4c <env_free>:$/;"	l
f0102d4c	obj/kern/kernel.asm	/^f0102d4c:	55                   	push   %ebp$/;"	l
f0102d4d	obj/kern/kernel.asm	/^f0102d4d:	89 e5                	mov    %esp,%ebp$/;"	l
f0102d4f	obj/kern/kernel.asm	/^f0102d4f:	57                   	push   %edi$/;"	l
f0102d50	obj/kern/kernel.asm	/^f0102d50:	56                   	push   %esi$/;"	l
f0102d51	obj/kern/kernel.asm	/^f0102d51:	53                   	push   %ebx$/;"	l
f0102d52	obj/kern/kernel.asm	/^f0102d52:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0102d55	obj/kern/kernel.asm	/^f0102d55:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0102d58	obj/kern/kernel.asm	/^f0102d58:	e8 2c 20 00 00       	call   f0104d89 <cpunum>$/;"	l
f0102d5d	obj/kern/kernel.asm	/^f0102d5d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102d60	obj/kern/kernel.asm	/^f0102d60:	39 b8 28 a0 22 f0    	cmp    %edi,-0xfdd5fd8(%eax)$/;"	l
f0102d66	obj/kern/kernel.asm	/^f0102d66:	75 34                	jne    f0102d9c <env_free+0x50>$/;"	l
f0102d68	obj/kern/kernel.asm	/^f0102d68:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f0102d6d	obj/kern/kernel.asm	/^f0102d6d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d72	obj/kern/kernel.asm	/^f0102d72:	77 20                	ja     f0102d94 <env_free+0x48>$/;"	l
f0102d74	obj/kern/kernel.asm	/^f0102d74:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102d78	obj/kern/kernel.asm	/^f0102d78:	c7 44 24 08 a8 54 10 	movl   $0xf01054a8,0x8(%esp)$/;"	l
f0102d7f	obj/kern/kernel.asm	/^f0102d7f:	f0 $/;"	l
f0102d80	obj/kern/kernel.asm	/^f0102d80:	c7 44 24 04 bb 01 00 	movl   $0x1bb,0x4(%esp)$/;"	l
f0102d87	obj/kern/kernel.asm	/^f0102d87:	00 $/;"	l
f0102d88	obj/kern/kernel.asm	/^f0102d88:	c7 04 24 26 63 10 f0 	movl   $0xf0106326,(%esp)$/;"	l
f0102d8f	obj/kern/kernel.asm	/^f0102d8f:	e8 ac d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d94	obj/kern/kernel.asm	/^f0102d94:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102d99	obj/kern/kernel.asm	/^f0102d99:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102d9c	obj/kern/kernel.asm	/^f0102d9c:	8b 5f 48             	mov    0x48(%edi),%ebx$/;"	l
f0102d9f	obj/kern/kernel.asm	/^f0102d9f:	e8 e5 1f 00 00       	call   f0104d89 <cpunum>$/;"	l
f0102da4	obj/kern/kernel.asm	/^f0102da4:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0102da7	obj/kern/kernel.asm	/^f0102da7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102dac	obj/kern/kernel.asm	/^f0102dac:	83 ba 28 a0 22 f0 00 	cmpl   $0x0,-0xfdd5fd8(%edx)$/;"	l
f0102db3	obj/kern/kernel.asm	/^f0102db3:	74 11                	je     f0102dc6 <env_free+0x7a>$/;"	l
f0102db5	obj/kern/kernel.asm	/^f0102db5:	e8 cf 1f 00 00       	call   f0104d89 <cpunum>$/;"	l
f0102dba	obj/kern/kernel.asm	/^f0102dba:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102dbd	obj/kern/kernel.asm	/^f0102dbd:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0102dc3	obj/kern/kernel.asm	/^f0102dc3:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0102dc6	obj/kern/kernel.asm	/^f0102dc6:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0102dca	obj/kern/kernel.asm	/^f0102dca:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102dce	obj/kern/kernel.asm	/^f0102dce:	c7 04 24 55 63 10 f0 	movl   $0xf0106355,(%esp)$/;"	l
f0102dd5	obj/kern/kernel.asm	/^f0102dd5:	e8 ba 04 00 00       	call   f0103294 <cprintf>$/;"	l
f0102dda	obj/kern/kernel.asm	/^f0102dda:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0102de1	obj/kern/kernel.asm	/^f0102de1:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0102de4	obj/kern/kernel.asm	/^f0102de4:	89 c8                	mov    %ecx,%eax$/;"	l
f0102de6	obj/kern/kernel.asm	/^f0102de6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0102de9	obj/kern/kernel.asm	/^f0102de9:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0102dec	obj/kern/kernel.asm	/^f0102dec:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0102def	obj/kern/kernel.asm	/^f0102def:	8b 34 88             	mov    (%eax,%ecx,4),%esi$/;"	l
f0102df2	obj/kern/kernel.asm	/^f0102df2:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0102df8	obj/kern/kernel.asm	/^f0102df8:	0f 84 b7 00 00 00    	je     f0102eb5 <env_free+0x169>$/;"	l
f0102dfe	obj/kern/kernel.asm	/^f0102dfe:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0102e04	obj/kern/kernel.asm	/^f0102e04:	89 f0                	mov    %esi,%eax$/;"	l
f0102e06	obj/kern/kernel.asm	/^f0102e06:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102e09	obj/kern/kernel.asm	/^f0102e09:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0102e0c	obj/kern/kernel.asm	/^f0102e0c:	3b 05 08 9f 22 f0    	cmp    0xf0229f08,%eax$/;"	l
f0102e12	obj/kern/kernel.asm	/^f0102e12:	72 20                	jb     f0102e34 <env_free+0xe8>$/;"	l
f0102e14	obj/kern/kernel.asm	/^f0102e14:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0102e18	obj/kern/kernel.asm	/^f0102e18:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f0102e1f	obj/kern/kernel.asm	/^f0102e1f:	f0 $/;"	l
f0102e20	obj/kern/kernel.asm	/^f0102e20:	c7 44 24 04 ca 01 00 	movl   $0x1ca,0x4(%esp)$/;"	l
f0102e27	obj/kern/kernel.asm	/^f0102e27:	00 $/;"	l
f0102e28	obj/kern/kernel.asm	/^f0102e28:	c7 04 24 26 63 10 f0 	movl   $0xf0106326,(%esp)$/;"	l
f0102e2f	obj/kern/kernel.asm	/^f0102e2f:	e8 0c d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e34	obj/kern/kernel.asm	/^f0102e34:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0102e37	obj/kern/kernel.asm	/^f0102e37:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0102e3a	obj/kern/kernel.asm	/^f0102e3a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102e3d	obj/kern/kernel.asm	/^f0102e3d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102e42	obj/kern/kernel.asm	/^f0102e42:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0102e49	obj/kern/kernel.asm	/^f0102e49:	01 $/;"	l
f0102e4a	obj/kern/kernel.asm	/^f0102e4a:	74 17                	je     f0102e63 <env_free+0x117>$/;"	l
f0102e4c	obj/kern/kernel.asm	/^f0102e4c:	89 d8                	mov    %ebx,%eax$/;"	l
f0102e4e	obj/kern/kernel.asm	/^f0102e4e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102e51	obj/kern/kernel.asm	/^f0102e51:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0102e54	obj/kern/kernel.asm	/^f0102e54:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102e58	obj/kern/kernel.asm	/^f0102e58:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0102e5b	obj/kern/kernel.asm	/^f0102e5b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102e5e	obj/kern/kernel.asm	/^f0102e5e:	e8 9a e0 ff ff       	call   f0100efd <page_remove>$/;"	l
f0102e63	obj/kern/kernel.asm	/^f0102e63:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0102e66	obj/kern/kernel.asm	/^f0102e66:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0102e6c	obj/kern/kernel.asm	/^f0102e6c:	75 d4                	jne    f0102e42 <env_free+0xf6>$/;"	l
f0102e6e	obj/kern/kernel.asm	/^f0102e6e:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0102e74	obj/kern/kernel.asm	/^f0102e74:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0102e7b	obj/kern/kernel.asm	/^f0102e7b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0102e7e	obj/kern/kernel.asm	/^f0102e7e:	3b 05 08 9f 22 f0    	cmp    0xf0229f08,%eax$/;"	l
f0102e84	obj/kern/kernel.asm	/^f0102e84:	72 1c                	jb     f0102ea2 <env_free+0x156>$/;"	l
f0102e86	obj/kern/kernel.asm	/^f0102e86:	c7 44 24 08 a8 59 10 	movl   $0xf01059a8,0x8(%esp)$/;"	l
f0102e8d	obj/kern/kernel.asm	/^f0102e8d:	f0 $/;"	l
f0102e8e	obj/kern/kernel.asm	/^f0102e8e:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0102e95	obj/kern/kernel.asm	/^f0102e95:	00 $/;"	l
f0102e96	obj/kern/kernel.asm	/^f0102e96:	c7 04 24 99 5f 10 f0 	movl   $0xf0105f99,(%esp)$/;"	l
f0102e9d	obj/kern/kernel.asm	/^f0102e9d:	e8 9e d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ea2	obj/kern/kernel.asm	/^f0102ea2:	a1 10 9f 22 f0       	mov    0xf0229f10,%eax$/;"	l
f0102ea7	obj/kern/kernel.asm	/^f0102ea7:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0102eaa	obj/kern/kernel.asm	/^f0102eaa:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0102ead	obj/kern/kernel.asm	/^f0102ead:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102eb0	obj/kern/kernel.asm	/^f0102eb0:	e8 cc dd ff ff       	call   f0100c81 <page_decref>$/;"	l
f0102eb5	obj/kern/kernel.asm	/^f0102eb5:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0102eb9	obj/kern/kernel.asm	/^f0102eb9:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0102ec0	obj/kern/kernel.asm	/^f0102ec0:	0f 85 1b ff ff ff    	jne    f0102de1 <env_free+0x95>$/;"	l
f0102ec6	obj/kern/kernel.asm	/^f0102ec6:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0102ec9	obj/kern/kernel.asm	/^f0102ec9:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102ece	obj/kern/kernel.asm	/^f0102ece:	77 20                	ja     f0102ef0 <env_free+0x1a4>$/;"	l
f0102ed0	obj/kern/kernel.asm	/^f0102ed0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102ed4	obj/kern/kernel.asm	/^f0102ed4:	c7 44 24 08 a8 54 10 	movl   $0xf01054a8,0x8(%esp)$/;"	l
f0102edb	obj/kern/kernel.asm	/^f0102edb:	f0 $/;"	l
f0102edc	obj/kern/kernel.asm	/^f0102edc:	c7 44 24 04 d8 01 00 	movl   $0x1d8,0x4(%esp)$/;"	l
f0102ee3	obj/kern/kernel.asm	/^f0102ee3:	00 $/;"	l
f0102ee4	obj/kern/kernel.asm	/^f0102ee4:	c7 04 24 26 63 10 f0 	movl   $0xf0106326,(%esp)$/;"	l
f0102eeb	obj/kern/kernel.asm	/^f0102eeb:	e8 50 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ef0	obj/kern/kernel.asm	/^f0102ef0:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0102ef7	obj/kern/kernel.asm	/^f0102ef7:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102efc	obj/kern/kernel.asm	/^f0102efc:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102eff	obj/kern/kernel.asm	/^f0102eff:	3b 05 08 9f 22 f0    	cmp    0xf0229f08,%eax$/;"	l
f0102f05	obj/kern/kernel.asm	/^f0102f05:	72 1c                	jb     f0102f23 <env_free+0x1d7>$/;"	l
f0102f07	obj/kern/kernel.asm	/^f0102f07:	c7 44 24 08 a8 59 10 	movl   $0xf01059a8,0x8(%esp)$/;"	l
f0102f0e	obj/kern/kernel.asm	/^f0102f0e:	f0 $/;"	l
f0102f0f	obj/kern/kernel.asm	/^f0102f0f:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0102f16	obj/kern/kernel.asm	/^f0102f16:	00 $/;"	l
f0102f17	obj/kern/kernel.asm	/^f0102f17:	c7 04 24 99 5f 10 f0 	movl   $0xf0105f99,(%esp)$/;"	l
f0102f1e	obj/kern/kernel.asm	/^f0102f1e:	e8 1d d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f23	obj/kern/kernel.asm	/^f0102f23:	8b 15 10 9f 22 f0    	mov    0xf0229f10,%edx$/;"	l
f0102f29	obj/kern/kernel.asm	/^f0102f29:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0102f2c	obj/kern/kernel.asm	/^f0102f2c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102f2f	obj/kern/kernel.asm	/^f0102f2f:	e8 4d dd ff ff       	call   f0100c81 <page_decref>$/;"	l
f0102f34	obj/kern/kernel.asm	/^f0102f34:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0102f3b	obj/kern/kernel.asm	/^f0102f3b:	a1 4c 92 22 f0       	mov    0xf022924c,%eax$/;"	l
f0102f40	obj/kern/kernel.asm	/^f0102f40:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0102f43	obj/kern/kernel.asm	/^f0102f43:	89 3d 4c 92 22 f0    	mov    %edi,0xf022924c$/;"	l
f0102f49	obj/kern/kernel.asm	/^f0102f49:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0102f4c	obj/kern/kernel.asm	/^f0102f4c:	5b                   	pop    %ebx$/;"	l
f0102f4d	obj/kern/kernel.asm	/^f0102f4d:	5e                   	pop    %esi$/;"	l
f0102f4e	obj/kern/kernel.asm	/^f0102f4e:	5f                   	pop    %edi$/;"	l
f0102f4f	obj/kern/kernel.asm	/^f0102f4f:	5d                   	pop    %ebp$/;"	l
f0102f50	obj/kern/kernel.asm	/^f0102f50:	c3                   	ret    $/;"	l
f0102f51	obj/kern/kernel.asm	/^f0102f51 <env_destroy>:$/;"	l
f0102f51	obj/kern/kernel.asm	/^f0102f51:	55                   	push   %ebp$/;"	l
f0102f52	obj/kern/kernel.asm	/^f0102f52:	89 e5                	mov    %esp,%ebp$/;"	l
f0102f54	obj/kern/kernel.asm	/^f0102f54:	53                   	push   %ebx$/;"	l
f0102f55	obj/kern/kernel.asm	/^f0102f55:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0102f58	obj/kern/kernel.asm	/^f0102f58:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0102f5b	obj/kern/kernel.asm	/^f0102f5b:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0102f5f	obj/kern/kernel.asm	/^f0102f5f:	75 19                	jne    f0102f7a <env_destroy+0x29>$/;"	l
f0102f61	obj/kern/kernel.asm	/^f0102f61:	e8 23 1e 00 00       	call   f0104d89 <cpunum>$/;"	l
f0102f66	obj/kern/kernel.asm	/^f0102f66:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102f69	obj/kern/kernel.asm	/^f0102f69:	39 98 28 a0 22 f0    	cmp    %ebx,-0xfdd5fd8(%eax)$/;"	l
f0102f6f	obj/kern/kernel.asm	/^f0102f6f:	74 09                	je     f0102f7a <env_destroy+0x29>$/;"	l
f0102f71	obj/kern/kernel.asm	/^f0102f71:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0102f78	obj/kern/kernel.asm	/^f0102f78:	eb 2f                	jmp    f0102fa9 <env_destroy+0x58>$/;"	l
f0102f7a	obj/kern/kernel.asm	/^f0102f7a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102f7d	obj/kern/kernel.asm	/^f0102f7d:	e8 ca fd ff ff       	call   f0102d4c <env_free>$/;"	l
f0102f82	obj/kern/kernel.asm	/^f0102f82:	e8 02 1e 00 00       	call   f0104d89 <cpunum>$/;"	l
f0102f87	obj/kern/kernel.asm	/^f0102f87:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102f8a	obj/kern/kernel.asm	/^f0102f8a:	39 98 28 a0 22 f0    	cmp    %ebx,-0xfdd5fd8(%eax)$/;"	l
f0102f90	obj/kern/kernel.asm	/^f0102f90:	75 17                	jne    f0102fa9 <env_destroy+0x58>$/;"	l
f0102f92	obj/kern/kernel.asm	/^f0102f92:	e8 f2 1d 00 00       	call   f0104d89 <cpunum>$/;"	l
f0102f97	obj/kern/kernel.asm	/^f0102f97:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102f9a	obj/kern/kernel.asm	/^f0102f9a:	c7 80 28 a0 22 f0 00 	movl   $0x0,-0xfdd5fd8(%eax)$/;"	l
f0102fa1	obj/kern/kernel.asm	/^f0102fa1:	00 00 00 $/;"	l
f0102fa4	obj/kern/kernel.asm	/^f0102fa4:	e8 78 0a 00 00       	call   f0103a21 <sched_yield>$/;"	l
f0102fa9	obj/kern/kernel.asm	/^f0102fa9:	83 c4 14             	add    $0x14,%esp$/;"	l
f0102fac	obj/kern/kernel.asm	/^f0102fac:	5b                   	pop    %ebx$/;"	l
f0102fad	obj/kern/kernel.asm	/^f0102fad:	5d                   	pop    %ebp$/;"	l
f0102fae	obj/kern/kernel.asm	/^f0102fae:	c3                   	ret    $/;"	l
f0102faf	obj/kern/kernel.asm	/^f0102faf <env_pop_tf>:$/;"	l
f0102faf	obj/kern/kernel.asm	/^f0102faf:	55                   	push   %ebp$/;"	l
f0102fb0	obj/kern/kernel.asm	/^f0102fb0:	89 e5                	mov    %esp,%ebp$/;"	l
f0102fb2	obj/kern/kernel.asm	/^f0102fb2:	53                   	push   %ebx$/;"	l
f0102fb3	obj/kern/kernel.asm	/^f0102fb3:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0102fb6	obj/kern/kernel.asm	/^f0102fb6:	e8 ce 1d 00 00       	call   f0104d89 <cpunum>$/;"	l
f0102fbb	obj/kern/kernel.asm	/^f0102fbb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102fbe	obj/kern/kernel.asm	/^f0102fbe:	8b 98 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%ebx$/;"	l
f0102fc4	obj/kern/kernel.asm	/^f0102fc4:	e8 c0 1d 00 00       	call   f0104d89 <cpunum>$/;"	l
f0102fc9	obj/kern/kernel.asm	/^f0102fc9:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0102fcc	obj/kern/kernel.asm	/^f0102fcc:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0102fcf	obj/kern/kernel.asm	/^f0102fcf:	61                   	popa   $/;"	l
f0102fd0	obj/kern/kernel.asm	/^f0102fd0:	07                   	pop    %es$/;"	l
f0102fd1	obj/kern/kernel.asm	/^f0102fd1:	1f                   	pop    %ds$/;"	l
f0102fd2	obj/kern/kernel.asm	/^f0102fd2:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102fd5	obj/kern/kernel.asm	/^f0102fd5:	cf                   	iret   $/;"	l
f0102fd6	obj/kern/kernel.asm	/^f0102fd6:	c7 44 24 08 6b 63 10 	movl   $0xf010636b,0x8(%esp)$/;"	l
f0102fdd	obj/kern/kernel.asm	/^f0102fdd:	f0 $/;"	l
f0102fde	obj/kern/kernel.asm	/^f0102fde:	c7 44 24 04 0e 02 00 	movl   $0x20e,0x4(%esp)$/;"	l
f0102fe5	obj/kern/kernel.asm	/^f0102fe5:	00 $/;"	l
f0102fe6	obj/kern/kernel.asm	/^f0102fe6:	c7 04 24 26 63 10 f0 	movl   $0xf0106326,(%esp)$/;"	l
f0102fed	obj/kern/kernel.asm	/^f0102fed:	e8 4e d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2 <env_run>:$/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	55                   	push   %ebp$/;"	l
f0102ff3	obj/kern/kernel.asm	/^f0102ff3:	89 e5                	mov    %esp,%ebp$/;"	l
f0102ff5	obj/kern/kernel.asm	/^f0102ff5:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0102ff8	obj/kern/kernel.asm	/^f0102ff8:	e8 8c 1d 00 00       	call   f0104d89 <cpunum>$/;"	l
f0102ffd	obj/kern/kernel.asm	/^f0102ffd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103000	obj/kern/kernel.asm	/^f0103000:	83 b8 28 a0 22 f0 00 	cmpl   $0x0,-0xfdd5fd8(%eax)$/;"	l
f0103007	obj/kern/kernel.asm	/^f0103007:	74 2b                	je     f0103034 <env_run+0x42>$/;"	l
f0103009	obj/kern/kernel.asm	/^f0103009:	e8 7b 1d 00 00       	call   f0104d89 <cpunum>$/;"	l
f010300e	obj/kern/kernel.asm	/^f010300e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103011	obj/kern/kernel.asm	/^f0103011:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0103017	obj/kern/kernel.asm	/^f0103017:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f010301b	obj/kern/kernel.asm	/^f010301b:	75 17                	jne    f0103034 <env_run+0x42>$/;"	l
f010301d	obj/kern/kernel.asm	/^f010301d:	e8 67 1d 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103022	obj/kern/kernel.asm	/^f0103022:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103025	obj/kern/kernel.asm	/^f0103025:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f010302b	obj/kern/kernel.asm	/^f010302b:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103032	obj/kern/kernel.asm	/^f0103032:	eb 69                	jmp    f010309d <env_run+0xab>$/;"	l
f0103034	obj/kern/kernel.asm	/^f0103034:	e8 50 1d 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103039	obj/kern/kernel.asm	/^f0103039:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010303c	obj/kern/kernel.asm	/^f010303c:	83 b8 28 a0 22 f0 00 	cmpl   $0x0,-0xfdd5fd8(%eax)$/;"	l
f0103043	obj/kern/kernel.asm	/^f0103043:	74 58                	je     f010309d <env_run+0xab>$/;"	l
f0103045	obj/kern/kernel.asm	/^f0103045:	c7 45 e4 77 63 10 f0 	movl   $0xf0106377,-0x1c(%ebp)$/;"	l
f010304c	obj/kern/kernel.asm	/^f010304c:	c7 45 e8 7c 63 10 f0 	movl   $0xf010637c,-0x18(%ebp)$/;"	l
f0103053	obj/kern/kernel.asm	/^f0103053:	c7 45 ec 82 63 10 f0 	movl   $0xf0106382,-0x14(%ebp)$/;"	l
f010305a	obj/kern/kernel.asm	/^f010305a:	c7 45 f0 8f 63 10 f0 	movl   $0xf010638f,-0x10(%ebp)$/;"	l
f0103061	obj/kern/kernel.asm	/^f0103061:	c7 45 f4 8b 63 10 f0 	movl   $0xf010638b,-0xc(%ebp)$/;"	l
f0103068	obj/kern/kernel.asm	/^f0103068:	e8 1c 1d 00 00       	call   f0104d89 <cpunum>$/;"	l
f010306d	obj/kern/kernel.asm	/^f010306d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103070	obj/kern/kernel.asm	/^f0103070:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0103076	obj/kern/kernel.asm	/^f0103076:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f0103079	obj/kern/kernel.asm	/^f0103079:	8b 44 85 e4          	mov    -0x1c(%ebp,%eax,4),%eax$/;"	l
f010307d	obj/kern/kernel.asm	/^f010307d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103081	obj/kern/kernel.asm	/^f0103081:	c7 44 24 08 00 63 10 	movl   $0xf0106300,0x8(%esp)$/;"	l
f0103088	obj/kern/kernel.asm	/^f0103088:	f0 $/;"	l
f0103089	obj/kern/kernel.asm	/^f0103089:	c7 44 24 04 33 02 00 	movl   $0x233,0x4(%esp)$/;"	l
f0103090	obj/kern/kernel.asm	/^f0103090:	00 $/;"	l
f0103091	obj/kern/kernel.asm	/^f0103091:	c7 04 24 26 63 10 f0 	movl   $0xf0106326,(%esp)$/;"	l
f0103098	obj/kern/kernel.asm	/^f0103098:	e8 a3 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010309d	obj/kern/kernel.asm	/^f010309d:	e8 e7 1c 00 00       	call   f0104d89 <cpunum>$/;"	l
f01030a2	obj/kern/kernel.asm	/^f01030a2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01030a5	obj/kern/kernel.asm	/^f01030a5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01030a8	obj/kern/kernel.asm	/^f01030a8:	89 90 28 a0 22 f0    	mov    %edx,-0xfdd5fd8(%eax)$/;"	l
f01030ae	obj/kern/kernel.asm	/^f01030ae:	e8 d6 1c 00 00       	call   f0104d89 <cpunum>$/;"	l
f01030b3	obj/kern/kernel.asm	/^f01030b3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01030b6	obj/kern/kernel.asm	/^f01030b6:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f01030bc	obj/kern/kernel.asm	/^f01030bc:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f01030c3	obj/kern/kernel.asm	/^f01030c3:	e8 c1 1c 00 00       	call   f0104d89 <cpunum>$/;"	l
f01030c8	obj/kern/kernel.asm	/^f01030c8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01030cb	obj/kern/kernel.asm	/^f01030cb:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f01030d1	obj/kern/kernel.asm	/^f01030d1:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f01030d5	obj/kern/kernel.asm	/^f01030d5:	e8 af 1c 00 00       	call   f0104d89 <cpunum>$/;"	l
f01030da	obj/kern/kernel.asm	/^f01030da:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01030dd	obj/kern/kernel.asm	/^f01030dd:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f01030e3	obj/kern/kernel.asm	/^f01030e3:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01030e6	obj/kern/kernel.asm	/^f01030e6:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01030eb	obj/kern/kernel.asm	/^f01030eb:	77 20                	ja     f010310d <env_run+0x11b>$/;"	l
f01030ed	obj/kern/kernel.asm	/^f01030ed:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01030f1	obj/kern/kernel.asm	/^f01030f1:	c7 44 24 08 a8 54 10 	movl   $0xf01054a8,0x8(%esp)$/;"	l
f01030f8	obj/kern/kernel.asm	/^f01030f8:	f0 $/;"	l
f01030f9	obj/kern/kernel.asm	/^f01030f9:	c7 44 24 04 3a 02 00 	movl   $0x23a,0x4(%esp)$/;"	l
f0103100	obj/kern/kernel.asm	/^f0103100:	00 $/;"	l
f0103101	obj/kern/kernel.asm	/^f0103101:	c7 04 24 26 63 10 f0 	movl   $0xf0106326,(%esp)$/;"	l
f0103108	obj/kern/kernel.asm	/^f0103108:	e8 33 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010310d	obj/kern/kernel.asm	/^f010310d:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103112	obj/kern/kernel.asm	/^f0103112:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103115	obj/kern/kernel.asm	/^f0103115:	e8 6f 1c 00 00       	call   f0104d89 <cpunum>$/;"	l
f010311a	obj/kern/kernel.asm	/^f010311a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010311d	obj/kern/kernel.asm	/^f010311d:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0103123	obj/kern/kernel.asm	/^f0103123:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103126	obj/kern/kernel.asm	/^f0103126:	e8 84 fe ff ff       	call   f0102faf <env_pop_tf>$/;"	l
f010312b	obj/kern/kernel.asm	/^f010312b <mc146818_read>:$/;"	l
f010312b	obj/kern/kernel.asm	/^f010312b:	55                   	push   %ebp$/;"	l
f010312c	obj/kern/kernel.asm	/^f010312c:	89 e5                	mov    %esp,%ebp$/;"	l
f010312e	obj/kern/kernel.asm	/^f010312e:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0103132	obj/kern/kernel.asm	/^f0103132:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103137	obj/kern/kernel.asm	/^f0103137:	ee                   	out    %al,(%dx)$/;"	l
f0103138	obj/kern/kernel.asm	/^f0103138:	b2 71                	mov    $0x71,%dl$/;"	l
f010313a	obj/kern/kernel.asm	/^f010313a:	ec                   	in     (%dx),%al$/;"	l
f010313b	obj/kern/kernel.asm	/^f010313b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010313e	obj/kern/kernel.asm	/^f010313e:	5d                   	pop    %ebp$/;"	l
f010313f	obj/kern/kernel.asm	/^f010313f:	c3                   	ret    $/;"	l
f0103140	obj/kern/kernel.asm	/^f0103140 <mc146818_write>:$/;"	l
f0103140	obj/kern/kernel.asm	/^f0103140:	55                   	push   %ebp$/;"	l
f0103141	obj/kern/kernel.asm	/^f0103141:	89 e5                	mov    %esp,%ebp$/;"	l
f0103143	obj/kern/kernel.asm	/^f0103143:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0103147	obj/kern/kernel.asm	/^f0103147:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010314c	obj/kern/kernel.asm	/^f010314c:	ee                   	out    %al,(%dx)$/;"	l
f010314d	obj/kern/kernel.asm	/^f010314d:	b2 71                	mov    $0x71,%dl$/;"	l
f010314f	obj/kern/kernel.asm	/^f010314f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103152	obj/kern/kernel.asm	/^f0103152:	ee                   	out    %al,(%dx)$/;"	l
f0103153	obj/kern/kernel.asm	/^f0103153:	5d                   	pop    %ebp$/;"	l
f0103154	obj/kern/kernel.asm	/^f0103154:	c3                   	ret    $/;"	l
f0103155	obj/kern/kernel.asm	/^f0103155 <irq_setmask_8259A>:$/;"	l
f0103155	obj/kern/kernel.asm	/^f0103155:	55                   	push   %ebp$/;"	l
f0103156	obj/kern/kernel.asm	/^f0103156:	89 e5                	mov    %esp,%ebp$/;"	l
f0103158	obj/kern/kernel.asm	/^f0103158:	56                   	push   %esi$/;"	l
f0103159	obj/kern/kernel.asm	/^f0103159:	53                   	push   %ebx$/;"	l
f010315a	obj/kern/kernel.asm	/^f010315a:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010315d	obj/kern/kernel.asm	/^f010315d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103160	obj/kern/kernel.asm	/^f0103160:	66 a3 88 e3 11 f0    	mov    %ax,0xf011e388$/;"	l
f0103166	obj/kern/kernel.asm	/^f0103166:	80 3d 50 92 22 f0 00 	cmpb   $0x0,0xf0229250$/;"	l
f010316d	obj/kern/kernel.asm	/^f010316d:	74 4e                	je     f01031bd <irq_setmask_8259A+0x68>$/;"	l
f010316f	obj/kern/kernel.asm	/^f010316f:	89 c6                	mov    %eax,%esi$/;"	l
f0103171	obj/kern/kernel.asm	/^f0103171:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103176	obj/kern/kernel.asm	/^f0103176:	ee                   	out    %al,(%dx)$/;"	l
f0103177	obj/kern/kernel.asm	/^f0103177:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f010317b	obj/kern/kernel.asm	/^f010317b:	b2 a1                	mov    $0xa1,%dl$/;"	l
f010317d	obj/kern/kernel.asm	/^f010317d:	ee                   	out    %al,(%dx)$/;"	l
f010317e	obj/kern/kernel.asm	/^f010317e:	c7 04 24 97 63 10 f0 	movl   $0xf0106397,(%esp)$/;"	l
f0103185	obj/kern/kernel.asm	/^f0103185:	e8 0a 01 00 00       	call   f0103294 <cprintf>$/;"	l
f010318a	obj/kern/kernel.asm	/^f010318a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010318f	obj/kern/kernel.asm	/^f010318f:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103192	obj/kern/kernel.asm	/^f0103192:	f7 d6                	not    %esi$/;"	l
f0103194	obj/kern/kernel.asm	/^f0103194:	0f a3 de             	bt     %ebx,%esi$/;"	l
f0103197	obj/kern/kernel.asm	/^f0103197:	73 10                	jae    f01031a9 <irq_setmask_8259A+0x54>$/;"	l
f0103199	obj/kern/kernel.asm	/^f0103199:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010319d	obj/kern/kernel.asm	/^f010319d:	c7 04 24 b1 68 10 f0 	movl   $0xf01068b1,(%esp)$/;"	l
f01031a4	obj/kern/kernel.asm	/^f01031a4:	e8 eb 00 00 00       	call   f0103294 <cprintf>$/;"	l
f01031a9	obj/kern/kernel.asm	/^f01031a9:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01031ac	obj/kern/kernel.asm	/^f01031ac:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f01031af	obj/kern/kernel.asm	/^f01031af:	75 e3                	jne    f0103194 <irq_setmask_8259A+0x3f>$/;"	l
f01031b1	obj/kern/kernel.asm	/^f01031b1:	c7 04 24 2d 55 10 f0 	movl   $0xf010552d,(%esp)$/;"	l
f01031b8	obj/kern/kernel.asm	/^f01031b8:	e8 d7 00 00 00       	call   f0103294 <cprintf>$/;"	l
f01031bd	obj/kern/kernel.asm	/^f01031bd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01031c0	obj/kern/kernel.asm	/^f01031c0:	5b                   	pop    %ebx$/;"	l
f01031c1	obj/kern/kernel.asm	/^f01031c1:	5e                   	pop    %esi$/;"	l
f01031c2	obj/kern/kernel.asm	/^f01031c2:	5d                   	pop    %ebp$/;"	l
f01031c3	obj/kern/kernel.asm	/^f01031c3:	c3                   	ret    $/;"	l
f01031c4	obj/kern/kernel.asm	/^f01031c4 <pic_init>:$/;"	l
f01031c4	obj/kern/kernel.asm	/^f01031c4:	c6 05 50 92 22 f0 01 	movb   $0x1,0xf0229250$/;"	l
f01031cb	obj/kern/kernel.asm	/^f01031cb:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f01031d0	obj/kern/kernel.asm	/^f01031d0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01031d5	obj/kern/kernel.asm	/^f01031d5:	ee                   	out    %al,(%dx)$/;"	l
f01031d6	obj/kern/kernel.asm	/^f01031d6:	b2 a1                	mov    $0xa1,%dl$/;"	l
f01031d8	obj/kern/kernel.asm	/^f01031d8:	ee                   	out    %al,(%dx)$/;"	l
f01031d9	obj/kern/kernel.asm	/^f01031d9:	b2 20                	mov    $0x20,%dl$/;"	l
f01031db	obj/kern/kernel.asm	/^f01031db:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f01031e0	obj/kern/kernel.asm	/^f01031e0:	ee                   	out    %al,(%dx)$/;"	l
f01031e1	obj/kern/kernel.asm	/^f01031e1:	b2 21                	mov    $0x21,%dl$/;"	l
f01031e3	obj/kern/kernel.asm	/^f01031e3:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01031e8	obj/kern/kernel.asm	/^f01031e8:	ee                   	out    %al,(%dx)$/;"	l
f01031e9	obj/kern/kernel.asm	/^f01031e9:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f01031ee	obj/kern/kernel.asm	/^f01031ee:	ee                   	out    %al,(%dx)$/;"	l
f01031ef	obj/kern/kernel.asm	/^f01031ef:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01031f4	obj/kern/kernel.asm	/^f01031f4:	ee                   	out    %al,(%dx)$/;"	l
f01031f5	obj/kern/kernel.asm	/^f01031f5:	b2 a0                	mov    $0xa0,%dl$/;"	l
f01031f7	obj/kern/kernel.asm	/^f01031f7:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f01031fc	obj/kern/kernel.asm	/^f01031fc:	ee                   	out    %al,(%dx)$/;"	l
f01031fd	obj/kern/kernel.asm	/^f01031fd:	b2 a1                	mov    $0xa1,%dl$/;"	l
f01031ff	obj/kern/kernel.asm	/^f01031ff:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103204	obj/kern/kernel.asm	/^f0103204:	ee                   	out    %al,(%dx)$/;"	l
f0103205	obj/kern/kernel.asm	/^f0103205:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f010320a	obj/kern/kernel.asm	/^f010320a:	ee                   	out    %al,(%dx)$/;"	l
f010320b	obj/kern/kernel.asm	/^f010320b:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103210	obj/kern/kernel.asm	/^f0103210:	ee                   	out    %al,(%dx)$/;"	l
f0103211	obj/kern/kernel.asm	/^f0103211:	b2 20                	mov    $0x20,%dl$/;"	l
f0103213	obj/kern/kernel.asm	/^f0103213:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103218	obj/kern/kernel.asm	/^f0103218:	ee                   	out    %al,(%dx)$/;"	l
f0103219	obj/kern/kernel.asm	/^f0103219:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010321e	obj/kern/kernel.asm	/^f010321e:	ee                   	out    %al,(%dx)$/;"	l
f010321f	obj/kern/kernel.asm	/^f010321f:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103221	obj/kern/kernel.asm	/^f0103221:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103226	obj/kern/kernel.asm	/^f0103226:	ee                   	out    %al,(%dx)$/;"	l
f0103227	obj/kern/kernel.asm	/^f0103227:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010322c	obj/kern/kernel.asm	/^f010322c:	ee                   	out    %al,(%dx)$/;"	l
f010322d	obj/kern/kernel.asm	/^f010322d:	0f b7 05 88 e3 11 f0 	movzwl 0xf011e388,%eax$/;"	l
f0103234	obj/kern/kernel.asm	/^f0103234:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0103238	obj/kern/kernel.asm	/^f0103238:	74 12                	je     f010324c <pic_init+0x88>$/;"	l
f010323a	obj/kern/kernel.asm	/^f010323a:	55                   	push   %ebp$/;"	l
f010323b	obj/kern/kernel.asm	/^f010323b:	89 e5                	mov    %esp,%ebp$/;"	l
f010323d	obj/kern/kernel.asm	/^f010323d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103240	obj/kern/kernel.asm	/^f0103240:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103243	obj/kern/kernel.asm	/^f0103243:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103246	obj/kern/kernel.asm	/^f0103246:	e8 0a ff ff ff       	call   f0103155 <irq_setmask_8259A>$/;"	l
f010324b	obj/kern/kernel.asm	/^f010324b:	c9                   	leave  $/;"	l
f010324c	obj/kern/kernel.asm	/^f010324c:	f3 c3                	repz ret $/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e <putch>:$/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	55                   	push   %ebp$/;"	l
f010324f	obj/kern/kernel.asm	/^f010324f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103251	obj/kern/kernel.asm	/^f0103251:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103254	obj/kern/kernel.asm	/^f0103254:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103257	obj/kern/kernel.asm	/^f0103257:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010325a	obj/kern/kernel.asm	/^f010325a:	e8 0b d5 ff ff       	call   f010076a <cputchar>$/;"	l
f010325f	obj/kern/kernel.asm	/^f010325f:	c9                   	leave  $/;"	l
f0103260	obj/kern/kernel.asm	/^f0103260:	c3                   	ret    $/;"	l
f0103261	obj/kern/kernel.asm	/^f0103261 <vcprintf>:$/;"	l
f0103261	obj/kern/kernel.asm	/^f0103261:	55                   	push   %ebp$/;"	l
f0103262	obj/kern/kernel.asm	/^f0103262:	89 e5                	mov    %esp,%ebp$/;"	l
f0103264	obj/kern/kernel.asm	/^f0103264:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0103267	obj/kern/kernel.asm	/^f0103267:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010326e	obj/kern/kernel.asm	/^f010326e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103271	obj/kern/kernel.asm	/^f0103271:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103275	obj/kern/kernel.asm	/^f0103275:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103278	obj/kern/kernel.asm	/^f0103278:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010327c	obj/kern/kernel.asm	/^f010327c:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f010327f	obj/kern/kernel.asm	/^f010327f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103283	obj/kern/kernel.asm	/^f0103283:	c7 04 24 4e 32 10 f0 	movl   $0xf010324e,(%esp)$/;"	l
f010328a	obj/kern/kernel.asm	/^f010328a:	e8 df 0d 00 00       	call   f010406e <vprintfmt>$/;"	l
f010328f	obj/kern/kernel.asm	/^f010328f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103292	obj/kern/kernel.asm	/^f0103292:	c9                   	leave  $/;"	l
f0103293	obj/kern/kernel.asm	/^f0103293:	c3                   	ret    $/;"	l
f0103294	obj/kern/kernel.asm	/^f0103294 <cprintf>:$/;"	l
f0103294	obj/kern/kernel.asm	/^f0103294:	55                   	push   %ebp$/;"	l
f0103295	obj/kern/kernel.asm	/^f0103295:	89 e5                	mov    %esp,%ebp$/;"	l
f0103297	obj/kern/kernel.asm	/^f0103297:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010329a	obj/kern/kernel.asm	/^f010329a:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f010329d	obj/kern/kernel.asm	/^f010329d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01032a1	obj/kern/kernel.asm	/^f01032a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01032a4	obj/kern/kernel.asm	/^f01032a4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01032a7	obj/kern/kernel.asm	/^f01032a7:	e8 b5 ff ff ff       	call   f0103261 <vcprintf>$/;"	l
f01032ac	obj/kern/kernel.asm	/^f01032ac:	c9                   	leave  $/;"	l
f01032ad	obj/kern/kernel.asm	/^f01032ad:	c3                   	ret    $/;"	l
f01032ae	obj/kern/kernel.asm	/^f01032ae <trap_init_percpu>:$/;"	l
f01032ae	obj/kern/kernel.asm	/^f01032ae:	55                   	push   %ebp$/;"	l
f01032af	obj/kern/kernel.asm	/^f01032af:	89 e5                	mov    %esp,%ebp$/;"	l
f01032b1	obj/kern/kernel.asm	/^f01032b1:	c7 05 84 9a 22 f0 00 	movl   $0xf0000000,0xf0229a84$/;"	l
f01032b8	obj/kern/kernel.asm	/^f01032b8:	00 00 f0 $/;"	l
f01032bb	obj/kern/kernel.asm	/^f01032bb:	66 c7 05 88 9a 22 f0 	movw   $0x10,0xf0229a88$/;"	l
f01032c2	obj/kern/kernel.asm	/^f01032c2:	10 00 $/;"	l
f01032c4	obj/kern/kernel.asm	/^f01032c4:	66 c7 05 48 e3 11 f0 	movw   $0x67,0xf011e348$/;"	l
f01032cb	obj/kern/kernel.asm	/^f01032cb:	67 00 $/;"	l
f01032cd	obj/kern/kernel.asm	/^f01032cd:	b8 80 9a 22 f0       	mov    $0xf0229a80,%eax$/;"	l
f01032d2	obj/kern/kernel.asm	/^f01032d2:	66 a3 4a e3 11 f0    	mov    %ax,0xf011e34a$/;"	l
f01032d8	obj/kern/kernel.asm	/^f01032d8:	89 c2                	mov    %eax,%edx$/;"	l
f01032da	obj/kern/kernel.asm	/^f01032da:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01032dd	obj/kern/kernel.asm	/^f01032dd:	88 15 4c e3 11 f0    	mov    %dl,0xf011e34c$/;"	l
f01032e3	obj/kern/kernel.asm	/^f01032e3:	c6 05 4e e3 11 f0 40 	movb   $0x40,0xf011e34e$/;"	l
f01032ea	obj/kern/kernel.asm	/^f01032ea:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f01032ed	obj/kern/kernel.asm	/^f01032ed:	a2 4f e3 11 f0       	mov    %al,0xf011e34f$/;"	l
f01032f2	obj/kern/kernel.asm	/^f01032f2:	c6 05 4d e3 11 f0 89 	movb   $0x89,0xf011e34d$/;"	l
f01032f9	obj/kern/kernel.asm	/^f01032f9:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f01032fe	obj/kern/kernel.asm	/^f01032fe:	0f 00 d8             	ltr    %ax$/;"	l
f0103301	obj/kern/kernel.asm	/^f0103301:	b8 8a e3 11 f0       	mov    $0xf011e38a,%eax$/;"	l
f0103306	obj/kern/kernel.asm	/^f0103306:	0f 01 18             	lidtl  (%eax)$/;"	l
f0103309	obj/kern/kernel.asm	/^f0103309:	5d                   	pop    %ebp$/;"	l
f010330a	obj/kern/kernel.asm	/^f010330a:	c3                   	ret    $/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b <trap_init>:$/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b:	55                   	push   %ebp$/;"	l
f010330c	obj/kern/kernel.asm	/^f010330c:	89 e5                	mov    %esp,%ebp$/;"	l
f010330e	obj/kern/kernel.asm	/^f010330e:	57                   	push   %edi$/;"	l
f010330f	obj/kern/kernel.asm	/^f010330f:	56                   	push   %esi$/;"	l
f0103310	obj/kern/kernel.asm	/^f0103310:	53                   	push   %ebx$/;"	l
f0103311	obj/kern/kernel.asm	/^f0103311:	83 ec 60             	sub    $0x60,%esp$/;"	l
f0103314	obj/kern/kernel.asm	/^f0103314:	8d 7d 9c             	lea    -0x64(%ebp),%edi$/;"	l
f0103317	obj/kern/kernel.asm	/^f0103317:	be c0 63 10 f0       	mov    $0xf01063c0,%esi$/;"	l
f010331c	obj/kern/kernel.asm	/^f010331c:	b9 16 00 00 00       	mov    $0x16,%ecx$/;"	l
f0103321	obj/kern/kernel.asm	/^f0103321:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0103323	obj/kern/kernel.asm	/^f0103323:	8b 4d a8             	mov    -0x58(%ebp),%ecx$/;"	l
f0103326	obj/kern/kernel.asm	/^f0103326:	89 cb                	mov    %ecx,%ebx$/;"	l
f0103328	obj/kern/kernel.asm	/^f0103328:	c1 e9 10             	shr    $0x10,%ecx$/;"	l
f010332b	obj/kern/kernel.asm	/^f010332b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103330	obj/kern/kernel.asm	/^f0103330:	eb 60                	jmp    f0103392 <trap_init+0x87>$/;"	l
f0103332	obj/kern/kernel.asm	/^f0103332:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0103335	obj/kern/kernel.asm	/^f0103335:	75 27                	jne    f010335e <trap_init+0x53>$/;"	l
f0103337	obj/kern/kernel.asm	/^f0103337:	66 89 1d 78 92 22 f0 	mov    %bx,0xf0229278$/;"	l
f010333e	obj/kern/kernel.asm	/^f010333e:	66 c7 05 7a 92 22 f0 	movw   $0x8,0xf022927a$/;"	l
f0103345	obj/kern/kernel.asm	/^f0103345:	08 00 $/;"	l
f0103347	obj/kern/kernel.asm	/^f0103347:	c6 05 7c 92 22 f0 00 	movb   $0x0,0xf022927c$/;"	l
f010334e	obj/kern/kernel.asm	/^f010334e:	c6 05 7d 92 22 f0 ee 	movb   $0xee,0xf022927d$/;"	l
f0103355	obj/kern/kernel.asm	/^f0103355:	66 89 0d 7e 92 22 f0 	mov    %cx,0xf022927e$/;"	l
f010335c	obj/kern/kernel.asm	/^f010335c:	eb 31                	jmp    f010338f <trap_init+0x84>$/;"	l
f010335e	obj/kern/kernel.asm	/^f010335e:	8b 54 85 9c          	mov    -0x64(%ebp,%eax,4),%edx$/;"	l
f0103362	obj/kern/kernel.asm	/^f0103362:	66 89 14 c5 60 92 22 	mov    %dx,-0xfdd6da0(,%eax,8)$/;"	l
f0103369	obj/kern/kernel.asm	/^f0103369:	f0 $/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	66 c7 04 c5 62 92 22 	movw   $0x8,-0xfdd6d9e(,%eax,8)$/;"	l
f0103371	obj/kern/kernel.asm	/^f0103371:	f0 08 00 $/;"	l
f0103374	obj/kern/kernel.asm	/^f0103374:	c6 04 c5 64 92 22 f0 	movb   $0x0,-0xfdd6d9c(,%eax,8)$/;"	l
f010337b	obj/kern/kernel.asm	/^f010337b:	00 $/;"	l
f010337c	obj/kern/kernel.asm	/^f010337c:	c6 04 c5 65 92 22 f0 	movb   $0x8e,-0xfdd6d9b(,%eax,8)$/;"	l
f0103383	obj/kern/kernel.asm	/^f0103383:	8e $/;"	l
f0103384	obj/kern/kernel.asm	/^f0103384:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103387	obj/kern/kernel.asm	/^f0103387:	66 89 14 c5 66 92 22 	mov    %dx,-0xfdd6d9a(,%eax,8)$/;"	l
f010338e	obj/kern/kernel.asm	/^f010338e:	f0 $/;"	l
f010338f	obj/kern/kernel.asm	/^f010338f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0103392	obj/kern/kernel.asm	/^f0103392:	83 f8 14             	cmp    $0x14,%eax$/;"	l
f0103395	obj/kern/kernel.asm	/^f0103395:	75 9b                	jne    f0103332 <trap_init+0x27>$/;"	l
f0103397	obj/kern/kernel.asm	/^f0103397:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010339a	obj/kern/kernel.asm	/^f010339a:	66 a3 e0 93 22 f0    	mov    %ax,0xf02293e0$/;"	l
f01033a0	obj/kern/kernel.asm	/^f01033a0:	66 c7 05 e2 93 22 f0 	movw   $0x8,0xf02293e2$/;"	l
f01033a7	obj/kern/kernel.asm	/^f01033a7:	08 00 $/;"	l
f01033a9	obj/kern/kernel.asm	/^f01033a9:	c6 05 e4 93 22 f0 00 	movb   $0x0,0xf02293e4$/;"	l
f01033b0	obj/kern/kernel.asm	/^f01033b0:	c6 05 e5 93 22 f0 ef 	movb   $0xef,0xf02293e5$/;"	l
f01033b7	obj/kern/kernel.asm	/^f01033b7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01033ba	obj/kern/kernel.asm	/^f01033ba:	66 a3 e6 93 22 f0    	mov    %ax,0xf02293e6$/;"	l
f01033c0	obj/kern/kernel.asm	/^f01033c0:	e8 e9 fe ff ff       	call   f01032ae <trap_init_percpu>$/;"	l
f01033c5	obj/kern/kernel.asm	/^f01033c5:	83 c4 60             	add    $0x60,%esp$/;"	l
f01033c8	obj/kern/kernel.asm	/^f01033c8:	5b                   	pop    %ebx$/;"	l
f01033c9	obj/kern/kernel.asm	/^f01033c9:	5e                   	pop    %esi$/;"	l
f01033ca	obj/kern/kernel.asm	/^f01033ca:	5f                   	pop    %edi$/;"	l
f01033cb	obj/kern/kernel.asm	/^f01033cb:	5d                   	pop    %ebp$/;"	l
f01033cc	obj/kern/kernel.asm	/^f01033cc:	c3                   	ret    $/;"	l
f01033cd	obj/kern/kernel.asm	/^f01033cd <print_regs>:$/;"	l
f01033cd	obj/kern/kernel.asm	/^f01033cd:	55                   	push   %ebp$/;"	l
f01033ce	obj/kern/kernel.asm	/^f01033ce:	89 e5                	mov    %esp,%ebp$/;"	l
f01033d0	obj/kern/kernel.asm	/^f01033d0:	53                   	push   %ebx$/;"	l
f01033d1	obj/kern/kernel.asm	/^f01033d1:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01033d4	obj/kern/kernel.asm	/^f01033d4:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01033d7	obj/kern/kernel.asm	/^f01033d7:	8b 03                	mov    (%ebx),%eax$/;"	l
f01033d9	obj/kern/kernel.asm	/^f01033d9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01033dd	obj/kern/kernel.asm	/^f01033dd:	c7 04 24 70 64 10 f0 	movl   $0xf0106470,(%esp)$/;"	l
f01033e4	obj/kern/kernel.asm	/^f01033e4:	e8 ab fe ff ff       	call   f0103294 <cprintf>$/;"	l
f01033e9	obj/kern/kernel.asm	/^f01033e9:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01033ec	obj/kern/kernel.asm	/^f01033ec:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01033f0	obj/kern/kernel.asm	/^f01033f0:	c7 04 24 7f 64 10 f0 	movl   $0xf010647f,(%esp)$/;"	l
f01033f7	obj/kern/kernel.asm	/^f01033f7:	e8 98 fe ff ff       	call   f0103294 <cprintf>$/;"	l
f01033fc	obj/kern/kernel.asm	/^f01033fc:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01033ff	obj/kern/kernel.asm	/^f01033ff:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103403	obj/kern/kernel.asm	/^f0103403:	c7 04 24 8e 64 10 f0 	movl   $0xf010648e,(%esp)$/;"	l
f010340a	obj/kern/kernel.asm	/^f010340a:	e8 85 fe ff ff       	call   f0103294 <cprintf>$/;"	l
f010340f	obj/kern/kernel.asm	/^f010340f:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0103412	obj/kern/kernel.asm	/^f0103412:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103416	obj/kern/kernel.asm	/^f0103416:	c7 04 24 9d 64 10 f0 	movl   $0xf010649d,(%esp)$/;"	l
f010341d	obj/kern/kernel.asm	/^f010341d:	e8 72 fe ff ff       	call   f0103294 <cprintf>$/;"	l
f0103422	obj/kern/kernel.asm	/^f0103422:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103425	obj/kern/kernel.asm	/^f0103425:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103429	obj/kern/kernel.asm	/^f0103429:	c7 04 24 ac 64 10 f0 	movl   $0xf01064ac,(%esp)$/;"	l
f0103430	obj/kern/kernel.asm	/^f0103430:	e8 5f fe ff ff       	call   f0103294 <cprintf>$/;"	l
f0103435	obj/kern/kernel.asm	/^f0103435:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0103438	obj/kern/kernel.asm	/^f0103438:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010343c	obj/kern/kernel.asm	/^f010343c:	c7 04 24 bb 64 10 f0 	movl   $0xf01064bb,(%esp)$/;"	l
f0103443	obj/kern/kernel.asm	/^f0103443:	e8 4c fe ff ff       	call   f0103294 <cprintf>$/;"	l
f0103448	obj/kern/kernel.asm	/^f0103448:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f010344b	obj/kern/kernel.asm	/^f010344b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010344f	obj/kern/kernel.asm	/^f010344f:	c7 04 24 ca 64 10 f0 	movl   $0xf01064ca,(%esp)$/;"	l
f0103456	obj/kern/kernel.asm	/^f0103456:	e8 39 fe ff ff       	call   f0103294 <cprintf>$/;"	l
f010345b	obj/kern/kernel.asm	/^f010345b:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f010345e	obj/kern/kernel.asm	/^f010345e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103462	obj/kern/kernel.asm	/^f0103462:	c7 04 24 d9 64 10 f0 	movl   $0xf01064d9,(%esp)$/;"	l
f0103469	obj/kern/kernel.asm	/^f0103469:	e8 26 fe ff ff       	call   f0103294 <cprintf>$/;"	l
f010346e	obj/kern/kernel.asm	/^f010346e:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103471	obj/kern/kernel.asm	/^f0103471:	5b                   	pop    %ebx$/;"	l
f0103472	obj/kern/kernel.asm	/^f0103472:	5d                   	pop    %ebp$/;"	l
f0103473	obj/kern/kernel.asm	/^f0103473:	c3                   	ret    $/;"	l
f0103474	obj/kern/kernel.asm	/^f0103474 <print_trapframe>:$/;"	l
f0103474	obj/kern/kernel.asm	/^f0103474:	55                   	push   %ebp$/;"	l
f0103475	obj/kern/kernel.asm	/^f0103475:	89 e5                	mov    %esp,%ebp$/;"	l
f0103477	obj/kern/kernel.asm	/^f0103477:	56                   	push   %esi$/;"	l
f0103478	obj/kern/kernel.asm	/^f0103478:	53                   	push   %ebx$/;"	l
f0103479	obj/kern/kernel.asm	/^f0103479:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010347c	obj/kern/kernel.asm	/^f010347c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010347f	obj/kern/kernel.asm	/^f010347f:	e8 05 19 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103484	obj/kern/kernel.asm	/^f0103484:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103488	obj/kern/kernel.asm	/^f0103488:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010348c	obj/kern/kernel.asm	/^f010348c:	c7 04 24 3d 65 10 f0 	movl   $0xf010653d,(%esp)$/;"	l
f0103493	obj/kern/kernel.asm	/^f0103493:	e8 fc fd ff ff       	call   f0103294 <cprintf>$/;"	l
f0103498	obj/kern/kernel.asm	/^f0103498:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010349b	obj/kern/kernel.asm	/^f010349b:	e8 2d ff ff ff       	call   f01033cd <print_regs>$/;"	l
f01034a0	obj/kern/kernel.asm	/^f01034a0:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f01034a4	obj/kern/kernel.asm	/^f01034a4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01034a8	obj/kern/kernel.asm	/^f01034a8:	c7 04 24 5b 65 10 f0 	movl   $0xf010655b,(%esp)$/;"	l
f01034af	obj/kern/kernel.asm	/^f01034af:	e8 e0 fd ff ff       	call   f0103294 <cprintf>$/;"	l
f01034b4	obj/kern/kernel.asm	/^f01034b4:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f01034b8	obj/kern/kernel.asm	/^f01034b8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01034bc	obj/kern/kernel.asm	/^f01034bc:	c7 04 24 6e 65 10 f0 	movl   $0xf010656e,(%esp)$/;"	l
f01034c3	obj/kern/kernel.asm	/^f01034c3:	e8 cc fd ff ff       	call   f0103294 <cprintf>$/;"	l
f01034c8	obj/kern/kernel.asm	/^f01034c8:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f01034cb	obj/kern/kernel.asm	/^f01034cb:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f01034ce	obj/kern/kernel.asm	/^f01034ce:	77 09                	ja     f01034d9 <print_trapframe+0x65>$/;"	l
f01034d0	obj/kern/kernel.asm	/^f01034d0:	8b 14 85 20 64 10 f0 	mov    -0xfef9be0(,%eax,4),%edx$/;"	l
f01034d7	obj/kern/kernel.asm	/^f01034d7:	eb 1f                	jmp    f01034f8 <print_trapframe+0x84>$/;"	l
f01034d9	obj/kern/kernel.asm	/^f01034d9:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f01034dc	obj/kern/kernel.asm	/^f01034dc:	74 15                	je     f01034f3 <print_trapframe+0x7f>$/;"	l
f01034de	obj/kern/kernel.asm	/^f01034de:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f01034e1	obj/kern/kernel.asm	/^f01034e1:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f01034e4	obj/kern/kernel.asm	/^f01034e4:	ba f4 64 10 f0       	mov    $0xf01064f4,%edx$/;"	l
f01034e9	obj/kern/kernel.asm	/^f01034e9:	b9 07 65 10 f0       	mov    $0xf0106507,%ecx$/;"	l
f01034ee	obj/kern/kernel.asm	/^f01034ee:	0f 47 d1             	cmova  %ecx,%edx$/;"	l
f01034f1	obj/kern/kernel.asm	/^f01034f1:	eb 05                	jmp    f01034f8 <print_trapframe+0x84>$/;"	l
f01034f3	obj/kern/kernel.asm	/^f01034f3:	ba e8 64 10 f0       	mov    $0xf01064e8,%edx$/;"	l
f01034f8	obj/kern/kernel.asm	/^f01034f8:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01034fc	obj/kern/kernel.asm	/^f01034fc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103500	obj/kern/kernel.asm	/^f0103500:	c7 04 24 81 65 10 f0 	movl   $0xf0106581,(%esp)$/;"	l
f0103507	obj/kern/kernel.asm	/^f0103507:	e8 88 fd ff ff       	call   f0103294 <cprintf>$/;"	l
f010350c	obj/kern/kernel.asm	/^f010350c:	3b 1d 60 9a 22 f0    	cmp    0xf0229a60,%ebx$/;"	l
f0103512	obj/kern/kernel.asm	/^f0103512:	75 19                	jne    f010352d <print_trapframe+0xb9>$/;"	l
f0103514	obj/kern/kernel.asm	/^f0103514:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0103518	obj/kern/kernel.asm	/^f0103518:	75 13                	jne    f010352d <print_trapframe+0xb9>$/;"	l
f010351a	obj/kern/kernel.asm	/^f010351a:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f010351d	obj/kern/kernel.asm	/^f010351d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103521	obj/kern/kernel.asm	/^f0103521:	c7 04 24 93 65 10 f0 	movl   $0xf0106593,(%esp)$/;"	l
f0103528	obj/kern/kernel.asm	/^f0103528:	e8 67 fd ff ff       	call   f0103294 <cprintf>$/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0103530	obj/kern/kernel.asm	/^f0103530:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103534	obj/kern/kernel.asm	/^f0103534:	c7 04 24 a2 65 10 f0 	movl   $0xf01065a2,(%esp)$/;"	l
f010353b	obj/kern/kernel.asm	/^f010353b:	e8 54 fd ff ff       	call   f0103294 <cprintf>$/;"	l
f0103540	obj/kern/kernel.asm	/^f0103540:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	75 51                	jne    f0103597 <print_trapframe+0x123>$/;"	l
f0103546	obj/kern/kernel.asm	/^f0103546:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0103549	obj/kern/kernel.asm	/^f0103549:	89 c2                	mov    %eax,%edx$/;"	l
f010354b	obj/kern/kernel.asm	/^f010354b:	83 e2 01             	and    $0x1,%edx$/;"	l
f010354e	obj/kern/kernel.asm	/^f010354e:	ba 16 65 10 f0       	mov    $0xf0106516,%edx$/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	b9 21 65 10 f0       	mov    $0xf0106521,%ecx$/;"	l
f0103558	obj/kern/kernel.asm	/^f0103558:	0f 45 ca             	cmovne %edx,%ecx$/;"	l
f010355b	obj/kern/kernel.asm	/^f010355b:	89 c2                	mov    %eax,%edx$/;"	l
f010355d	obj/kern/kernel.asm	/^f010355d:	83 e2 02             	and    $0x2,%edx$/;"	l
f0103560	obj/kern/kernel.asm	/^f0103560:	ba 2d 65 10 f0       	mov    $0xf010652d,%edx$/;"	l
f0103565	obj/kern/kernel.asm	/^f0103565:	be 33 65 10 f0       	mov    $0xf0106533,%esi$/;"	l
f010356a	obj/kern/kernel.asm	/^f010356a:	0f 44 d6             	cmove  %esi,%edx$/;"	l
f010356d	obj/kern/kernel.asm	/^f010356d:	83 e0 04             	and    $0x4,%eax$/;"	l
f0103570	obj/kern/kernel.asm	/^f0103570:	b8 38 65 10 f0       	mov    $0xf0106538,%eax$/;"	l
f0103575	obj/kern/kernel.asm	/^f0103575:	be 86 66 10 f0       	mov    $0xf0106686,%esi$/;"	l
f010357a	obj/kern/kernel.asm	/^f010357a:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f010357d	obj/kern/kernel.asm	/^f010357d:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0103581	obj/kern/kernel.asm	/^f0103581:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0103585	obj/kern/kernel.asm	/^f0103585:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103589	obj/kern/kernel.asm	/^f0103589:	c7 04 24 b0 65 10 f0 	movl   $0xf01065b0,(%esp)$/;"	l
f0103590	obj/kern/kernel.asm	/^f0103590:	e8 ff fc ff ff       	call   f0103294 <cprintf>$/;"	l
f0103595	obj/kern/kernel.asm	/^f0103595:	eb 0c                	jmp    f01035a3 <print_trapframe+0x12f>$/;"	l
f0103597	obj/kern/kernel.asm	/^f0103597:	c7 04 24 2d 55 10 f0 	movl   $0xf010552d,(%esp)$/;"	l
f010359e	obj/kern/kernel.asm	/^f010359e:	e8 f1 fc ff ff       	call   f0103294 <cprintf>$/;"	l
f01035a3	obj/kern/kernel.asm	/^f01035a3:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f01035a6	obj/kern/kernel.asm	/^f01035a6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01035aa	obj/kern/kernel.asm	/^f01035aa:	c7 04 24 bf 65 10 f0 	movl   $0xf01065bf,(%esp)$/;"	l
f01035b1	obj/kern/kernel.asm	/^f01035b1:	e8 de fc ff ff       	call   f0103294 <cprintf>$/;"	l
f01035b6	obj/kern/kernel.asm	/^f01035b6:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f01035ba	obj/kern/kernel.asm	/^f01035ba:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01035be	obj/kern/kernel.asm	/^f01035be:	c7 04 24 ce 65 10 f0 	movl   $0xf01065ce,(%esp)$/;"	l
f01035c5	obj/kern/kernel.asm	/^f01035c5:	e8 ca fc ff ff       	call   f0103294 <cprintf>$/;"	l
f01035ca	obj/kern/kernel.asm	/^f01035ca:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f01035cd	obj/kern/kernel.asm	/^f01035cd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01035d1	obj/kern/kernel.asm	/^f01035d1:	c7 04 24 e1 65 10 f0 	movl   $0xf01065e1,(%esp)$/;"	l
f01035d8	obj/kern/kernel.asm	/^f01035d8:	e8 b7 fc ff ff       	call   f0103294 <cprintf>$/;"	l
f01035dd	obj/kern/kernel.asm	/^f01035dd:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f01035e1	obj/kern/kernel.asm	/^f01035e1:	74 27                	je     f010360a <print_trapframe+0x196>$/;"	l
f01035e3	obj/kern/kernel.asm	/^f01035e3:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f01035e6	obj/kern/kernel.asm	/^f01035e6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01035ea	obj/kern/kernel.asm	/^f01035ea:	c7 04 24 f0 65 10 f0 	movl   $0xf01065f0,(%esp)$/;"	l
f01035f1	obj/kern/kernel.asm	/^f01035f1:	e8 9e fc ff ff       	call   f0103294 <cprintf>$/;"	l
f01035f6	obj/kern/kernel.asm	/^f01035f6:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f01035fa	obj/kern/kernel.asm	/^f01035fa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01035fe	obj/kern/kernel.asm	/^f01035fe:	c7 04 24 ff 65 10 f0 	movl   $0xf01065ff,(%esp)$/;"	l
f0103605	obj/kern/kernel.asm	/^f0103605:	e8 8a fc ff ff       	call   f0103294 <cprintf>$/;"	l
f010360a	obj/kern/kernel.asm	/^f010360a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010360d	obj/kern/kernel.asm	/^f010360d:	5b                   	pop    %ebx$/;"	l
f010360e	obj/kern/kernel.asm	/^f010360e:	5e                   	pop    %esi$/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	5d                   	pop    %ebp$/;"	l
f0103610	obj/kern/kernel.asm	/^f0103610:	c3                   	ret    $/;"	l
f0103611	obj/kern/kernel.asm	/^f0103611 <page_fault_handler>:$/;"	l
f0103611	obj/kern/kernel.asm	/^f0103611:	55                   	push   %ebp$/;"	l
f0103612	obj/kern/kernel.asm	/^f0103612:	89 e5                	mov    %esp,%ebp$/;"	l
f0103614	obj/kern/kernel.asm	/^f0103614:	57                   	push   %edi$/;"	l
f0103615	obj/kern/kernel.asm	/^f0103615:	56                   	push   %esi$/;"	l
f0103616	obj/kern/kernel.asm	/^f0103616:	53                   	push   %ebx$/;"	l
f0103617	obj/kern/kernel.asm	/^f0103617:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010361a	obj/kern/kernel.asm	/^f010361a:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010361d	obj/kern/kernel.asm	/^f010361d:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f0103620	obj/kern/kernel.asm	/^f0103620:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0103624	obj/kern/kernel.asm	/^f0103624:	75 1c                	jne    f0103642 <page_fault_handler+0x31>$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	c7 44 24 08 12 66 10 	movl   $0xf0106612,0x8(%esp)$/;"	l
f010362d	obj/kern/kernel.asm	/^f010362d:	f0 $/;"	l
f010362e	obj/kern/kernel.asm	/^f010362e:	c7 44 24 04 6a 01 00 	movl   $0x16a,0x4(%esp)$/;"	l
f0103635	obj/kern/kernel.asm	/^f0103635:	00 $/;"	l
f0103636	obj/kern/kernel.asm	/^f0103636:	c7 04 24 2b 66 10 f0 	movl   $0xf010662b,(%esp)$/;"	l
f010363d	obj/kern/kernel.asm	/^f010363d:	e8 fe c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103642	obj/kern/kernel.asm	/^f0103642:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f0103645	obj/kern/kernel.asm	/^f0103645:	e8 3f 17 00 00       	call   f0104d89 <cpunum>$/;"	l
f010364a	obj/kern/kernel.asm	/^f010364a:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010364e	obj/kern/kernel.asm	/^f010364e:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0103652	obj/kern/kernel.asm	/^f0103652:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103655	obj/kern/kernel.asm	/^f0103655:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f010365b	obj/kern/kernel.asm	/^f010365b:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f010365e	obj/kern/kernel.asm	/^f010365e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103662	obj/kern/kernel.asm	/^f0103662:	c7 04 24 d0 67 10 f0 	movl   $0xf01067d0,(%esp)$/;"	l
f0103669	obj/kern/kernel.asm	/^f0103669:	e8 26 fc ff ff       	call   f0103294 <cprintf>$/;"	l
f010366e	obj/kern/kernel.asm	/^f010366e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103671	obj/kern/kernel.asm	/^f0103671:	e8 fe fd ff ff       	call   f0103474 <print_trapframe>$/;"	l
f0103676	obj/kern/kernel.asm	/^f0103676:	e8 0e 17 00 00       	call   f0104d89 <cpunum>$/;"	l
f010367b	obj/kern/kernel.asm	/^f010367b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010367e	obj/kern/kernel.asm	/^f010367e:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0103684	obj/kern/kernel.asm	/^f0103684:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	e8 c5 f8 ff ff       	call   f0102f51 <env_destroy>$/;"	l
f010368c	obj/kern/kernel.asm	/^f010368c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010368f	obj/kern/kernel.asm	/^f010368f:	5b                   	pop    %ebx$/;"	l
f0103690	obj/kern/kernel.asm	/^f0103690:	5e                   	pop    %esi$/;"	l
f0103691	obj/kern/kernel.asm	/^f0103691:	5f                   	pop    %edi$/;"	l
f0103692	obj/kern/kernel.asm	/^f0103692:	5d                   	pop    %ebp$/;"	l
f0103693	obj/kern/kernel.asm	/^f0103693:	c3                   	ret    $/;"	l
f0103694	obj/kern/kernel.asm	/^f0103694 <trap>:$/;"	l
f0103694	obj/kern/kernel.asm	/^f0103694:	55                   	push   %ebp$/;"	l
f0103695	obj/kern/kernel.asm	/^f0103695:	89 e5                	mov    %esp,%ebp$/;"	l
f0103697	obj/kern/kernel.asm	/^f0103697:	57                   	push   %edi$/;"	l
f0103698	obj/kern/kernel.asm	/^f0103698:	56                   	push   %esi$/;"	l
f0103699	obj/kern/kernel.asm	/^f0103699:	83 ec 20             	sub    $0x20,%esp$/;"	l
f010369c	obj/kern/kernel.asm	/^f010369c:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010369f	obj/kern/kernel.asm	/^f010369f:	fc                   	cld    $/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	83 3d 00 9f 22 f0 00 	cmpl   $0x0,0xf0229f00$/;"	l
f01036a7	obj/kern/kernel.asm	/^f01036a7:	74 01                	je     f01036aa <trap+0x16>$/;"	l
f01036a9	obj/kern/kernel.asm	/^f01036a9:	f4                   	hlt    $/;"	l
f01036aa	obj/kern/kernel.asm	/^f01036aa:	e8 da 16 00 00       	call   f0104d89 <cpunum>$/;"	l
f01036af	obj/kern/kernel.asm	/^f01036af:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01036b2	obj/kern/kernel.asm	/^f01036b2:	81 c2 20 a0 22 f0    	add    $0xf022a020,%edx$/;"	l
f01036b8	obj/kern/kernel.asm	/^f01036b8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01036bd	obj/kern/kernel.asm	/^f01036bd:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f01036c1	obj/kern/kernel.asm	/^f01036c1:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f01036c4	obj/kern/kernel.asm	/^f01036c4:	75 0c                	jne    f01036d2 <trap+0x3e>$/;"	l
f01036c6	obj/kern/kernel.asm	/^f01036c6:	c7 04 24 a0 e3 11 f0 	movl   $0xf011e3a0,(%esp)$/;"	l
f01036cd	obj/kern/kernel.asm	/^f01036cd:	e8 35 19 00 00       	call   f0105007 <spin_lock>$/;"	l
f01036d2	obj/kern/kernel.asm	/^f01036d2:	9c                   	pushf  $/;"	l
f01036d3	obj/kern/kernel.asm	/^f01036d3:	58                   	pop    %eax$/;"	l
f01036d4	obj/kern/kernel.asm	/^f01036d4:	f6 c4 02             	test   $0x2,%ah$/;"	l
f01036d7	obj/kern/kernel.asm	/^f01036d7:	74 24                	je     f01036fd <trap+0x69>$/;"	l
f01036d9	obj/kern/kernel.asm	/^f01036d9:	c7 44 24 0c 37 66 10 	movl   $0xf0106637,0xc(%esp)$/;"	l
f01036e0	obj/kern/kernel.asm	/^f01036e0:	f0 $/;"	l
f01036e1	obj/kern/kernel.asm	/^f01036e1:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f01036e8	obj/kern/kernel.asm	/^f01036e8:	f0 $/;"	l
f01036e9	obj/kern/kernel.asm	/^f01036e9:	c7 44 24 04 37 01 00 	movl   $0x137,0x4(%esp)$/;"	l
f01036f0	obj/kern/kernel.asm	/^f01036f0:	00 $/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1:	c7 04 24 2b 66 10 f0 	movl   $0xf010662b,(%esp)$/;"	l
f01036f8	obj/kern/kernel.asm	/^f01036f8:	e8 43 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f01036fd	obj/kern/kernel.asm	/^f01036fd:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0103701	obj/kern/kernel.asm	/^f0103701:	83 e0 03             	and    $0x3,%eax$/;"	l
f0103704	obj/kern/kernel.asm	/^f0103704:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0103708	obj/kern/kernel.asm	/^f0103708:	0f 85 9b 00 00 00    	jne    f01037a9 <trap+0x115>$/;"	l
f010370e	obj/kern/kernel.asm	/^f010370e:	e8 76 16 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103713	obj/kern/kernel.asm	/^f0103713:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103716	obj/kern/kernel.asm	/^f0103716:	83 b8 28 a0 22 f0 00 	cmpl   $0x0,-0xfdd5fd8(%eax)$/;"	l
f010371d	obj/kern/kernel.asm	/^f010371d:	75 24                	jne    f0103743 <trap+0xaf>$/;"	l
f010371f	obj/kern/kernel.asm	/^f010371f:	c7 44 24 0c 50 66 10 	movl   $0xf0106650,0xc(%esp)$/;"	l
f0103726	obj/kern/kernel.asm	/^f0103726:	f0 $/;"	l
f0103727	obj/kern/kernel.asm	/^f0103727:	c7 44 24 08 d5 5f 10 	movl   $0xf0105fd5,0x8(%esp)$/;"	l
f010372e	obj/kern/kernel.asm	/^f010372e:	f0 $/;"	l
f010372f	obj/kern/kernel.asm	/^f010372f:	c7 44 24 04 3e 01 00 	movl   $0x13e,0x4(%esp)$/;"	l
f0103736	obj/kern/kernel.asm	/^f0103736:	00 $/;"	l
f0103737	obj/kern/kernel.asm	/^f0103737:	c7 04 24 2b 66 10 f0 	movl   $0xf010662b,(%esp)$/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	e8 fd c8 ff ff       	call   f0100040 <_panic>$/;"	l
f0103743	obj/kern/kernel.asm	/^f0103743:	e8 41 16 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103748	obj/kern/kernel.asm	/^f0103748:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010374b	obj/kern/kernel.asm	/^f010374b:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0103751	obj/kern/kernel.asm	/^f0103751:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0103755	obj/kern/kernel.asm	/^f0103755:	75 2d                	jne    f0103784 <trap+0xf0>$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	e8 2d 16 00 00       	call   f0104d89 <cpunum>$/;"	l
f010375c	obj/kern/kernel.asm	/^f010375c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010375f	obj/kern/kernel.asm	/^f010375f:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0103765	obj/kern/kernel.asm	/^f0103765:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103768	obj/kern/kernel.asm	/^f0103768:	e8 df f5 ff ff       	call   f0102d4c <env_free>$/;"	l
f010376d	obj/kern/kernel.asm	/^f010376d:	e8 17 16 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103772	obj/kern/kernel.asm	/^f0103772:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103775	obj/kern/kernel.asm	/^f0103775:	c7 80 28 a0 22 f0 00 	movl   $0x0,-0xfdd5fd8(%eax)$/;"	l
f010377c	obj/kern/kernel.asm	/^f010377c:	00 00 00 $/;"	l
f010377f	obj/kern/kernel.asm	/^f010377f:	e8 9d 02 00 00       	call   f0103a21 <sched_yield>$/;"	l
f0103784	obj/kern/kernel.asm	/^f0103784:	e8 00 16 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103789	obj/kern/kernel.asm	/^f0103789:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010378c	obj/kern/kernel.asm	/^f010378c:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0103792	obj/kern/kernel.asm	/^f0103792:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0103797	obj/kern/kernel.asm	/^f0103797:	89 c7                	mov    %eax,%edi$/;"	l
f0103799	obj/kern/kernel.asm	/^f0103799:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010379b	obj/kern/kernel.asm	/^f010379b:	e8 e9 15 00 00       	call   f0104d89 <cpunum>$/;"	l
f01037a0	obj/kern/kernel.asm	/^f01037a0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01037a3	obj/kern/kernel.asm	/^f01037a3:	8b b0 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%esi$/;"	l
f01037a9	obj/kern/kernel.asm	/^f01037a9:	89 35 60 9a 22 f0    	mov    %esi,0xf0229a60$/;"	l
f01037af	obj/kern/kernel.asm	/^f01037af:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01037b2	obj/kern/kernel.asm	/^f01037b2:	e8 bd fc ff ff       	call   f0103474 <print_trapframe>$/;"	l
f01037b7	obj/kern/kernel.asm	/^f01037b7:	83 7e 28 0e          	cmpl   $0xe,0x28(%esi)$/;"	l
f01037bb	obj/kern/kernel.asm	/^f01037bb:	75 08                	jne    f01037c5 <trap+0x131>$/;"	l
f01037bd	obj/kern/kernel.asm	/^f01037bd:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01037c0	obj/kern/kernel.asm	/^f01037c0:	e8 4c fe ff ff       	call   f0103611 <page_fault_handler>$/;"	l
f01037c5	obj/kern/kernel.asm	/^f01037c5:	83 7e 28 03          	cmpl   $0x3,0x28(%esi)$/;"	l
f01037c9	obj/kern/kernel.asm	/^f01037c9:	75 08                	jne    f01037d3 <trap+0x13f>$/;"	l
f01037cb	obj/kern/kernel.asm	/^f01037cb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01037ce	obj/kern/kernel.asm	/^f01037ce:	e8 e6 d0 ff ff       	call   f01008b9 <monitor>$/;"	l
f01037d3	obj/kern/kernel.asm	/^f01037d3:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f01037d6	obj/kern/kernel.asm	/^f01037d6:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f01037d9	obj/kern/kernel.asm	/^f01037d9:	75 52                	jne    f010382d <trap+0x199>$/;"	l
f01037db	obj/kern/kernel.asm	/^f01037db:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f01037de	obj/kern/kernel.asm	/^f01037de:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f01037e2	obj/kern/kernel.asm	/^f01037e2:	8b 06                	mov    (%esi),%eax$/;"	l
f01037e4	obj/kern/kernel.asm	/^f01037e4:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01037e8	obj/kern/kernel.asm	/^f01037e8:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f01037eb	obj/kern/kernel.asm	/^f01037eb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01037ef	obj/kern/kernel.asm	/^f01037ef:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f01037f2	obj/kern/kernel.asm	/^f01037f2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01037f6	obj/kern/kernel.asm	/^f01037f6:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f01037f9	obj/kern/kernel.asm	/^f01037f9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01037fd	obj/kern/kernel.asm	/^f01037fd:	8b 46 1c             	mov    0x1c(%esi),%eax$/;"	l
f0103800	obj/kern/kernel.asm	/^f0103800:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103803	obj/kern/kernel.asm	/^f0103803:	e8 28 02 00 00       	call   f0103a30 <syscall>$/;"	l
f0103808	obj/kern/kernel.asm	/^f0103808:	85 c0                	test   %eax,%eax$/;"	l
f010380a	obj/kern/kernel.asm	/^f010380a:	79 1c                	jns    f0103828 <trap+0x194>$/;"	l
f010380c	obj/kern/kernel.asm	/^f010380c:	c7 44 24 08 f4 67 10 	movl   $0xf01067f4,0x8(%esp)$/;"	l
f0103813	obj/kern/kernel.asm	/^f0103813:	f0 $/;"	l
f0103814	obj/kern/kernel.asm	/^f0103814:	c7 44 24 04 07 01 00 	movl   $0x107,0x4(%esp)$/;"	l
f010381b	obj/kern/kernel.asm	/^f010381b:	00 $/;"	l
f010381c	obj/kern/kernel.asm	/^f010381c:	c7 04 24 2b 66 10 f0 	movl   $0xf010662b,(%esp)$/;"	l
f0103823	obj/kern/kernel.asm	/^f0103823:	e8 18 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f0103828	obj/kern/kernel.asm	/^f0103828:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f010382b	obj/kern/kernel.asm	/^f010382b:	eb 54                	jmp    f0103881 <trap+0x1ed>$/;"	l
f010382d	obj/kern/kernel.asm	/^f010382d:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0103830	obj/kern/kernel.asm	/^f0103830:	75 16                	jne    f0103848 <trap+0x1b4>$/;"	l
f0103832	obj/kern/kernel.asm	/^f0103832:	c7 04 24 57 66 10 f0 	movl   $0xf0106657,(%esp)$/;"	l
f0103839	obj/kern/kernel.asm	/^f0103839:	e8 56 fa ff ff       	call   f0103294 <cprintf>$/;"	l
f010383e	obj/kern/kernel.asm	/^f010383e:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103841	obj/kern/kernel.asm	/^f0103841:	e8 2e fc ff ff       	call   f0103474 <print_trapframe>$/;"	l
f0103846	obj/kern/kernel.asm	/^f0103846:	eb 39                	jmp    f0103881 <trap+0x1ed>$/;"	l
f0103848	obj/kern/kernel.asm	/^f0103848:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f010384d	obj/kern/kernel.asm	/^f010384d:	75 1c                	jne    f010386b <trap+0x1d7>$/;"	l
f010384f	obj/kern/kernel.asm	/^f010384f:	c7 44 24 08 74 66 10 	movl   $0xf0106674,0x8(%esp)$/;"	l
f0103856	obj/kern/kernel.asm	/^f0103856:	f0 $/;"	l
f0103857	obj/kern/kernel.asm	/^f0103857:	c7 44 24 04 1d 01 00 	movl   $0x11d,0x4(%esp)$/;"	l
f010385e	obj/kern/kernel.asm	/^f010385e:	00 $/;"	l
f010385f	obj/kern/kernel.asm	/^f010385f:	c7 04 24 2b 66 10 f0 	movl   $0xf010662b,(%esp)$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	e8 d5 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f010386b	obj/kern/kernel.asm	/^f010386b:	e8 19 15 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103870	obj/kern/kernel.asm	/^f0103870:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103873	obj/kern/kernel.asm	/^f0103873:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0103879	obj/kern/kernel.asm	/^f0103879:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010387c	obj/kern/kernel.asm	/^f010387c:	e8 d0 f6 ff ff       	call   f0102f51 <env_destroy>$/;"	l
f0103881	obj/kern/kernel.asm	/^f0103881:	e8 03 15 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103886	obj/kern/kernel.asm	/^f0103886:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103889	obj/kern/kernel.asm	/^f0103889:	83 b8 28 a0 22 f0 00 	cmpl   $0x0,-0xfdd5fd8(%eax)$/;"	l
f0103890	obj/kern/kernel.asm	/^f0103890:	74 2a                	je     f01038bc <trap+0x228>$/;"	l
f0103892	obj/kern/kernel.asm	/^f0103892:	e8 f2 14 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103897	obj/kern/kernel.asm	/^f0103897:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010389a	obj/kern/kernel.asm	/^f010389a:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f01038a0	obj/kern/kernel.asm	/^f01038a0:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01038a4	obj/kern/kernel.asm	/^f01038a4:	75 16                	jne    f01038bc <trap+0x228>$/;"	l
f01038a6	obj/kern/kernel.asm	/^f01038a6:	e8 de 14 00 00       	call   f0104d89 <cpunum>$/;"	l
f01038ab	obj/kern/kernel.asm	/^f01038ab:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01038ae	obj/kern/kernel.asm	/^f01038ae:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f01038b4	obj/kern/kernel.asm	/^f01038b4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01038b7	obj/kern/kernel.asm	/^f01038b7:	e8 36 f7 ff ff       	call   f0102ff2 <env_run>$/;"	l
f01038bc	obj/kern/kernel.asm	/^f01038bc:	e8 60 01 00 00       	call   f0103a21 <sched_yield>$/;"	l
f01038c1	obj/kern/kernel.asm	/^f01038c1:	90                   	nop$/;"	l
f01038c2	obj/kern/kernel.asm	/^f01038c2 <i_divide>:$/;"	l
f01038c2	obj/kern/kernel.asm	/^f01038c2:	6a 00                	push   $0x0$/;"	l
f01038c4	obj/kern/kernel.asm	/^f01038c4:	6a 00                	push   $0x0$/;"	l
f01038c6	obj/kern/kernel.asm	/^f01038c6:	eb 69                	jmp    f0103931 <_alltraps>$/;"	l
f01038c8	obj/kern/kernel.asm	/^f01038c8 <i_debug>:$/;"	l
f01038c8	obj/kern/kernel.asm	/^f01038c8:	6a 00                	push   $0x0$/;"	l
f01038ca	obj/kern/kernel.asm	/^f01038ca:	6a 01                	push   $0x1$/;"	l
f01038cc	obj/kern/kernel.asm	/^f01038cc:	eb 63                	jmp    f0103931 <_alltraps>$/;"	l
f01038ce	obj/kern/kernel.asm	/^f01038ce <i_nmi>:$/;"	l
f01038ce	obj/kern/kernel.asm	/^f01038ce:	6a 00                	push   $0x0$/;"	l
f01038d0	obj/kern/kernel.asm	/^f01038d0:	6a 02                	push   $0x2$/;"	l
f01038d2	obj/kern/kernel.asm	/^f01038d2:	eb 5d                	jmp    f0103931 <_alltraps>$/;"	l
f01038d4	obj/kern/kernel.asm	/^f01038d4 <i_brkpt>:$/;"	l
f01038d4	obj/kern/kernel.asm	/^f01038d4:	6a 00                	push   $0x0$/;"	l
f01038d6	obj/kern/kernel.asm	/^f01038d6:	6a 03                	push   $0x3$/;"	l
f01038d8	obj/kern/kernel.asm	/^f01038d8:	eb 57                	jmp    f0103931 <_alltraps>$/;"	l
f01038da	obj/kern/kernel.asm	/^f01038da <i_oflow>:$/;"	l
f01038da	obj/kern/kernel.asm	/^f01038da:	6a 00                	push   $0x0$/;"	l
f01038dc	obj/kern/kernel.asm	/^f01038dc:	6a 04                	push   $0x4$/;"	l
f01038de	obj/kern/kernel.asm	/^f01038de:	eb 51                	jmp    f0103931 <_alltraps>$/;"	l
f01038e0	obj/kern/kernel.asm	/^f01038e0 <i_bound>:$/;"	l
f01038e0	obj/kern/kernel.asm	/^f01038e0:	6a 00                	push   $0x0$/;"	l
f01038e2	obj/kern/kernel.asm	/^f01038e2:	6a 05                	push   $0x5$/;"	l
f01038e4	obj/kern/kernel.asm	/^f01038e4:	eb 4b                	jmp    f0103931 <_alltraps>$/;"	l
f01038e6	obj/kern/kernel.asm	/^f01038e6 <i_illop>:$/;"	l
f01038e6	obj/kern/kernel.asm	/^f01038e6:	6a 00                	push   $0x0$/;"	l
f01038e8	obj/kern/kernel.asm	/^f01038e8:	6a 06                	push   $0x6$/;"	l
f01038ea	obj/kern/kernel.asm	/^f01038ea:	eb 45                	jmp    f0103931 <_alltraps>$/;"	l
f01038ec	obj/kern/kernel.asm	/^f01038ec <i_device>:$/;"	l
f01038ec	obj/kern/kernel.asm	/^f01038ec:	6a 00                	push   $0x0$/;"	l
f01038ee	obj/kern/kernel.asm	/^f01038ee:	6a 07                	push   $0x7$/;"	l
f01038f0	obj/kern/kernel.asm	/^f01038f0:	eb 3f                	jmp    f0103931 <_alltraps>$/;"	l
f01038f2	obj/kern/kernel.asm	/^f01038f2 <i_dblflt>:$/;"	l
f01038f2	obj/kern/kernel.asm	/^f01038f2:	6a 08                	push   $0x8$/;"	l
f01038f4	obj/kern/kernel.asm	/^f01038f4:	eb 3b                	jmp    f0103931 <_alltraps>$/;"	l
f01038f6	obj/kern/kernel.asm	/^f01038f6 <i_coproc>:$/;"	l
f01038f6	obj/kern/kernel.asm	/^f01038f6:	6a 09                	push   $0x9$/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	eb 37                	jmp    f0103931 <_alltraps>$/;"	l
f01038fa	obj/kern/kernel.asm	/^f01038fa <i_tss>:$/;"	l
f01038fa	obj/kern/kernel.asm	/^f01038fa:	6a 0a                	push   $0xa$/;"	l
f01038fc	obj/kern/kernel.asm	/^f01038fc:	eb 33                	jmp    f0103931 <_alltraps>$/;"	l
f01038fe	obj/kern/kernel.asm	/^f01038fe <i_segnp>:$/;"	l
f01038fe	obj/kern/kernel.asm	/^f01038fe:	6a 0b                	push   $0xb$/;"	l
f0103900	obj/kern/kernel.asm	/^f0103900:	eb 2f                	jmp    f0103931 <_alltraps>$/;"	l
f0103902	obj/kern/kernel.asm	/^f0103902 <i_stack>:$/;"	l
f0103902	obj/kern/kernel.asm	/^f0103902:	6a 0c                	push   $0xc$/;"	l
f0103904	obj/kern/kernel.asm	/^f0103904:	eb 2b                	jmp    f0103931 <_alltraps>$/;"	l
f0103906	obj/kern/kernel.asm	/^f0103906 <i_fpflt>:$/;"	l
f0103906	obj/kern/kernel.asm	/^f0103906:	6a 0d                	push   $0xd$/;"	l
f0103908	obj/kern/kernel.asm	/^f0103908:	eb 27                	jmp    f0103931 <_alltraps>$/;"	l
f010390a	obj/kern/kernel.asm	/^f010390a <i_pgflt>:$/;"	l
f010390a	obj/kern/kernel.asm	/^f010390a:	6a 0e                	push   $0xe$/;"	l
f010390c	obj/kern/kernel.asm	/^f010390c:	eb 23                	jmp    f0103931 <_alltraps>$/;"	l
f010390e	obj/kern/kernel.asm	/^f010390e <i_res>:$/;"	l
f010390e	obj/kern/kernel.asm	/^f010390e:	6a 0f                	push   $0xf$/;"	l
f0103910	obj/kern/kernel.asm	/^f0103910:	eb 1f                	jmp    f0103931 <_alltraps>$/;"	l
f0103912	obj/kern/kernel.asm	/^f0103912 <i_fperr>:$/;"	l
f0103912	obj/kern/kernel.asm	/^f0103912:	6a 10                	push   $0x10$/;"	l
f0103914	obj/kern/kernel.asm	/^f0103914:	eb 1b                	jmp    f0103931 <_alltraps>$/;"	l
f0103916	obj/kern/kernel.asm	/^f0103916 <i_align>:$/;"	l
f0103916	obj/kern/kernel.asm	/^f0103916:	6a 11                	push   $0x11$/;"	l
f0103918	obj/kern/kernel.asm	/^f0103918:	eb 17                	jmp    f0103931 <_alltraps>$/;"	l
f010391a	obj/kern/kernel.asm	/^f010391a <i_mchk>:$/;"	l
f010391a	obj/kern/kernel.asm	/^f010391a:	6a 12                	push   $0x12$/;"	l
f010391c	obj/kern/kernel.asm	/^f010391c:	eb 13                	jmp    f0103931 <_alltraps>$/;"	l
f010391e	obj/kern/kernel.asm	/^f010391e <i_simderr>:$/;"	l
f010391e	obj/kern/kernel.asm	/^f010391e:	6a 13                	push   $0x13$/;"	l
f0103920	obj/kern/kernel.asm	/^f0103920:	eb 0f                	jmp    f0103931 <_alltraps>$/;"	l
f0103922	obj/kern/kernel.asm	/^f0103922 <i_syscall>:$/;"	l
f0103922	obj/kern/kernel.asm	/^f0103922:	6a 00                	push   $0x0$/;"	l
f0103924	obj/kern/kernel.asm	/^f0103924:	6a 30                	push   $0x30$/;"	l
f0103926	obj/kern/kernel.asm	/^f0103926:	eb 09                	jmp    f0103931 <_alltraps>$/;"	l
f0103928	obj/kern/kernel.asm	/^f0103928 <i_default>:$/;"	l
f0103928	obj/kern/kernel.asm	/^f0103928:	6a 00                	push   $0x0$/;"	l
f010392a	obj/kern/kernel.asm	/^f010392a:	68 f4 01 00 00       	push   $0x1f4$/;"	l
f010392f	obj/kern/kernel.asm	/^f010392f:	eb 00                	jmp    f0103931 <_alltraps>$/;"	l
f0103931	obj/kern/kernel.asm	/^f0103931 <_alltraps>:$/;"	l
f0103931	obj/kern/kernel.asm	/^f0103931:	66 6a 00             	pushw  $0x0$/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	66 1e                	pushw  %ds$/;"	l
f0103936	obj/kern/kernel.asm	/^f0103936:	66 6a 00             	pushw  $0x0$/;"	l
f0103939	obj/kern/kernel.asm	/^f0103939:	66 06                	pushw  %es$/;"	l
f010393b	obj/kern/kernel.asm	/^f010393b:	60                   	pusha  $/;"	l
f010393c	obj/kern/kernel.asm	/^f010393c:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0103941	obj/kern/kernel.asm	/^f0103941:	8e d8                	mov    %eax,%ds$/;"	l
f0103943	obj/kern/kernel.asm	/^f0103943:	8e c0                	mov    %eax,%es$/;"	l
f0103945	obj/kern/kernel.asm	/^f0103945:	54                   	push   %esp$/;"	l
f0103946	obj/kern/kernel.asm	/^f0103946:	e8 49 fd ff ff       	call   f0103694 <trap>$/;"	l
f010394b	obj/kern/kernel.asm	/^f010394b <sched_halt>:$/;"	l
f010394b	obj/kern/kernel.asm	/^f010394b:	55                   	push   %ebp$/;"	l
f010394c	obj/kern/kernel.asm	/^f010394c:	89 e5                	mov    %esp,%ebp$/;"	l
f010394e	obj/kern/kernel.asm	/^f010394e:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103951	obj/kern/kernel.asm	/^f0103951:	8b 15 48 92 22 f0    	mov    0xf0229248,%edx$/;"	l
f0103957	obj/kern/kernel.asm	/^f0103957:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010395c	obj/kern/kernel.asm	/^f010395c:	8b 4a 54             	mov    0x54(%edx),%ecx$/;"	l
f010395f	obj/kern/kernel.asm	/^f010395f:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0103962	obj/kern/kernel.asm	/^f0103962:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f0103965	obj/kern/kernel.asm	/^f0103965:	76 0f                	jbe    f0103976 <sched_halt+0x2b>$/;"	l
f0103967	obj/kern/kernel.asm	/^f0103967:	83 c0 01             	add    $0x1,%eax$/;"	l
f010396a	obj/kern/kernel.asm	/^f010396a:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f010396d	obj/kern/kernel.asm	/^f010396d:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0103972	obj/kern/kernel.asm	/^f0103972:	75 e8                	jne    f010395c <sched_halt+0x11>$/;"	l
f0103974	obj/kern/kernel.asm	/^f0103974:	eb 07                	jmp    f010397d <sched_halt+0x32>$/;"	l
f0103976	obj/kern/kernel.asm	/^f0103976:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f010397b	obj/kern/kernel.asm	/^f010397b:	75 1a                	jne    f0103997 <sched_halt+0x4c>$/;"	l
f010397d	obj/kern/kernel.asm	/^f010397d:	c7 04 24 1c 68 10 f0 	movl   $0xf010681c,(%esp)$/;"	l
f0103984	obj/kern/kernel.asm	/^f0103984:	e8 0b f9 ff ff       	call   f0103294 <cprintf>$/;"	l
f0103989	obj/kern/kernel.asm	/^f0103989:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103990	obj/kern/kernel.asm	/^f0103990:	e8 24 cf ff ff       	call   f01008b9 <monitor>$/;"	l
f0103995	obj/kern/kernel.asm	/^f0103995:	eb f2                	jmp    f0103989 <sched_halt+0x3e>$/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	e8 ed 13 00 00       	call   f0104d89 <cpunum>$/;"	l
f010399c	obj/kern/kernel.asm	/^f010399c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010399f	obj/kern/kernel.asm	/^f010399f:	c7 80 28 a0 22 f0 00 	movl   $0x0,-0xfdd5fd8(%eax)$/;"	l
f01039a6	obj/kern/kernel.asm	/^f01039a6:	00 00 00 $/;"	l
f01039a9	obj/kern/kernel.asm	/^f01039a9:	a1 0c 9f 22 f0       	mov    0xf0229f0c,%eax$/;"	l
f01039ae	obj/kern/kernel.asm	/^f01039ae:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01039b3	obj/kern/kernel.asm	/^f01039b3:	77 20                	ja     f01039d5 <sched_halt+0x8a>$/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01039b9	obj/kern/kernel.asm	/^f01039b9:	c7 44 24 08 a8 54 10 	movl   $0xf01054a8,0x8(%esp)$/;"	l
f01039c0	obj/kern/kernel.asm	/^f01039c0:	f0 $/;"	l
f01039c1	obj/kern/kernel.asm	/^f01039c1:	c7 44 24 04 3d 00 00 	movl   $0x3d,0x4(%esp)$/;"	l
f01039c8	obj/kern/kernel.asm	/^f01039c8:	00 $/;"	l
f01039c9	obj/kern/kernel.asm	/^f01039c9:	c7 04 24 45 68 10 f0 	movl   $0xf0106845,(%esp)$/;"	l
f01039d0	obj/kern/kernel.asm	/^f01039d0:	e8 6b c6 ff ff       	call   f0100040 <_panic>$/;"	l
f01039d5	obj/kern/kernel.asm	/^f01039d5:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01039da	obj/kern/kernel.asm	/^f01039da:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01039dd	obj/kern/kernel.asm	/^f01039dd:	e8 a7 13 00 00       	call   f0104d89 <cpunum>$/;"	l
f01039e2	obj/kern/kernel.asm	/^f01039e2:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01039e5	obj/kern/kernel.asm	/^f01039e5:	81 c2 20 a0 22 f0    	add    $0xf022a020,%edx$/;"	l
f01039eb	obj/kern/kernel.asm	/^f01039eb:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f01039f0	obj/kern/kernel.asm	/^f01039f0:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f01039f4	obj/kern/kernel.asm	/^f01039f4:	c7 04 24 a0 e3 11 f0 	movl   $0xf011e3a0,(%esp)$/;"	l
f01039fb	obj/kern/kernel.asm	/^f01039fb:	e8 b3 16 00 00       	call   f01050b3 <spin_unlock>$/;"	l
f0103a00	obj/kern/kernel.asm	/^f0103a00:	f3 90                	pause  $/;"	l
f0103a02	obj/kern/kernel.asm	/^f0103a02:	e8 82 13 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103a07	obj/kern/kernel.asm	/^f0103a07:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103a0a	obj/kern/kernel.asm	/^f0103a0a:	8b 80 30 a0 22 f0    	mov    -0xfdd5fd0(%eax),%eax$/;"	l
f0103a10	obj/kern/kernel.asm	/^f0103a10:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0103a15	obj/kern/kernel.asm	/^f0103a15:	89 c4                	mov    %eax,%esp$/;"	l
f0103a17	obj/kern/kernel.asm	/^f0103a17:	6a 00                	push   $0x0$/;"	l
f0103a19	obj/kern/kernel.asm	/^f0103a19:	6a 00                	push   $0x0$/;"	l
f0103a1b	obj/kern/kernel.asm	/^f0103a1b:	fb                   	sti    $/;"	l
f0103a1c	obj/kern/kernel.asm	/^f0103a1c:	f4                   	hlt    $/;"	l
f0103a1d	obj/kern/kernel.asm	/^f0103a1d:	eb fd                	jmp    f0103a1c <sched_halt+0xd1>$/;"	l
f0103a1f	obj/kern/kernel.asm	/^f0103a1f:	c9                   	leave  $/;"	l
f0103a20	obj/kern/kernel.asm	/^f0103a20:	c3                   	ret    $/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21 <sched_yield>:$/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	55                   	push   %ebp$/;"	l
f0103a22	obj/kern/kernel.asm	/^f0103a22:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a24	obj/kern/kernel.asm	/^f0103a24:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103a27	obj/kern/kernel.asm	/^f0103a27:	e8 1f ff ff ff       	call   f010394b <sched_halt>$/;"	l
f0103a2c	obj/kern/kernel.asm	/^f0103a2c:	c9                   	leave  $/;"	l
f0103a2d	obj/kern/kernel.asm	/^f0103a2d:	c3                   	ret    $/;"	l
f0103a2e	obj/kern/kernel.asm	/^f0103a2e:	66 90                	xchg   %ax,%ax$/;"	l
f0103a30	obj/kern/kernel.asm	/^f0103a30 <syscall>:$/;"	l
f0103a30	obj/kern/kernel.asm	/^f0103a30:	55                   	push   %ebp$/;"	l
f0103a31	obj/kern/kernel.asm	/^f0103a31:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a33	obj/kern/kernel.asm	/^f0103a33:	53                   	push   %ebx$/;"	l
f0103a34	obj/kern/kernel.asm	/^f0103a34:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0103a37	obj/kern/kernel.asm	/^f0103a37:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103a3a	obj/kern/kernel.asm	/^f0103a3a:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0103a3d	obj/kern/kernel.asm	/^f0103a3d:	74 66                	je     f0103aa5 <syscall+0x75>$/;"	l
f0103a3f	obj/kern/kernel.asm	/^f0103a3f:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0103a42	obj/kern/kernel.asm	/^f0103a42:	72 11                	jb     f0103a55 <syscall+0x25>$/;"	l
f0103a44	obj/kern/kernel.asm	/^f0103a44:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0103a47	obj/kern/kernel.asm	/^f0103a47:	74 66                	je     f0103aaf <syscall+0x7f>$/;"	l
f0103a49	obj/kern/kernel.asm	/^f0103a49:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0103a4c	obj/kern/kernel.asm	/^f0103a4c:	74 78                	je     f0103ac6 <syscall+0x96>$/;"	l
f0103a4e	obj/kern/kernel.asm	/^f0103a4e:	66 90                	xchg   %ax,%ax$/;"	l
f0103a50	obj/kern/kernel.asm	/^f0103a50:	e9 03 01 00 00       	jmp    f0103b58 <syscall+0x128>$/;"	l
f0103a55	obj/kern/kernel.asm	/^f0103a55:	e8 2f 13 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103a5a	obj/kern/kernel.asm	/^f0103a5a:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0103a61	obj/kern/kernel.asm	/^f0103a61:	00 $/;"	l
f0103a62	obj/kern/kernel.asm	/^f0103a62:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0103a65	obj/kern/kernel.asm	/^f0103a65:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0103a69	obj/kern/kernel.asm	/^f0103a69:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103a6c	obj/kern/kernel.asm	/^f0103a6c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103a73	obj/kern/kernel.asm	/^f0103a73:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0103a79	obj/kern/kernel.asm	/^f0103a79:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a7c	obj/kern/kernel.asm	/^f0103a7c:	e8 9a ed ff ff       	call   f010281b <user_mem_assert>$/;"	l
f0103a81	obj/kern/kernel.asm	/^f0103a81:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103a84	obj/kern/kernel.asm	/^f0103a84:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103a88	obj/kern/kernel.asm	/^f0103a88:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103a8b	obj/kern/kernel.asm	/^f0103a8b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103a8f	obj/kern/kernel.asm	/^f0103a8f:	c7 04 24 52 68 10 f0 	movl   $0xf0106852,(%esp)$/;"	l
f0103a96	obj/kern/kernel.asm	/^f0103a96:	e8 f9 f7 ff ff       	call   f0103294 <cprintf>$/;"	l
f0103a9b	obj/kern/kernel.asm	/^f0103a9b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103aa0	obj/kern/kernel.asm	/^f0103aa0:	e9 b8 00 00 00       	jmp    f0103b5d <syscall+0x12d>$/;"	l
f0103aa5	obj/kern/kernel.asm	/^f0103aa5:	e8 6b cb ff ff       	call   f0100615 <cons_getc>$/;"	l
f0103aaa	obj/kern/kernel.asm	/^f0103aaa:	e9 ae 00 00 00       	jmp    f0103b5d <syscall+0x12d>$/;"	l
f0103aaf	obj/kern/kernel.asm	/^f0103aaf:	90                   	nop$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	e8 d4 12 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103ab5	obj/kern/kernel.asm	/^f0103ab5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ab8	obj/kern/kernel.asm	/^f0103ab8:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0103abe	obj/kern/kernel.asm	/^f0103abe:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0103ac1	obj/kern/kernel.asm	/^f0103ac1:	e9 97 00 00 00       	jmp    f0103b5d <syscall+0x12d>$/;"	l
f0103ac6	obj/kern/kernel.asm	/^f0103ac6:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0103acd	obj/kern/kernel.asm	/^f0103acd:	00 $/;"	l
f0103ace	obj/kern/kernel.asm	/^f0103ace:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0103ad1	obj/kern/kernel.asm	/^f0103ad1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103ad5	obj/kern/kernel.asm	/^f0103ad5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103ad8	obj/kern/kernel.asm	/^f0103ad8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103adb	obj/kern/kernel.asm	/^f0103adb:	e8 37 ee ff ff       	call   f0102917 <envid2env>$/;"	l
f0103ae0	obj/kern/kernel.asm	/^f0103ae0:	89 c2                	mov    %eax,%edx$/;"	l
f0103ae2	obj/kern/kernel.asm	/^f0103ae2:	85 c0                	test   %eax,%eax$/;"	l
f0103ae4	obj/kern/kernel.asm	/^f0103ae4:	78 6e                	js     f0103b54 <syscall+0x124>$/;"	l
f0103ae6	obj/kern/kernel.asm	/^f0103ae6:	e8 9e 12 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103aeb	obj/kern/kernel.asm	/^f0103aeb:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0103aee	obj/kern/kernel.asm	/^f0103aee:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103af1	obj/kern/kernel.asm	/^f0103af1:	39 90 28 a0 22 f0    	cmp    %edx,-0xfdd5fd8(%eax)$/;"	l
f0103af7	obj/kern/kernel.asm	/^f0103af7:	75 23                	jne    f0103b1c <syscall+0xec>$/;"	l
f0103af9	obj/kern/kernel.asm	/^f0103af9:	e8 8b 12 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103afe	obj/kern/kernel.asm	/^f0103afe:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b01	obj/kern/kernel.asm	/^f0103b01:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0103b07	obj/kern/kernel.asm	/^f0103b07:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0103b0a	obj/kern/kernel.asm	/^f0103b0a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103b0e	obj/kern/kernel.asm	/^f0103b0e:	c7 04 24 57 68 10 f0 	movl   $0xf0106857,(%esp)$/;"	l
f0103b15	obj/kern/kernel.asm	/^f0103b15:	e8 7a f7 ff ff       	call   f0103294 <cprintf>$/;"	l
f0103b1a	obj/kern/kernel.asm	/^f0103b1a:	eb 28                	jmp    f0103b44 <syscall+0x114>$/;"	l
f0103b1c	obj/kern/kernel.asm	/^f0103b1c:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f0103b1f	obj/kern/kernel.asm	/^f0103b1f:	e8 65 12 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103b24	obj/kern/kernel.asm	/^f0103b24:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103b28	obj/kern/kernel.asm	/^f0103b28:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b2b	obj/kern/kernel.asm	/^f0103b2b:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0103b31	obj/kern/kernel.asm	/^f0103b31:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0103b34	obj/kern/kernel.asm	/^f0103b34:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103b38	obj/kern/kernel.asm	/^f0103b38:	c7 04 24 72 68 10 f0 	movl   $0xf0106872,(%esp)$/;"	l
f0103b3f	obj/kern/kernel.asm	/^f0103b3f:	e8 50 f7 ff ff       	call   f0103294 <cprintf>$/;"	l
f0103b44	obj/kern/kernel.asm	/^f0103b44:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103b47	obj/kern/kernel.asm	/^f0103b47:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103b4a	obj/kern/kernel.asm	/^f0103b4a:	e8 02 f4 ff ff       	call   f0102f51 <env_destroy>$/;"	l
f0103b4f	obj/kern/kernel.asm	/^f0103b4f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103b54	obj/kern/kernel.asm	/^f0103b54:	89 d0                	mov    %edx,%eax$/;"	l
f0103b56	obj/kern/kernel.asm	/^f0103b56:	eb 05                	jmp    f0103b5d <syscall+0x12d>$/;"	l
f0103b58	obj/kern/kernel.asm	/^f0103b58:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f0103b5d	obj/kern/kernel.asm	/^f0103b5d:	83 c4 24             	add    $0x24,%esp$/;"	l
f0103b60	obj/kern/kernel.asm	/^f0103b60:	5b                   	pop    %ebx$/;"	l
f0103b61	obj/kern/kernel.asm	/^f0103b61:	5d                   	pop    %ebp$/;"	l
f0103b62	obj/kern/kernel.asm	/^f0103b62:	c3                   	ret    $/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63 <stab_binsearch>:$/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63:	55                   	push   %ebp$/;"	l
f0103b64	obj/kern/kernel.asm	/^f0103b64:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b66	obj/kern/kernel.asm	/^f0103b66:	57                   	push   %edi$/;"	l
f0103b67	obj/kern/kernel.asm	/^f0103b67:	56                   	push   %esi$/;"	l
f0103b68	obj/kern/kernel.asm	/^f0103b68:	53                   	push   %ebx$/;"	l
f0103b69	obj/kern/kernel.asm	/^f0103b69:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103b6c	obj/kern/kernel.asm	/^f0103b6c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0103b6f	obj/kern/kernel.asm	/^f0103b6f:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0103b72	obj/kern/kernel.asm	/^f0103b72:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0103b75	obj/kern/kernel.asm	/^f0103b75:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103b78	obj/kern/kernel.asm	/^f0103b78:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0103b7a	obj/kern/kernel.asm	/^f0103b7a:	8b 01                	mov    (%ecx),%eax$/;"	l
f0103b7c	obj/kern/kernel.asm	/^f0103b7c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0103b7f	obj/kern/kernel.asm	/^f0103b7f:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0103b86	obj/kern/kernel.asm	/^f0103b86:	e9 88 00 00 00       	jmp    f0103c13 <stab_binsearch+0xb0>$/;"	l
f0103b8b	obj/kern/kernel.asm	/^f0103b8b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0103b8e	obj/kern/kernel.asm	/^f0103b8e:	01 d8                	add    %ebx,%eax$/;"	l
f0103b90	obj/kern/kernel.asm	/^f0103b90:	89 c7                	mov    %eax,%edi$/;"	l
f0103b92	obj/kern/kernel.asm	/^f0103b92:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0103b95	obj/kern/kernel.asm	/^f0103b95:	01 c7                	add    %eax,%edi$/;"	l
f0103b97	obj/kern/kernel.asm	/^f0103b97:	d1 ff                	sar    %edi$/;"	d
f0103b99	obj/kern/kernel.asm	/^f0103b99:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0103b9c	obj/kern/kernel.asm	/^f0103b9c:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0103b9f	obj/kern/kernel.asm	/^f0103b9f:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f0103ba2	obj/kern/kernel.asm	/^f0103ba2:	89 f8                	mov    %edi,%eax$/;"	l
f0103ba4	obj/kern/kernel.asm	/^f0103ba4:	eb 03                	jmp    f0103ba9 <stab_binsearch+0x46>$/;"	l
f0103ba6	obj/kern/kernel.asm	/^f0103ba6:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103ba9	obj/kern/kernel.asm	/^f0103ba9:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103bab	obj/kern/kernel.asm	/^f0103bab:	7f 1f                	jg     f0103bcc <stab_binsearch+0x69>$/;"	l
f0103bad	obj/kern/kernel.asm	/^f0103bad:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0103bb1	obj/kern/kernel.asm	/^f0103bb1:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0103bb4	obj/kern/kernel.asm	/^f0103bb4:	39 f1                	cmp    %esi,%ecx$/;"	l
f0103bb6	obj/kern/kernel.asm	/^f0103bb6:	75 ee                	jne    f0103ba6 <stab_binsearch+0x43>$/;"	l
f0103bb8	obj/kern/kernel.asm	/^f0103bb8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0103bbb	obj/kern/kernel.asm	/^f0103bbb:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0103bbe	obj/kern/kernel.asm	/^f0103bbe:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0103bc1	obj/kern/kernel.asm	/^f0103bc1:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0103bc8	obj/kern/kernel.asm	/^f0103bc8:	76 18                	jbe    f0103be2 <stab_binsearch+0x7f>$/;"	l
f0103bca	obj/kern/kernel.asm	/^f0103bca:	eb 05                	jmp    f0103bd1 <stab_binsearch+0x6e>$/;"	l
f0103bcc	obj/kern/kernel.asm	/^f0103bcc:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0103bcf	obj/kern/kernel.asm	/^f0103bcf:	eb 42                	jmp    f0103c13 <stab_binsearch+0xb0>$/;"	l
f0103bd1	obj/kern/kernel.asm	/^f0103bd1:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0103bd4	obj/kern/kernel.asm	/^f0103bd4:	89 03                	mov    %eax,(%ebx)$/;"	l
f0103bd6	obj/kern/kernel.asm	/^f0103bd6:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0103bd9	obj/kern/kernel.asm	/^f0103bd9:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0103be0	obj/kern/kernel.asm	/^f0103be0:	eb 31                	jmp    f0103c13 <stab_binsearch+0xb0>$/;"	l
f0103be2	obj/kern/kernel.asm	/^f0103be2:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0103be5	obj/kern/kernel.asm	/^f0103be5:	73 17                	jae    f0103bfe <stab_binsearch+0x9b>$/;"	l
f0103be7	obj/kern/kernel.asm	/^f0103be7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0103bea	obj/kern/kernel.asm	/^f0103bea:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103bed	obj/kern/kernel.asm	/^f0103bed:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0103bf0	obj/kern/kernel.asm	/^f0103bf0:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0103bf3	obj/kern/kernel.asm	/^f0103bf3:	89 07                	mov    %eax,(%edi)$/;"	l
f0103bf5	obj/kern/kernel.asm	/^f0103bf5:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0103bfc	obj/kern/kernel.asm	/^f0103bfc:	eb 15                	jmp    f0103c13 <stab_binsearch+0xb0>$/;"	l
f0103bfe	obj/kern/kernel.asm	/^f0103bfe:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103c01	obj/kern/kernel.asm	/^f0103c01:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f0103c04	obj/kern/kernel.asm	/^f0103c04:	89 1f                	mov    %ebx,(%edi)$/;"	l
f0103c06	obj/kern/kernel.asm	/^f0103c06:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0103c0a	obj/kern/kernel.asm	/^f0103c0a:	89 c3                	mov    %eax,%ebx$/;"	l
f0103c0c	obj/kern/kernel.asm	/^f0103c0c:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0103c13	obj/kern/kernel.asm	/^f0103c13:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0103c16	obj/kern/kernel.asm	/^f0103c16:	0f 8e 6f ff ff ff    	jle    f0103b8b <stab_binsearch+0x28>$/;"	l
f0103c1c	obj/kern/kernel.asm	/^f0103c1c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0103c20	obj/kern/kernel.asm	/^f0103c20:	75 0f                	jne    f0103c31 <stab_binsearch+0xce>$/;"	l
f0103c22	obj/kern/kernel.asm	/^f0103c22:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103c25	obj/kern/kernel.asm	/^f0103c25:	8b 00                	mov    (%eax),%eax$/;"	l
f0103c27	obj/kern/kernel.asm	/^f0103c27:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0103c2d	obj/kern/kernel.asm	/^f0103c2d:	89 07                	mov    %eax,(%edi)$/;"	l
f0103c2f	obj/kern/kernel.asm	/^f0103c2f:	eb 2c                	jmp    f0103c5d <stab_binsearch+0xfa>$/;"	l
f0103c31	obj/kern/kernel.asm	/^f0103c31:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103c34	obj/kern/kernel.asm	/^f0103c34:	8b 00                	mov    (%eax),%eax$/;"	l
f0103c36	obj/kern/kernel.asm	/^f0103c36:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103c39	obj/kern/kernel.asm	/^f0103c39:	8b 0f                	mov    (%edi),%ecx$/;"	l
f0103c3b	obj/kern/kernel.asm	/^f0103c3b:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0103c3e	obj/kern/kernel.asm	/^f0103c3e:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
f0103c41	obj/kern/kernel.asm	/^f0103c41:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0103c44	obj/kern/kernel.asm	/^f0103c44:	eb 03                	jmp    f0103c49 <stab_binsearch+0xe6>$/;"	l
f0103c46	obj/kern/kernel.asm	/^f0103c46:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103c49	obj/kern/kernel.asm	/^f0103c49:	39 c8                	cmp    %ecx,%eax$/;"	l
f0103c4b	obj/kern/kernel.asm	/^f0103c4b:	7e 0b                	jle    f0103c58 <stab_binsearch+0xf5>$/;"	l
f0103c4d	obj/kern/kernel.asm	/^f0103c4d:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f0103c51	obj/kern/kernel.asm	/^f0103c51:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0103c54	obj/kern/kernel.asm	/^f0103c54:	39 f3                	cmp    %esi,%ebx$/;"	l
f0103c56	obj/kern/kernel.asm	/^f0103c56:	75 ee                	jne    f0103c46 <stab_binsearch+0xe3>$/;"	l
f0103c58	obj/kern/kernel.asm	/^f0103c58:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103c5b	obj/kern/kernel.asm	/^f0103c5b:	89 07                	mov    %eax,(%edi)$/;"	l
f0103c5d	obj/kern/kernel.asm	/^f0103c5d:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103c60	obj/kern/kernel.asm	/^f0103c60:	5b                   	pop    %ebx$/;"	l
f0103c61	obj/kern/kernel.asm	/^f0103c61:	5e                   	pop    %esi$/;"	l
f0103c62	obj/kern/kernel.asm	/^f0103c62:	5f                   	pop    %edi$/;"	l
f0103c63	obj/kern/kernel.asm	/^f0103c63:	5d                   	pop    %ebp$/;"	l
f0103c64	obj/kern/kernel.asm	/^f0103c64:	c3                   	ret    $/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65 <debuginfo_eip>:$/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	55                   	push   %ebp$/;"	l
f0103c66	obj/kern/kernel.asm	/^f0103c66:	89 e5                	mov    %esp,%ebp$/;"	l
f0103c68	obj/kern/kernel.asm	/^f0103c68:	57                   	push   %edi$/;"	l
f0103c69	obj/kern/kernel.asm	/^f0103c69:	56                   	push   %esi$/;"	l
f0103c6a	obj/kern/kernel.asm	/^f0103c6a:	53                   	push   %ebx$/;"	l
f0103c6b	obj/kern/kernel.asm	/^f0103c6b:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0103c6e	obj/kern/kernel.asm	/^f0103c6e:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103c71	obj/kern/kernel.asm	/^f0103c71:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0103c74	obj/kern/kernel.asm	/^f0103c74:	c7 06 8a 68 10 f0    	movl   $0xf010688a,(%esi)$/;"	l
f0103c7a	obj/kern/kernel.asm	/^f0103c7a:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)$/;"	l
f0103c81	obj/kern/kernel.asm	/^f0103c81:	c7 46 08 8a 68 10 f0 	movl   $0xf010688a,0x8(%esi)$/;"	l
f0103c88	obj/kern/kernel.asm	/^f0103c88:	c7 46 0c 09 00 00 00 	movl   $0x9,0xc(%esi)$/;"	l
f0103c8f	obj/kern/kernel.asm	/^f0103c8f:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0103c92	obj/kern/kernel.asm	/^f0103c92:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f0103c9f	obj/kern/kernel.asm	/^f0103c9f:	0f 87 ca 00 00 00    	ja     f0103d6f <debuginfo_eip+0x10a>$/;"	l
f0103ca5	obj/kern/kernel.asm	/^f0103ca5:	e8 df 10 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103caa	obj/kern/kernel.asm	/^f0103caa:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0103cb1	obj/kern/kernel.asm	/^f0103cb1:	00 $/;"	l
f0103cb2	obj/kern/kernel.asm	/^f0103cb2:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0103cb9	obj/kern/kernel.asm	/^f0103cb9:	00 $/;"	l
f0103cba	obj/kern/kernel.asm	/^f0103cba:	c7 44 24 04 00 00 20 	movl   $0x200000,0x4(%esp)$/;"	l
f0103cc1	obj/kern/kernel.asm	/^f0103cc1:	00 $/;"	l
f0103cc2	obj/kern/kernel.asm	/^f0103cc2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cc5	obj/kern/kernel.asm	/^f0103cc5:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0103ccb	obj/kern/kernel.asm	/^f0103ccb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103cce	obj/kern/kernel.asm	/^f0103cce:	e8 c2 ea ff ff       	call   f0102795 <user_mem_check>$/;"	l
f0103cd3	obj/kern/kernel.asm	/^f0103cd3:	85 c0                	test   %eax,%eax$/;"	l
f0103cd5	obj/kern/kernel.asm	/^f0103cd5:	0f 88 ea 01 00 00    	js     f0103ec5 <debuginfo_eip+0x260>$/;"	l
f0103cdb	obj/kern/kernel.asm	/^f0103cdb:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f0103ce0	obj/kern/kernel.asm	/^f0103ce0:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103ce3	obj/kern/kernel.asm	/^f0103ce3:	8b 1d 04 00 20 00    	mov    0x200004,%ebx$/;"	l
f0103ce9	obj/kern/kernel.asm	/^f0103ce9:	8b 15 08 00 20 00    	mov    0x200008,%edx$/;"	l
f0103cef	obj/kern/kernel.asm	/^f0103cef:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0103cf2	obj/kern/kernel.asm	/^f0103cf2:	a1 0c 00 20 00       	mov    0x20000c,%eax$/;"	l
f0103cf7	obj/kern/kernel.asm	/^f0103cf7:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0103cfa	obj/kern/kernel.asm	/^f0103cfa:	e8 8a 10 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103cff	obj/kern/kernel.asm	/^f0103cff:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0103d06	obj/kern/kernel.asm	/^f0103d06:	00 $/;"	l
f0103d07	obj/kern/kernel.asm	/^f0103d07:	89 da                	mov    %ebx,%edx$/;"	l
f0103d09	obj/kern/kernel.asm	/^f0103d09:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0103d0c	obj/kern/kernel.asm	/^f0103d0c:	29 ca                	sub    %ecx,%edx$/;"	l
f0103d0e	obj/kern/kernel.asm	/^f0103d0e:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0103d11	obj/kern/kernel.asm	/^f0103d11:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0103d17	obj/kern/kernel.asm	/^f0103d17:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0103d1b	obj/kern/kernel.asm	/^f0103d1b:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0103d1f	obj/kern/kernel.asm	/^f0103d1f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d22	obj/kern/kernel.asm	/^f0103d22:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0103d28	obj/kern/kernel.asm	/^f0103d28:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d2b	obj/kern/kernel.asm	/^f0103d2b:	e8 65 ea ff ff       	call   f0102795 <user_mem_check>$/;"	l
f0103d30	obj/kern/kernel.asm	/^f0103d30:	85 c0                	test   %eax,%eax$/;"	l
f0103d32	obj/kern/kernel.asm	/^f0103d32:	0f 88 94 01 00 00    	js     f0103ecc <debuginfo_eip+0x267>$/;"	l
f0103d38	obj/kern/kernel.asm	/^f0103d38:	e8 4c 10 00 00       	call   f0104d89 <cpunum>$/;"	l
f0103d3d	obj/kern/kernel.asm	/^f0103d3d:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0103d44	obj/kern/kernel.asm	/^f0103d44:	00 $/;"	l
f0103d45	obj/kern/kernel.asm	/^f0103d45:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0103d48	obj/kern/kernel.asm	/^f0103d48:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0103d4b	obj/kern/kernel.asm	/^f0103d4b:	29 ca                	sub    %ecx,%edx$/;"	l
f0103d4d	obj/kern/kernel.asm	/^f0103d4d:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0103d51	obj/kern/kernel.asm	/^f0103d51:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0103d55	obj/kern/kernel.asm	/^f0103d55:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d58	obj/kern/kernel.asm	/^f0103d58:	8b 80 28 a0 22 f0    	mov    -0xfdd5fd8(%eax),%eax$/;"	l
f0103d5e	obj/kern/kernel.asm	/^f0103d5e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d61	obj/kern/kernel.asm	/^f0103d61:	e8 2f ea ff ff       	call   f0102795 <user_mem_check>$/;"	l
f0103d66	obj/kern/kernel.asm	/^f0103d66:	85 c0                	test   %eax,%eax$/;"	l
f0103d68	obj/kern/kernel.asm	/^f0103d68:	79 1f                	jns    f0103d89 <debuginfo_eip+0x124>$/;"	l
f0103d6a	obj/kern/kernel.asm	/^f0103d6a:	e9 64 01 00 00       	jmp    f0103ed3 <debuginfo_eip+0x26e>$/;"	l
f0103d6f	obj/kern/kernel.asm	/^f0103d6f:	c7 45 cc 42 34 11 f0 	movl   $0xf0113442,-0x34(%ebp)$/;"	l
f0103d76	obj/kern/kernel.asm	/^f0103d76:	c7 45 d0 81 fe 10 f0 	movl   $0xf010fe81,-0x30(%ebp)$/;"	l
f0103d7d	obj/kern/kernel.asm	/^f0103d7d:	bb 80 fe 10 f0       	mov    $0xf010fe80,%ebx$/;"	l
f0103d82	obj/kern/kernel.asm	/^f0103d82:	c7 45 d4 78 6d 10 f0 	movl   $0xf0106d78,-0x2c(%ebp)$/;"	l
f0103d89	obj/kern/kernel.asm	/^f0103d89:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0103d8c	obj/kern/kernel.asm	/^f0103d8c:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f0103d8f	obj/kern/kernel.asm	/^f0103d8f:	0f 83 45 01 00 00    	jae    f0103eda <debuginfo_eip+0x275>$/;"	l
f0103d95	obj/kern/kernel.asm	/^f0103d95:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0103d99	obj/kern/kernel.asm	/^f0103d99:	0f 85 42 01 00 00    	jne    f0103ee1 <debuginfo_eip+0x27c>$/;"	l
f0103d9f	obj/kern/kernel.asm	/^f0103d9f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0103da6	obj/kern/kernel.asm	/^f0103da6:	2b 5d d4             	sub    -0x2c(%ebp),%ebx$/;"	l
f0103da9	obj/kern/kernel.asm	/^f0103da9:	c1 fb 02             	sar    $0x2,%ebx$/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac:	69 c3 ab aa aa aa    	imul   $0xaaaaaaab,%ebx,%eax$/;"	l
f0103db2	obj/kern/kernel.asm	/^f0103db2:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103db5	obj/kern/kernel.asm	/^f0103db5:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0103db8	obj/kern/kernel.asm	/^f0103db8:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0103dbc	obj/kern/kernel.asm	/^f0103dbc:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0103dc3	obj/kern/kernel.asm	/^f0103dc3:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0103dc9	obj/kern/kernel.asm	/^f0103dc9:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	89 d8                	mov    %ebx,%eax$/;"	l
f0103dce	obj/kern/kernel.asm	/^f0103dce:	e8 90 fd ff ff       	call   f0103b63 <stab_binsearch>$/;"	l
f0103dd3	obj/kern/kernel.asm	/^f0103dd3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103dd6	obj/kern/kernel.asm	/^f0103dd6:	85 c0                	test   %eax,%eax$/;"	l
f0103dd8	obj/kern/kernel.asm	/^f0103dd8:	0f 84 0a 01 00 00    	je     f0103ee8 <debuginfo_eip+0x283>$/;"	l
f0103dde	obj/kern/kernel.asm	/^f0103dde:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103de1	obj/kern/kernel.asm	/^f0103de1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103de4	obj/kern/kernel.asm	/^f0103de4:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103de7	obj/kern/kernel.asm	/^f0103de7:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0103deb	obj/kern/kernel.asm	/^f0103deb:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f0103df2	obj/kern/kernel.asm	/^f0103df2:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0103df5	obj/kern/kernel.asm	/^f0103df5:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0103df8	obj/kern/kernel.asm	/^f0103df8:	89 d8                	mov    %ebx,%eax$/;"	l
f0103dfa	obj/kern/kernel.asm	/^f0103dfa:	e8 64 fd ff ff       	call   f0103b63 <stab_binsearch>$/;"	l
f0103dff	obj/kern/kernel.asm	/^f0103dff:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0103e02	obj/kern/kernel.asm	/^f0103e02:	3b 5d d8             	cmp    -0x28(%ebp),%ebx$/;"	l
f0103e05	obj/kern/kernel.asm	/^f0103e05:	7f 23                	jg     f0103e2a <debuginfo_eip+0x1c5>$/;"	l
f0103e07	obj/kern/kernel.asm	/^f0103e07:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0103e0a	obj/kern/kernel.asm	/^f0103e0a:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0103e0d	obj/kern/kernel.asm	/^f0103e0d:	8d 04 87             	lea    (%edi,%eax,4),%eax$/;"	l
f0103e10	obj/kern/kernel.asm	/^f0103e10:	8b 10                	mov    (%eax),%edx$/;"	l
f0103e12	obj/kern/kernel.asm	/^f0103e12:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0103e15	obj/kern/kernel.asm	/^f0103e15:	2b 4d d0             	sub    -0x30(%ebp),%ecx$/;"	l
f0103e18	obj/kern/kernel.asm	/^f0103e18:	39 ca                	cmp    %ecx,%edx$/;"	l
f0103e1a	obj/kern/kernel.asm	/^f0103e1a:	73 06                	jae    f0103e22 <debuginfo_eip+0x1bd>$/;"	l
f0103e1c	obj/kern/kernel.asm	/^f0103e1c:	03 55 d0             	add    -0x30(%ebp),%edx$/;"	l
f0103e1f	obj/kern/kernel.asm	/^f0103e1f:	89 56 08             	mov    %edx,0x8(%esi)$/;"	l
f0103e22	obj/kern/kernel.asm	/^f0103e22:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0103e25	obj/kern/kernel.asm	/^f0103e25:	89 46 10             	mov    %eax,0x10(%esi)$/;"	l
f0103e28	obj/kern/kernel.asm	/^f0103e28:	eb 06                	jmp    f0103e30 <debuginfo_eip+0x1cb>$/;"	l
f0103e2a	obj/kern/kernel.asm	/^f0103e2a:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0103e2d	obj/kern/kernel.asm	/^f0103e2d:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0103e30	obj/kern/kernel.asm	/^f0103e30:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0103e37	obj/kern/kernel.asm	/^f0103e37:	00 $/;"	l
f0103e38	obj/kern/kernel.asm	/^f0103e38:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0103e3b	obj/kern/kernel.asm	/^f0103e3b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103e3e	obj/kern/kernel.asm	/^f0103e3e:	e8 d8 08 00 00       	call   f010471b <strfind>$/;"	l
f0103e43	obj/kern/kernel.asm	/^f0103e43:	2b 46 08             	sub    0x8(%esi),%eax$/;"	l
f0103e46	obj/kern/kernel.asm	/^f0103e46:	89 46 0c             	mov    %eax,0xc(%esi)$/;"	l
f0103e49	obj/kern/kernel.asm	/^f0103e49:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103e4c	obj/kern/kernel.asm	/^f0103e4c:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0103e4f	obj/kern/kernel.asm	/^f0103e4f:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0103e52	obj/kern/kernel.asm	/^f0103e52:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0103e55	obj/kern/kernel.asm	/^f0103e55:	eb 06                	jmp    f0103e5d <debuginfo_eip+0x1f8>$/;"	l
f0103e57	obj/kern/kernel.asm	/^f0103e57:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0103e5a	obj/kern/kernel.asm	/^f0103e5a:	83 e8 0c             	sub    $0xc,%eax$/;"	l
f0103e5d	obj/kern/kernel.asm	/^f0103e5d:	39 fb                	cmp    %edi,%ebx$/;"	l
f0103e5f	obj/kern/kernel.asm	/^f0103e5f:	7c 2c                	jl     f0103e8d <debuginfo_eip+0x228>$/;"	l
f0103e61	obj/kern/kernel.asm	/^f0103e61:	0f b6 50 04          	movzbl 0x4(%eax),%edx$/;"	l
f0103e65	obj/kern/kernel.asm	/^f0103e65:	80 fa 84             	cmp    $0x84,%dl$/;"	l
f0103e68	obj/kern/kernel.asm	/^f0103e68:	74 0b                	je     f0103e75 <debuginfo_eip+0x210>$/;"	l
f0103e6a	obj/kern/kernel.asm	/^f0103e6a:	80 fa 64             	cmp    $0x64,%dl$/;"	l
f0103e6d	obj/kern/kernel.asm	/^f0103e6d:	75 e8                	jne    f0103e57 <debuginfo_eip+0x1f2>$/;"	l
f0103e6f	obj/kern/kernel.asm	/^f0103e6f:	83 78 08 00          	cmpl   $0x0,0x8(%eax)$/;"	l
f0103e73	obj/kern/kernel.asm	/^f0103e73:	74 e2                	je     f0103e57 <debuginfo_eip+0x1f2>$/;"	l
f0103e75	obj/kern/kernel.asm	/^f0103e75:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0103e78	obj/kern/kernel.asm	/^f0103e78:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0103e7b	obj/kern/kernel.asm	/^f0103e7b:	8b 04 87             	mov    (%edi,%eax,4),%eax$/;"	l
f0103e7e	obj/kern/kernel.asm	/^f0103e7e:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0103e81	obj/kern/kernel.asm	/^f0103e81:	2b 55 d0             	sub    -0x30(%ebp),%edx$/;"	l
f0103e84	obj/kern/kernel.asm	/^f0103e84:	39 d0                	cmp    %edx,%eax$/;"	l
f0103e86	obj/kern/kernel.asm	/^f0103e86:	73 05                	jae    f0103e8d <debuginfo_eip+0x228>$/;"	l
f0103e88	obj/kern/kernel.asm	/^f0103e88:	03 45 d0             	add    -0x30(%ebp),%eax$/;"	l
f0103e8b	obj/kern/kernel.asm	/^f0103e8b:	89 06                	mov    %eax,(%esi)$/;"	l
f0103e8d	obj/kern/kernel.asm	/^f0103e8d:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0103e90	obj/kern/kernel.asm	/^f0103e90:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0103e93	obj/kern/kernel.asm	/^f0103e93:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103e98	obj/kern/kernel.asm	/^f0103e98:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a:	7d 58                	jge    f0103ef4 <debuginfo_eip+0x28f>$/;"	l
f0103e9c	obj/kern/kernel.asm	/^f0103e9c:	8d 53 01             	lea    0x1(%ebx),%edx$/;"	l
f0103e9f	obj/kern/kernel.asm	/^f0103e9f:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0103ea2	obj/kern/kernel.asm	/^f0103ea2:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0103ea5	obj/kern/kernel.asm	/^f0103ea5:	8d 04 87             	lea    (%edi,%eax,4),%eax$/;"	l
f0103ea8	obj/kern/kernel.asm	/^f0103ea8:	eb 07                	jmp    f0103eb1 <debuginfo_eip+0x24c>$/;"	l
f0103eaa	obj/kern/kernel.asm	/^f0103eaa:	83 46 14 01          	addl   $0x1,0x14(%esi)$/;"	l
f0103eae	obj/kern/kernel.asm	/^f0103eae:	83 c2 01             	add    $0x1,%edx$/;"	l
f0103eb1	obj/kern/kernel.asm	/^f0103eb1:	39 ca                	cmp    %ecx,%edx$/;"	l
f0103eb3	obj/kern/kernel.asm	/^f0103eb3:	74 3a                	je     f0103eef <debuginfo_eip+0x28a>$/;"	l
f0103eb5	obj/kern/kernel.asm	/^f0103eb5:	83 c0 0c             	add    $0xc,%eax$/;"	l
f0103eb8	obj/kern/kernel.asm	/^f0103eb8:	80 78 04 a0          	cmpb   $0xa0,0x4(%eax)$/;"	l
f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	74 ec                	je     f0103eaa <debuginfo_eip+0x245>$/;"	l
f0103ebe	obj/kern/kernel.asm	/^f0103ebe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103ec3	obj/kern/kernel.asm	/^f0103ec3:	eb 2f                	jmp    f0103ef4 <debuginfo_eip+0x28f>$/;"	l
f0103ec5	obj/kern/kernel.asm	/^f0103ec5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103eca	obj/kern/kernel.asm	/^f0103eca:	eb 28                	jmp    f0103ef4 <debuginfo_eip+0x28f>$/;"	l
f0103ecc	obj/kern/kernel.asm	/^f0103ecc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103ed1	obj/kern/kernel.asm	/^f0103ed1:	eb 21                	jmp    f0103ef4 <debuginfo_eip+0x28f>$/;"	l
f0103ed3	obj/kern/kernel.asm	/^f0103ed3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103ed8	obj/kern/kernel.asm	/^f0103ed8:	eb 1a                	jmp    f0103ef4 <debuginfo_eip+0x28f>$/;"	l
f0103eda	obj/kern/kernel.asm	/^f0103eda:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103edf	obj/kern/kernel.asm	/^f0103edf:	eb 13                	jmp    f0103ef4 <debuginfo_eip+0x28f>$/;"	l
f0103ee1	obj/kern/kernel.asm	/^f0103ee1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103ee6	obj/kern/kernel.asm	/^f0103ee6:	eb 0c                	jmp    f0103ef4 <debuginfo_eip+0x28f>$/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103eed	obj/kern/kernel.asm	/^f0103eed:	eb 05                	jmp    f0103ef4 <debuginfo_eip+0x28f>$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103ef4	obj/kern/kernel.asm	/^f0103ef4:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103ef7	obj/kern/kernel.asm	/^f0103ef7:	5b                   	pop    %ebx$/;"	l
f0103ef8	obj/kern/kernel.asm	/^f0103ef8:	5e                   	pop    %esi$/;"	l
f0103ef9	obj/kern/kernel.asm	/^f0103ef9:	5f                   	pop    %edi$/;"	l
f0103efa	obj/kern/kernel.asm	/^f0103efa:	5d                   	pop    %ebp$/;"	l
f0103efb	obj/kern/kernel.asm	/^f0103efb:	c3                   	ret    $/;"	l
f0103efc	obj/kern/kernel.asm	/^f0103efc:	66 90                	xchg   %ax,%ax$/;"	l
f0103efe	obj/kern/kernel.asm	/^f0103efe:	66 90                	xchg   %ax,%ax$/;"	l
f0103f00	obj/kern/kernel.asm	/^f0103f00 <printnum>:$/;"	l
f0103f00	obj/kern/kernel.asm	/^f0103f00:	55                   	push   %ebp$/;"	l
f0103f01	obj/kern/kernel.asm	/^f0103f01:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f03	obj/kern/kernel.asm	/^f0103f03:	57                   	push   %edi$/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04:	56                   	push   %esi$/;"	l
f0103f05	obj/kern/kernel.asm	/^f0103f05:	53                   	push   %ebx$/;"	l
f0103f06	obj/kern/kernel.asm	/^f0103f06:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0103f09	obj/kern/kernel.asm	/^f0103f09:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103f0c	obj/kern/kernel.asm	/^f0103f0c:	89 d7                	mov    %edx,%edi$/;"	l
f0103f0e	obj/kern/kernel.asm	/^f0103f0e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103f11	obj/kern/kernel.asm	/^f0103f11:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0103f14	obj/kern/kernel.asm	/^f0103f14:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	89 c3                	mov    %eax,%ebx$/;"	l
f0103f19	obj/kern/kernel.asm	/^f0103f19:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103f1c	obj/kern/kernel.asm	/^f0103f1c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103f1f	obj/kern/kernel.asm	/^f0103f1f:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0103f22	obj/kern/kernel.asm	/^f0103f22:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0103f27	obj/kern/kernel.asm	/^f0103f27:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103f2a	obj/kern/kernel.asm	/^f0103f2a:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0103f2d	obj/kern/kernel.asm	/^f0103f2d:	39 d9                	cmp    %ebx,%ecx$/;"	l
f0103f2f	obj/kern/kernel.asm	/^f0103f2f:	72 05                	jb     f0103f36 <printnum+0x36>$/;"	l
f0103f31	obj/kern/kernel.asm	/^f0103f31:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f0103f34	obj/kern/kernel.asm	/^f0103f34:	77 69                	ja     f0103f9f <printnum+0x9f>$/;"	l
f0103f36	obj/kern/kernel.asm	/^f0103f36:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0103f39	obj/kern/kernel.asm	/^f0103f39:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f0103f3d	obj/kern/kernel.asm	/^f0103f3d:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0103f40	obj/kern/kernel.asm	/^f0103f40:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103f44	obj/kern/kernel.asm	/^f0103f44:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103f48	obj/kern/kernel.asm	/^f0103f48:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0103f4c	obj/kern/kernel.asm	/^f0103f4c:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0103f50	obj/kern/kernel.asm	/^f0103f50:	89 c3                	mov    %eax,%ebx$/;"	l
f0103f52	obj/kern/kernel.asm	/^f0103f52:	89 d6                	mov    %edx,%esi$/;"	l
f0103f54	obj/kern/kernel.asm	/^f0103f54:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0103f57	obj/kern/kernel.asm	/^f0103f57:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0103f5a	obj/kern/kernel.asm	/^f0103f5a:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0103f5e	obj/kern/kernel.asm	/^f0103f5e:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0103f62	obj/kern/kernel.asm	/^f0103f62:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103f65	obj/kern/kernel.asm	/^f0103f65:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103f68	obj/kern/kernel.asm	/^f0103f68:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103f6b	obj/kern/kernel.asm	/^f0103f6b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103f6f	obj/kern/kernel.asm	/^f0103f6f:	e8 5c 12 00 00       	call   f01051d0 <__udivdi3>$/;"	l
f0103f74	obj/kern/kernel.asm	/^f0103f74:	89 d9                	mov    %ebx,%ecx$/;"	l
f0103f76	obj/kern/kernel.asm	/^f0103f76:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0103f7a	obj/kern/kernel.asm	/^f0103f7a:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103f7e	obj/kern/kernel.asm	/^f0103f7e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103f81	obj/kern/kernel.asm	/^f0103f81:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85:	89 fa                	mov    %edi,%edx$/;"	l
f0103f87	obj/kern/kernel.asm	/^f0103f87:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103f8a	obj/kern/kernel.asm	/^f0103f8a:	e8 71 ff ff ff       	call   f0103f00 <printnum>$/;"	l
f0103f8f	obj/kern/kernel.asm	/^f0103f8f:	eb 1b                	jmp    f0103fac <printnum+0xac>$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0103f95	obj/kern/kernel.asm	/^f0103f95:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0103f98	obj/kern/kernel.asm	/^f0103f98:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103f9b	obj/kern/kernel.asm	/^f0103f9b:	ff d3                	call   *%ebx$/;"	l
f0103f9d	obj/kern/kernel.asm	/^f0103f9d:	eb 03                	jmp    f0103fa2 <printnum+0xa2>$/;"	l
f0103f9f	obj/kern/kernel.asm	/^f0103f9f:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0103fa2	obj/kern/kernel.asm	/^f0103fa2:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0103fa5	obj/kern/kernel.asm	/^f0103fa5:	85 f6                	test   %esi,%esi$/;"	l
f0103fa7	obj/kern/kernel.asm	/^f0103fa7:	7f e8                	jg     f0103f91 <printnum+0x91>$/;"	l
f0103fa9	obj/kern/kernel.asm	/^f0103fa9:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0103fb0	obj/kern/kernel.asm	/^f0103fb0:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0103fb4	obj/kern/kernel.asm	/^f0103fb4:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103fb7	obj/kern/kernel.asm	/^f0103fb7:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103fba	obj/kern/kernel.asm	/^f0103fba:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103fbe	obj/kern/kernel.asm	/^f0103fbe:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103fc2	obj/kern/kernel.asm	/^f0103fc2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103fc5	obj/kern/kernel.asm	/^f0103fc5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103fc8	obj/kern/kernel.asm	/^f0103fc8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103fcf	obj/kern/kernel.asm	/^f0103fcf:	e8 2c 13 00 00       	call   f0105300 <__umoddi3>$/;"	l
f0103fd4	obj/kern/kernel.asm	/^f0103fd4:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0103fd8	obj/kern/kernel.asm	/^f0103fd8:	0f be 80 94 68 10 f0 	movsbl -0xfef976c(%eax),%eax$/;"	l
f0103fdf	obj/kern/kernel.asm	/^f0103fdf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103fe5	obj/kern/kernel.asm	/^f0103fe5:	ff d0                	call   *%eax$/;"	l
f0103fe7	obj/kern/kernel.asm	/^f0103fe7:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103fea	obj/kern/kernel.asm	/^f0103fea:	5b                   	pop    %ebx$/;"	l
f0103feb	obj/kern/kernel.asm	/^f0103feb:	5e                   	pop    %esi$/;"	l
f0103fec	obj/kern/kernel.asm	/^f0103fec:	5f                   	pop    %edi$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	5d                   	pop    %ebp$/;"	l
f0103fee	obj/kern/kernel.asm	/^f0103fee:	c3                   	ret    $/;"	l
f0103fef	obj/kern/kernel.asm	/^f0103fef <getuint>:$/;"	l
f0103fef	obj/kern/kernel.asm	/^f0103fef:	55                   	push   %ebp$/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ff2	obj/kern/kernel.asm	/^f0103ff2:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0103ff5	obj/kern/kernel.asm	/^f0103ff5:	7e 0e                	jle    f0104005 <getuint+0x16>$/;"	l
f0103ff7	obj/kern/kernel.asm	/^f0103ff7:	8b 10                	mov    (%eax),%edx$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0103ffc	obj/kern/kernel.asm	/^f0103ffc:	89 08                	mov    %ecx,(%eax)$/;"	l
f0103ffe	obj/kern/kernel.asm	/^f0103ffe:	8b 02                	mov    (%edx),%eax$/;"	l
f0104000	obj/kern/kernel.asm	/^f0104000:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0104003	obj/kern/kernel.asm	/^f0104003:	eb 22                	jmp    f0104027 <getuint+0x38>$/;"	l
f0104005	obj/kern/kernel.asm	/^f0104005:	85 d2                	test   %edx,%edx$/;"	l
f0104007	obj/kern/kernel.asm	/^f0104007:	74 10                	je     f0104019 <getuint+0x2a>$/;"	l
f0104009	obj/kern/kernel.asm	/^f0104009:	8b 10                	mov    (%eax),%edx$/;"	l
f010400b	obj/kern/kernel.asm	/^f010400b:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f010400e	obj/kern/kernel.asm	/^f010400e:	89 08                	mov    %ecx,(%eax)$/;"	l
f0104010	obj/kern/kernel.asm	/^f0104010:	8b 02                	mov    (%edx),%eax$/;"	l
f0104012	obj/kern/kernel.asm	/^f0104012:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104017	obj/kern/kernel.asm	/^f0104017:	eb 0e                	jmp    f0104027 <getuint+0x38>$/;"	l
f0104019	obj/kern/kernel.asm	/^f0104019:	8b 10                	mov    (%eax),%edx$/;"	l
f010401b	obj/kern/kernel.asm	/^f010401b:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f010401e	obj/kern/kernel.asm	/^f010401e:	89 08                	mov    %ecx,(%eax)$/;"	l
f0104020	obj/kern/kernel.asm	/^f0104020:	8b 02                	mov    (%edx),%eax$/;"	l
f0104022	obj/kern/kernel.asm	/^f0104022:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104027	obj/kern/kernel.asm	/^f0104027:	5d                   	pop    %ebp$/;"	l
f0104028	obj/kern/kernel.asm	/^f0104028:	c3                   	ret    $/;"	l
f0104029	obj/kern/kernel.asm	/^f0104029 <sprintputch>:$/;"	l
f0104029	obj/kern/kernel.asm	/^f0104029:	55                   	push   %ebp$/;"	l
f010402a	obj/kern/kernel.asm	/^f010402a:	89 e5                	mov    %esp,%ebp$/;"	l
f010402c	obj/kern/kernel.asm	/^f010402c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010402f	obj/kern/kernel.asm	/^f010402f:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0104033	obj/kern/kernel.asm	/^f0104033:	8b 10                	mov    (%eax),%edx$/;"	l
f0104035	obj/kern/kernel.asm	/^f0104035:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0104038	obj/kern/kernel.asm	/^f0104038:	73 0a                	jae    f0104044 <sprintputch+0x1b>$/;"	l
f010403a	obj/kern/kernel.asm	/^f010403a:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f010403d	obj/kern/kernel.asm	/^f010403d:	89 08                	mov    %ecx,(%eax)$/;"	l
f010403f	obj/kern/kernel.asm	/^f010403f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104042	obj/kern/kernel.asm	/^f0104042:	88 02                	mov    %al,(%edx)$/;"	l
f0104044	obj/kern/kernel.asm	/^f0104044:	5d                   	pop    %ebp$/;"	l
f0104045	obj/kern/kernel.asm	/^f0104045:	c3                   	ret    $/;"	l
f0104046	obj/kern/kernel.asm	/^f0104046 <printfmt>:$/;"	l
f0104046	obj/kern/kernel.asm	/^f0104046:	55                   	push   %ebp$/;"	l
f0104047	obj/kern/kernel.asm	/^f0104047:	89 e5                	mov    %esp,%ebp$/;"	l
f0104049	obj/kern/kernel.asm	/^f0104049:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010404c	obj/kern/kernel.asm	/^f010404c:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010404f	obj/kern/kernel.asm	/^f010404f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104053	obj/kern/kernel.asm	/^f0104053:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104056	obj/kern/kernel.asm	/^f0104056:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010405a	obj/kern/kernel.asm	/^f010405a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010405d	obj/kern/kernel.asm	/^f010405d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104061	obj/kern/kernel.asm	/^f0104061:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104064	obj/kern/kernel.asm	/^f0104064:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104067	obj/kern/kernel.asm	/^f0104067:	e8 02 00 00 00       	call   f010406e <vprintfmt>$/;"	l
f010406c	obj/kern/kernel.asm	/^f010406c:	c9                   	leave  $/;"	l
f010406d	obj/kern/kernel.asm	/^f010406d:	c3                   	ret    $/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e <vprintfmt>:$/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	55                   	push   %ebp$/;"	l
f010406f	obj/kern/kernel.asm	/^f010406f:	89 e5                	mov    %esp,%ebp$/;"	l
f0104071	obj/kern/kernel.asm	/^f0104071:	57                   	push   %edi$/;"	l
f0104072	obj/kern/kernel.asm	/^f0104072:	56                   	push   %esi$/;"	l
f0104073	obj/kern/kernel.asm	/^f0104073:	53                   	push   %ebx$/;"	l
f0104074	obj/kern/kernel.asm	/^f0104074:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0104077	obj/kern/kernel.asm	/^f0104077:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f010407a	obj/kern/kernel.asm	/^f010407a:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010407d	obj/kern/kernel.asm	/^f010407d:	eb 14                	jmp    f0104093 <vprintfmt+0x25>$/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	85 c0                	test   %eax,%eax$/;"	l
f0104081	obj/kern/kernel.asm	/^f0104081:	0f 84 c7 03 00 00    	je     f010444e <vprintfmt+0x3e0>$/;"	l
f0104087	obj/kern/kernel.asm	/^f0104087:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010408b	obj/kern/kernel.asm	/^f010408b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010408e	obj/kern/kernel.asm	/^f010408e:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104091	obj/kern/kernel.asm	/^f0104091:	89 f3                	mov    %esi,%ebx$/;"	l
f0104093	obj/kern/kernel.asm	/^f0104093:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f0104096	obj/kern/kernel.asm	/^f0104096:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0104099	obj/kern/kernel.asm	/^f0104099:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f010409c	obj/kern/kernel.asm	/^f010409c:	75 e1                	jne    f010407f <vprintfmt+0x11>$/;"	l
f010409e	obj/kern/kernel.asm	/^f010409e:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f01040a2	obj/kern/kernel.asm	/^f01040a2:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01040a9	obj/kern/kernel.asm	/^f01040a9:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f01040b0	obj/kern/kernel.asm	/^f01040b0:	c7 45 dc ff ff ff ff 	movl   $0xffffffff,-0x24(%ebp)$/;"	l
f01040b7	obj/kern/kernel.asm	/^f01040b7:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f01040be	obj/kern/kernel.asm	/^f01040be:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01040c3	obj/kern/kernel.asm	/^f01040c3:	eb 1d                	jmp    f01040e2 <vprintfmt+0x74>$/;"	l
f01040c5	obj/kern/kernel.asm	/^f01040c5:	89 de                	mov    %ebx,%esi$/;"	l
f01040c7	obj/kern/kernel.asm	/^f01040c7:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f01040cb	obj/kern/kernel.asm	/^f01040cb:	eb 15                	jmp    f01040e2 <vprintfmt+0x74>$/;"	l
f01040cd	obj/kern/kernel.asm	/^f01040cd:	89 de                	mov    %ebx,%esi$/;"	l
f01040cf	obj/kern/kernel.asm	/^f01040cf:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f01040d3	obj/kern/kernel.asm	/^f01040d3:	eb 0d                	jmp    f01040e2 <vprintfmt+0x74>$/;"	l
f01040d5	obj/kern/kernel.asm	/^f01040d5:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01040d8	obj/kern/kernel.asm	/^f01040d8:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01040db	obj/kern/kernel.asm	/^f01040db:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f01040e2	obj/kern/kernel.asm	/^f01040e2:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f01040e5	obj/kern/kernel.asm	/^f01040e5:	0f b6 16             	movzbl (%esi),%edx$/;"	l
f01040e8	obj/kern/kernel.asm	/^f01040e8:	0f b6 c2             	movzbl %dl,%eax$/;"	l
f01040eb	obj/kern/kernel.asm	/^f01040eb:	83 ea 23             	sub    $0x23,%edx$/;"	l
f01040ee	obj/kern/kernel.asm	/^f01040ee:	80 fa 55             	cmp    $0x55,%dl$/;"	l
f01040f1	obj/kern/kernel.asm	/^f01040f1:	0f 87 37 03 00 00    	ja     f010442e <vprintfmt+0x3c0>$/;"	l
f01040f7	obj/kern/kernel.asm	/^f01040f7:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01040fa	obj/kern/kernel.asm	/^f01040fa:	ff 24 95 60 69 10 f0 	jmp    *-0xfef96a0(,%edx,4)$/;"	l
f0104101	obj/kern/kernel.asm	/^f0104101:	89 de                	mov    %ebx,%esi$/;"	l
f0104103	obj/kern/kernel.asm	/^f0104103:	89 ca                	mov    %ecx,%edx$/;"	l
f0104105	obj/kern/kernel.asm	/^f0104105:	8d 14 92             	lea    (%edx,%edx,4),%edx$/;"	l
f0104108	obj/kern/kernel.asm	/^f0104108:	8d 54 50 d0          	lea    -0x30(%eax,%edx,2),%edx$/;"	l
f010410c	obj/kern/kernel.asm	/^f010410c:	0f be 06             	movsbl (%esi),%eax$/;"	l
f010410f	obj/kern/kernel.asm	/^f010410f:	8d 58 d0             	lea    -0x30(%eax),%ebx$/;"	l
f0104112	obj/kern/kernel.asm	/^f0104112:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0104115	obj/kern/kernel.asm	/^f0104115:	77 31                	ja     f0104148 <vprintfmt+0xda>$/;"	l
f0104117	obj/kern/kernel.asm	/^f0104117:	83 c6 01             	add    $0x1,%esi$/;"	l
f010411a	obj/kern/kernel.asm	/^f010411a:	eb e9                	jmp    f0104105 <vprintfmt+0x97>$/;"	l
f010411c	obj/kern/kernel.asm	/^f010411c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010411f	obj/kern/kernel.asm	/^f010411f:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104122	obj/kern/kernel.asm	/^f0104122:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104125	obj/kern/kernel.asm	/^f0104125:	8b 00                	mov    (%eax),%eax$/;"	l
f0104127	obj/kern/kernel.asm	/^f0104127:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010412a	obj/kern/kernel.asm	/^f010412a:	89 de                	mov    %ebx,%esi$/;"	l
f010412c	obj/kern/kernel.asm	/^f010412c:	eb 1d                	jmp    f010414b <vprintfmt+0xdd>$/;"	l
f010412e	obj/kern/kernel.asm	/^f010412e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104131	obj/kern/kernel.asm	/^f0104131:	85 c0                	test   %eax,%eax$/;"	l
f0104133	obj/kern/kernel.asm	/^f0104133:	0f 48 c1             	cmovs  %ecx,%eax$/;"	l
f0104136	obj/kern/kernel.asm	/^f0104136:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104139	obj/kern/kernel.asm	/^f0104139:	89 de                	mov    %ebx,%esi$/;"	l
f010413b	obj/kern/kernel.asm	/^f010413b:	eb a5                	jmp    f01040e2 <vprintfmt+0x74>$/;"	l
f010413d	obj/kern/kernel.asm	/^f010413d:	89 de                	mov    %ebx,%esi$/;"	l
f010413f	obj/kern/kernel.asm	/^f010413f:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)$/;"	l
f0104146	obj/kern/kernel.asm	/^f0104146:	eb 9a                	jmp    f01040e2 <vprintfmt+0x74>$/;"	l
f0104148	obj/kern/kernel.asm	/^f0104148:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f010414b	obj/kern/kernel.asm	/^f010414b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f010414f	obj/kern/kernel.asm	/^f010414f:	79 91                	jns    f01040e2 <vprintfmt+0x74>$/;"	l
f0104151	obj/kern/kernel.asm	/^f0104151:	eb 82                	jmp    f01040d5 <vprintfmt+0x67>$/;"	l
f0104153	obj/kern/kernel.asm	/^f0104153:	83 45 d4 01          	addl   $0x1,-0x2c(%ebp)$/;"	l
f0104157	obj/kern/kernel.asm	/^f0104157:	89 de                	mov    %ebx,%esi$/;"	l
f0104159	obj/kern/kernel.asm	/^f0104159:	eb 87                	jmp    f01040e2 <vprintfmt+0x74>$/;"	l
f010415b	obj/kern/kernel.asm	/^f010415b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010415e	obj/kern/kernel.asm	/^f010415e:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104161	obj/kern/kernel.asm	/^f0104161:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104164	obj/kern/kernel.asm	/^f0104164:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168:	8b 00                	mov    (%eax),%eax$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010416d	obj/kern/kernel.asm	/^f010416d:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104170	obj/kern/kernel.asm	/^f0104170:	e9 1e ff ff ff       	jmp    f0104093 <vprintfmt+0x25>$/;"	l
f0104175	obj/kern/kernel.asm	/^f0104175:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104178	obj/kern/kernel.asm	/^f0104178:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010417b	obj/kern/kernel.asm	/^f010417b:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010417e	obj/kern/kernel.asm	/^f010417e:	8b 00                	mov    (%eax),%eax$/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180:	99                   	cltd   $/;"	l
f0104181	obj/kern/kernel.asm	/^f0104181:	31 d0                	xor    %edx,%eax$/;"	l
f0104183	obj/kern/kernel.asm	/^f0104183:	29 d0                	sub    %edx,%eax$/;"	l
f0104185	obj/kern/kernel.asm	/^f0104185:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0104188	obj/kern/kernel.asm	/^f0104188:	7f 0b                	jg     f0104195 <vprintfmt+0x127>$/;"	l
f010418a	obj/kern/kernel.asm	/^f010418a:	8b 14 85 c0 6a 10 f0 	mov    -0xfef9540(,%eax,4),%edx$/;"	l
f0104191	obj/kern/kernel.asm	/^f0104191:	85 d2                	test   %edx,%edx$/;"	l
f0104193	obj/kern/kernel.asm	/^f0104193:	75 20                	jne    f01041b5 <vprintfmt+0x147>$/;"	l
f0104195	obj/kern/kernel.asm	/^f0104195:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104199	obj/kern/kernel.asm	/^f0104199:	c7 44 24 08 ac 68 10 	movl   $0xf01068ac,0x8(%esp)$/;"	l
f01041a0	obj/kern/kernel.asm	/^f01041a0:	f0 $/;"	l
f01041a1	obj/kern/kernel.asm	/^f01041a1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01041a5	obj/kern/kernel.asm	/^f01041a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01041a8	obj/kern/kernel.asm	/^f01041a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01041ab	obj/kern/kernel.asm	/^f01041ab:	e8 96 fe ff ff       	call   f0104046 <printfmt>$/;"	l
f01041b0	obj/kern/kernel.asm	/^f01041b0:	e9 de fe ff ff       	jmp    f0104093 <vprintfmt+0x25>$/;"	l
f01041b5	obj/kern/kernel.asm	/^f01041b5:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01041b9	obj/kern/kernel.asm	/^f01041b9:	c7 44 24 08 e7 5f 10 	movl   $0xf0105fe7,0x8(%esp)$/;"	l
f01041c0	obj/kern/kernel.asm	/^f01041c0:	f0 $/;"	l
f01041c1	obj/kern/kernel.asm	/^f01041c1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01041c5	obj/kern/kernel.asm	/^f01041c5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01041c8	obj/kern/kernel.asm	/^f01041c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01041cb	obj/kern/kernel.asm	/^f01041cb:	e8 76 fe ff ff       	call   f0104046 <printfmt>$/;"	l
f01041d0	obj/kern/kernel.asm	/^f01041d0:	e9 be fe ff ff       	jmp    f0104093 <vprintfmt+0x25>$/;"	l
f01041d5	obj/kern/kernel.asm	/^f01041d5:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f01041d8	obj/kern/kernel.asm	/^f01041d8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01041db	obj/kern/kernel.asm	/^f01041db:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01041de	obj/kern/kernel.asm	/^f01041de:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01041e1	obj/kern/kernel.asm	/^f01041e1:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01041e4	obj/kern/kernel.asm	/^f01041e4:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01041e7	obj/kern/kernel.asm	/^f01041e7:	8b 30                	mov    (%eax),%esi$/;"	l
f01041e9	obj/kern/kernel.asm	/^f01041e9:	85 f6                	test   %esi,%esi$/;"	l
f01041eb	obj/kern/kernel.asm	/^f01041eb:	b8 a5 68 10 f0       	mov    $0xf01068a5,%eax$/;"	l
f01041f0	obj/kern/kernel.asm	/^f01041f0:	0f 44 f0             	cmove  %eax,%esi$/;"	l
f01041f3	obj/kern/kernel.asm	/^f01041f3:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f01041f7	obj/kern/kernel.asm	/^f01041f7:	0f 84 97 00 00 00    	je     f0104294 <vprintfmt+0x226>$/;"	l
f01041fd	obj/kern/kernel.asm	/^f01041fd:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f0104201	obj/kern/kernel.asm	/^f0104201:	0f 8e 9b 00 00 00    	jle    f01042a2 <vprintfmt+0x234>$/;"	l
f0104207	obj/kern/kernel.asm	/^f0104207:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f010420b	obj/kern/kernel.asm	/^f010420b:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010420e	obj/kern/kernel.asm	/^f010420e:	e8 b5 03 00 00       	call   f01045c8 <strnlen>$/;"	l
f0104213	obj/kern/kernel.asm	/^f0104213:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0104216	obj/kern/kernel.asm	/^f0104216:	29 c1                	sub    %eax,%ecx$/;"	l
f0104218	obj/kern/kernel.asm	/^f0104218:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f010421b	obj/kern/kernel.asm	/^f010421b:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f010421f	obj/kern/kernel.asm	/^f010421f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104222	obj/kern/kernel.asm	/^f0104222:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f0104225	obj/kern/kernel.asm	/^f0104225:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104228	obj/kern/kernel.asm	/^f0104228:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f010422b	obj/kern/kernel.asm	/^f010422b:	89 cb                	mov    %ecx,%ebx$/;"	l
f010422d	obj/kern/kernel.asm	/^f010422d:	eb 0f                	jmp    f010423e <vprintfmt+0x1d0>$/;"	l
f010422f	obj/kern/kernel.asm	/^f010422f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104233	obj/kern/kernel.asm	/^f0104233:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104236	obj/kern/kernel.asm	/^f0104236:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104239	obj/kern/kernel.asm	/^f0104239:	ff d6                	call   *%esi$/;"	l
f010423b	obj/kern/kernel.asm	/^f010423b:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e:	85 db                	test   %ebx,%ebx$/;"	l
f0104240	obj/kern/kernel.asm	/^f0104240:	7f ed                	jg     f010422f <vprintfmt+0x1c1>$/;"	l
f0104242	obj/kern/kernel.asm	/^f0104242:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0104245	obj/kern/kernel.asm	/^f0104245:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0104248	obj/kern/kernel.asm	/^f0104248:	85 c9                	test   %ecx,%ecx$/;"	l
f010424a	obj/kern/kernel.asm	/^f010424a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010424f	obj/kern/kernel.asm	/^f010424f:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0104252	obj/kern/kernel.asm	/^f0104252:	29 c1                	sub    %eax,%ecx$/;"	l
f0104254	obj/kern/kernel.asm	/^f0104254:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0104257	obj/kern/kernel.asm	/^f0104257:	89 cf                	mov    %ecx,%edi$/;"	l
f0104259	obj/kern/kernel.asm	/^f0104259:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f010425c	obj/kern/kernel.asm	/^f010425c:	eb 50                	jmp    f01042ae <vprintfmt+0x240>$/;"	l
f010425e	obj/kern/kernel.asm	/^f010425e:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0104262	obj/kern/kernel.asm	/^f0104262:	74 1e                	je     f0104282 <vprintfmt+0x214>$/;"	l
f0104264	obj/kern/kernel.asm	/^f0104264:	0f be d2             	movsbl %dl,%edx$/;"	l
f0104267	obj/kern/kernel.asm	/^f0104267:	83 ea 20             	sub    $0x20,%edx$/;"	l
f010426a	obj/kern/kernel.asm	/^f010426a:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f010426d	obj/kern/kernel.asm	/^f010426d:	76 13                	jbe    f0104282 <vprintfmt+0x214>$/;"	l
f010426f	obj/kern/kernel.asm	/^f010426f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104272	obj/kern/kernel.asm	/^f0104272:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104276	obj/kern/kernel.asm	/^f0104276:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f010427d	obj/kern/kernel.asm	/^f010427d:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104280	obj/kern/kernel.asm	/^f0104280:	eb 0d                	jmp    f010428f <vprintfmt+0x221>$/;"	l
f0104282	obj/kern/kernel.asm	/^f0104282:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0104285	obj/kern/kernel.asm	/^f0104285:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0104289	obj/kern/kernel.asm	/^f0104289:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010428c	obj/kern/kernel.asm	/^f010428c:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010428f	obj/kern/kernel.asm	/^f010428f:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0104292	obj/kern/kernel.asm	/^f0104292:	eb 1a                	jmp    f01042ae <vprintfmt+0x240>$/;"	l
f0104294	obj/kern/kernel.asm	/^f0104294:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0104297	obj/kern/kernel.asm	/^f0104297:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f010429a	obj/kern/kernel.asm	/^f010429a:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f010429d	obj/kern/kernel.asm	/^f010429d:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f01042a0	obj/kern/kernel.asm	/^f01042a0:	eb 0c                	jmp    f01042ae <vprintfmt+0x240>$/;"	l
f01042a2	obj/kern/kernel.asm	/^f01042a2:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f01042a5	obj/kern/kernel.asm	/^f01042a5:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f01042a8	obj/kern/kernel.asm	/^f01042a8:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f01042ab	obj/kern/kernel.asm	/^f01042ab:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f01042ae	obj/kern/kernel.asm	/^f01042ae:	83 c6 01             	add    $0x1,%esi$/;"	l
f01042b1	obj/kern/kernel.asm	/^f01042b1:	0f b6 56 ff          	movzbl -0x1(%esi),%edx$/;"	l
f01042b5	obj/kern/kernel.asm	/^f01042b5:	0f be c2             	movsbl %dl,%eax$/;"	l
f01042b8	obj/kern/kernel.asm	/^f01042b8:	85 c0                	test   %eax,%eax$/;"	l
f01042ba	obj/kern/kernel.asm	/^f01042ba:	74 27                	je     f01042e3 <vprintfmt+0x275>$/;"	l
f01042bc	obj/kern/kernel.asm	/^f01042bc:	85 db                	test   %ebx,%ebx$/;"	l
f01042be	obj/kern/kernel.asm	/^f01042be:	78 9e                	js     f010425e <vprintfmt+0x1f0>$/;"	l
f01042c0	obj/kern/kernel.asm	/^f01042c0:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01042c3	obj/kern/kernel.asm	/^f01042c3:	79 99                	jns    f010425e <vprintfmt+0x1f0>$/;"	l
f01042c5	obj/kern/kernel.asm	/^f01042c5:	89 f8                	mov    %edi,%eax$/;"	l
f01042c7	obj/kern/kernel.asm	/^f01042c7:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01042ca	obj/kern/kernel.asm	/^f01042ca:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01042cd	obj/kern/kernel.asm	/^f01042cd:	89 c3                	mov    %eax,%ebx$/;"	l
f01042cf	obj/kern/kernel.asm	/^f01042cf:	eb 1a                	jmp    f01042eb <vprintfmt+0x27d>$/;"	l
f01042d1	obj/kern/kernel.asm	/^f01042d1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01042d5	obj/kern/kernel.asm	/^f01042d5:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f01042dc	obj/kern/kernel.asm	/^f01042dc:	ff d6                	call   *%esi$/;"	l
f01042de	obj/kern/kernel.asm	/^f01042de:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01042e1	obj/kern/kernel.asm	/^f01042e1:	eb 08                	jmp    f01042eb <vprintfmt+0x27d>$/;"	l
f01042e3	obj/kern/kernel.asm	/^f01042e3:	89 fb                	mov    %edi,%ebx$/;"	l
f01042e5	obj/kern/kernel.asm	/^f01042e5:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01042e8	obj/kern/kernel.asm	/^f01042e8:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01042eb	obj/kern/kernel.asm	/^f01042eb:	85 db                	test   %ebx,%ebx$/;"	l
f01042ed	obj/kern/kernel.asm	/^f01042ed:	7f e2                	jg     f01042d1 <vprintfmt+0x263>$/;"	l
f01042ef	obj/kern/kernel.asm	/^f01042ef:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f01042f2	obj/kern/kernel.asm	/^f01042f2:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01042f5	obj/kern/kernel.asm	/^f01042f5:	e9 99 fd ff ff       	jmp    f0104093 <vprintfmt+0x25>$/;"	l
f01042fa	obj/kern/kernel.asm	/^f01042fa:	83 7d d4 01          	cmpl   $0x1,-0x2c(%ebp)$/;"	l
f01042fe	obj/kern/kernel.asm	/^f01042fe:	7e 16                	jle    f0104316 <vprintfmt+0x2a8>$/;"	l
f0104300	obj/kern/kernel.asm	/^f0104300:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104303	obj/kern/kernel.asm	/^f0104303:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0104306	obj/kern/kernel.asm	/^f0104306:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104309	obj/kern/kernel.asm	/^f0104309:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f010430c	obj/kern/kernel.asm	/^f010430c:	8b 00                	mov    (%eax),%eax$/;"	l
f010430e	obj/kern/kernel.asm	/^f010430e:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104311	obj/kern/kernel.asm	/^f0104311:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104314	obj/kern/kernel.asm	/^f0104314:	eb 34                	jmp    f010434a <vprintfmt+0x2dc>$/;"	l
f0104316	obj/kern/kernel.asm	/^f0104316:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f010431a	obj/kern/kernel.asm	/^f010431a:	74 18                	je     f0104334 <vprintfmt+0x2c6>$/;"	l
f010431c	obj/kern/kernel.asm	/^f010431c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010431f	obj/kern/kernel.asm	/^f010431f:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104322	obj/kern/kernel.asm	/^f0104322:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104325	obj/kern/kernel.asm	/^f0104325:	8b 30                	mov    (%eax),%esi$/;"	l
f0104327	obj/kern/kernel.asm	/^f0104327:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f010432a	obj/kern/kernel.asm	/^f010432a:	89 f0                	mov    %esi,%eax$/;"	l
f010432c	obj/kern/kernel.asm	/^f010432c:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f010432f	obj/kern/kernel.asm	/^f010432f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104332	obj/kern/kernel.asm	/^f0104332:	eb 16                	jmp    f010434a <vprintfmt+0x2dc>$/;"	l
f0104334	obj/kern/kernel.asm	/^f0104334:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104337	obj/kern/kernel.asm	/^f0104337:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010433a	obj/kern/kernel.asm	/^f010433a:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010433d	obj/kern/kernel.asm	/^f010433d:	8b 30                	mov    (%eax),%esi$/;"	l
f010433f	obj/kern/kernel.asm	/^f010433f:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0104342	obj/kern/kernel.asm	/^f0104342:	89 f0                	mov    %esi,%eax$/;"	l
f0104344	obj/kern/kernel.asm	/^f0104344:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0104347	obj/kern/kernel.asm	/^f0104347:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010434a	obj/kern/kernel.asm	/^f010434a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010434d	obj/kern/kernel.asm	/^f010434d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104350	obj/kern/kernel.asm	/^f0104350:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0104355	obj/kern/kernel.asm	/^f0104355:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0104359	obj/kern/kernel.asm	/^f0104359:	0f 89 97 00 00 00    	jns    f01043f6 <vprintfmt+0x388>$/;"	l
f010435f	obj/kern/kernel.asm	/^f010435f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104363	obj/kern/kernel.asm	/^f0104363:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f010436a	obj/kern/kernel.asm	/^f010436a:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010436d	obj/kern/kernel.asm	/^f010436d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104370	obj/kern/kernel.asm	/^f0104370:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104373	obj/kern/kernel.asm	/^f0104373:	f7 d8                	neg    %eax$/;"	l
f0104375	obj/kern/kernel.asm	/^f0104375:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0104378	obj/kern/kernel.asm	/^f0104378:	f7 da                	neg    %edx$/;"	l
f010437a	obj/kern/kernel.asm	/^f010437a:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f010437f	obj/kern/kernel.asm	/^f010437f:	eb 75                	jmp    f01043f6 <vprintfmt+0x388>$/;"	l
f0104381	obj/kern/kernel.asm	/^f0104381:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0104384	obj/kern/kernel.asm	/^f0104384:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0104387	obj/kern/kernel.asm	/^f0104387:	e8 63 fc ff ff       	call   f0103fef <getuint>$/;"	l
f010438c	obj/kern/kernel.asm	/^f010438c:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0104391	obj/kern/kernel.asm	/^f0104391:	eb 63                	jmp    f01043f6 <vprintfmt+0x388>$/;"	l
f0104393	obj/kern/kernel.asm	/^f0104393:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104397	obj/kern/kernel.asm	/^f0104397:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f010439e	obj/kern/kernel.asm	/^f010439e:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01043a1	obj/kern/kernel.asm	/^f01043a1:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01043a4	obj/kern/kernel.asm	/^f01043a4:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01043a7	obj/kern/kernel.asm	/^f01043a7:	e8 43 fc ff ff       	call   f0103fef <getuint>$/;"	l
f01043ac	obj/kern/kernel.asm	/^f01043ac:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f01043b1	obj/kern/kernel.asm	/^f01043b1:	eb 43                	jmp    f01043f6 <vprintfmt+0x388>$/;"	l
f01043b3	obj/kern/kernel.asm	/^f01043b3:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01043b7	obj/kern/kernel.asm	/^f01043b7:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f01043be	obj/kern/kernel.asm	/^f01043be:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01043c5	obj/kern/kernel.asm	/^f01043c5:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f01043cc	obj/kern/kernel.asm	/^f01043cc:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01043cf	obj/kern/kernel.asm	/^f01043cf:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01043d2	obj/kern/kernel.asm	/^f01043d2:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01043d5	obj/kern/kernel.asm	/^f01043d5:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01043d8	obj/kern/kernel.asm	/^f01043d8:	8b 00                	mov    (%eax),%eax$/;"	l
f01043da	obj/kern/kernel.asm	/^f01043da:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01043df	obj/kern/kernel.asm	/^f01043df:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f01043e4	obj/kern/kernel.asm	/^f01043e4:	eb 10                	jmp    f01043f6 <vprintfmt+0x388>$/;"	l
f01043e6	obj/kern/kernel.asm	/^f01043e6:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01043e9	obj/kern/kernel.asm	/^f01043e9:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01043ec	obj/kern/kernel.asm	/^f01043ec:	e8 fe fb ff ff       	call   f0103fef <getuint>$/;"	l
f01043f1	obj/kern/kernel.asm	/^f01043f1:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f01043f6	obj/kern/kernel.asm	/^f01043f6:	0f be 75 d8          	movsbl -0x28(%ebp),%esi$/;"	l
f01043fa	obj/kern/kernel.asm	/^f01043fa:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f01043fe	obj/kern/kernel.asm	/^f01043fe:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f0104401	obj/kern/kernel.asm	/^f0104401:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0104405	obj/kern/kernel.asm	/^f0104405:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0104409	obj/kern/kernel.asm	/^f0104409:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010440c	obj/kern/kernel.asm	/^f010440c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104410	obj/kern/kernel.asm	/^f0104410:	89 fa                	mov    %edi,%edx$/;"	l
f0104412	obj/kern/kernel.asm	/^f0104412:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104415	obj/kern/kernel.asm	/^f0104415:	e8 e6 fa ff ff       	call   f0103f00 <printnum>$/;"	l
f010441a	obj/kern/kernel.asm	/^f010441a:	e9 74 fc ff ff       	jmp    f0104093 <vprintfmt+0x25>$/;"	l
f010441f	obj/kern/kernel.asm	/^f010441f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104423	obj/kern/kernel.asm	/^f0104423:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104426	obj/kern/kernel.asm	/^f0104426:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104429	obj/kern/kernel.asm	/^f0104429:	e9 65 fc ff ff       	jmp    f0104093 <vprintfmt+0x25>$/;"	l
f010442e	obj/kern/kernel.asm	/^f010442e:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104432	obj/kern/kernel.asm	/^f0104432:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c:	89 f3                	mov    %esi,%ebx$/;"	l
f010443e	obj/kern/kernel.asm	/^f010443e:	eb 03                	jmp    f0104443 <vprintfmt+0x3d5>$/;"	l
f0104440	obj/kern/kernel.asm	/^f0104440:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104443	obj/kern/kernel.asm	/^f0104443:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f0104447	obj/kern/kernel.asm	/^f0104447:	75 f7                	jne    f0104440 <vprintfmt+0x3d2>$/;"	l
f0104449	obj/kern/kernel.asm	/^f0104449:	e9 45 fc ff ff       	jmp    f0104093 <vprintfmt+0x25>$/;"	l
f010444e	obj/kern/kernel.asm	/^f010444e:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0104451	obj/kern/kernel.asm	/^f0104451:	5b                   	pop    %ebx$/;"	l
f0104452	obj/kern/kernel.asm	/^f0104452:	5e                   	pop    %esi$/;"	l
f0104453	obj/kern/kernel.asm	/^f0104453:	5f                   	pop    %edi$/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	5d                   	pop    %ebp$/;"	l
f0104455	obj/kern/kernel.asm	/^f0104455:	c3                   	ret    $/;"	l
f0104456	obj/kern/kernel.asm	/^f0104456 <vsnprintf>:$/;"	l
f0104456	obj/kern/kernel.asm	/^f0104456:	55                   	push   %ebp$/;"	l
f0104457	obj/kern/kernel.asm	/^f0104457:	89 e5                	mov    %esp,%ebp$/;"	l
f0104459	obj/kern/kernel.asm	/^f0104459:	83 ec 28             	sub    $0x28,%esp$/;"	l
f010445c	obj/kern/kernel.asm	/^f010445c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010445f	obj/kern/kernel.asm	/^f010445f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104462	obj/kern/kernel.asm	/^f0104462:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104465	obj/kern/kernel.asm	/^f0104465:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0104469	obj/kern/kernel.asm	/^f0104469:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f010446c	obj/kern/kernel.asm	/^f010446c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104473	obj/kern/kernel.asm	/^f0104473:	85 c0                	test   %eax,%eax$/;"	l
f0104475	obj/kern/kernel.asm	/^f0104475:	74 30                	je     f01044a7 <vsnprintf+0x51>$/;"	l
f0104477	obj/kern/kernel.asm	/^f0104477:	85 d2                	test   %edx,%edx$/;"	l
f0104479	obj/kern/kernel.asm	/^f0104479:	7e 2c                	jle    f01044a7 <vsnprintf+0x51>$/;"	l
f010447b	obj/kern/kernel.asm	/^f010447b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010447e	obj/kern/kernel.asm	/^f010447e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104482	obj/kern/kernel.asm	/^f0104482:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104485	obj/kern/kernel.asm	/^f0104485:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104489	obj/kern/kernel.asm	/^f0104489:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f010448c	obj/kern/kernel.asm	/^f010448c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104490	obj/kern/kernel.asm	/^f0104490:	c7 04 24 29 40 10 f0 	movl   $0xf0104029,(%esp)$/;"	l
f0104497	obj/kern/kernel.asm	/^f0104497:	e8 d2 fb ff ff       	call   f010406e <vprintfmt>$/;"	l
f010449c	obj/kern/kernel.asm	/^f010449c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010449f	obj/kern/kernel.asm	/^f010449f:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01044a2	obj/kern/kernel.asm	/^f01044a2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01044a5	obj/kern/kernel.asm	/^f01044a5:	eb 05                	jmp    f01044ac <vsnprintf+0x56>$/;"	l
f01044a7	obj/kern/kernel.asm	/^f01044a7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01044ac	obj/kern/kernel.asm	/^f01044ac:	c9                   	leave  $/;"	l
f01044ad	obj/kern/kernel.asm	/^f01044ad:	c3                   	ret    $/;"	l
f01044ae	obj/kern/kernel.asm	/^f01044ae <snprintf>:$/;"	l
f01044ae	obj/kern/kernel.asm	/^f01044ae:	55                   	push   %ebp$/;"	l
f01044af	obj/kern/kernel.asm	/^f01044af:	89 e5                	mov    %esp,%ebp$/;"	l
f01044b1	obj/kern/kernel.asm	/^f01044b1:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01044b4	obj/kern/kernel.asm	/^f01044b4:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01044b7	obj/kern/kernel.asm	/^f01044b7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01044bb	obj/kern/kernel.asm	/^f01044bb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01044be	obj/kern/kernel.asm	/^f01044be:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01044c2	obj/kern/kernel.asm	/^f01044c2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01044c5	obj/kern/kernel.asm	/^f01044c5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01044c9	obj/kern/kernel.asm	/^f01044c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01044cc	obj/kern/kernel.asm	/^f01044cc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01044cf	obj/kern/kernel.asm	/^f01044cf:	e8 82 ff ff ff       	call   f0104456 <vsnprintf>$/;"	l
f01044d4	obj/kern/kernel.asm	/^f01044d4:	c9                   	leave  $/;"	l
f01044d5	obj/kern/kernel.asm	/^f01044d5:	c3                   	ret    $/;"	l
f01044d6	obj/kern/kernel.asm	/^f01044d6:	66 90                	xchg   %ax,%ax$/;"	l
f01044d8	obj/kern/kernel.asm	/^f01044d8:	66 90                	xchg   %ax,%ax$/;"	l
f01044da	obj/kern/kernel.asm	/^f01044da:	66 90                	xchg   %ax,%ax$/;"	l
f01044dc	obj/kern/kernel.asm	/^f01044dc:	66 90                	xchg   %ax,%ax$/;"	l
f01044de	obj/kern/kernel.asm	/^f01044de:	66 90                	xchg   %ax,%ax$/;"	l
f01044e0	obj/kern/kernel.asm	/^f01044e0 <readline>:$/;"	l
f01044e0	obj/kern/kernel.asm	/^f01044e0:	55                   	push   %ebp$/;"	l
f01044e1	obj/kern/kernel.asm	/^f01044e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01044e3	obj/kern/kernel.asm	/^f01044e3:	57                   	push   %edi$/;"	l
f01044e4	obj/kern/kernel.asm	/^f01044e4:	56                   	push   %esi$/;"	l
f01044e5	obj/kern/kernel.asm	/^f01044e5:	53                   	push   %ebx$/;"	l
f01044e6	obj/kern/kernel.asm	/^f01044e6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01044e9	obj/kern/kernel.asm	/^f01044e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01044ec	obj/kern/kernel.asm	/^f01044ec:	85 c0                	test   %eax,%eax$/;"	l
f01044ee	obj/kern/kernel.asm	/^f01044ee:	74 10                	je     f0104500 <readline+0x20>$/;"	l
f01044f0	obj/kern/kernel.asm	/^f01044f0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01044f4	obj/kern/kernel.asm	/^f01044f4:	c7 04 24 e7 5f 10 f0 	movl   $0xf0105fe7,(%esp)$/;"	l
f01044fb	obj/kern/kernel.asm	/^f01044fb:	e8 94 ed ff ff       	call   f0103294 <cprintf>$/;"	l
f0104500	obj/kern/kernel.asm	/^f0104500:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0104507	obj/kern/kernel.asm	/^f0104507:	e8 7f c2 ff ff       	call   f010078b <iscons>$/;"	l
f010450c	obj/kern/kernel.asm	/^f010450c:	89 c7                	mov    %eax,%edi$/;"	l
f010450e	obj/kern/kernel.asm	/^f010450e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0104513	obj/kern/kernel.asm	/^f0104513:	e8 62 c2 ff ff       	call   f010077a <getchar>$/;"	l
f0104518	obj/kern/kernel.asm	/^f0104518:	89 c3                	mov    %eax,%ebx$/;"	l
f010451a	obj/kern/kernel.asm	/^f010451a:	85 c0                	test   %eax,%eax$/;"	l
f010451c	obj/kern/kernel.asm	/^f010451c:	79 17                	jns    f0104535 <readline+0x55>$/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104522	obj/kern/kernel.asm	/^f0104522:	c7 04 24 e8 6a 10 f0 	movl   $0xf0106ae8,(%esp)$/;"	l
f0104529	obj/kern/kernel.asm	/^f0104529:	e8 66 ed ff ff       	call   f0103294 <cprintf>$/;"	l
f010452e	obj/kern/kernel.asm	/^f010452e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104533	obj/kern/kernel.asm	/^f0104533:	eb 6d                	jmp    f01045a2 <readline+0xc2>$/;"	l
f0104535	obj/kern/kernel.asm	/^f0104535:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0104538	obj/kern/kernel.asm	/^f0104538:	74 05                	je     f010453f <readline+0x5f>$/;"	l
f010453a	obj/kern/kernel.asm	/^f010453a:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010453d	obj/kern/kernel.asm	/^f010453d:	75 19                	jne    f0104558 <readline+0x78>$/;"	l
f010453f	obj/kern/kernel.asm	/^f010453f:	85 f6                	test   %esi,%esi$/;"	l
f0104541	obj/kern/kernel.asm	/^f0104541:	7e 15                	jle    f0104558 <readline+0x78>$/;"	l
f0104543	obj/kern/kernel.asm	/^f0104543:	85 ff                	test   %edi,%edi$/;"	l
f0104545	obj/kern/kernel.asm	/^f0104545:	74 0c                	je     f0104553 <readline+0x73>$/;"	l
f0104547	obj/kern/kernel.asm	/^f0104547:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f010454e	obj/kern/kernel.asm	/^f010454e:	e8 17 c2 ff ff       	call   f010076a <cputchar>$/;"	l
f0104553	obj/kern/kernel.asm	/^f0104553:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0104556	obj/kern/kernel.asm	/^f0104556:	eb bb                	jmp    f0104513 <readline+0x33>$/;"	l
f0104558	obj/kern/kernel.asm	/^f0104558:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f010455e	obj/kern/kernel.asm	/^f010455e:	7f 1c                	jg     f010457c <readline+0x9c>$/;"	l
f0104560	obj/kern/kernel.asm	/^f0104560:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0104563	obj/kern/kernel.asm	/^f0104563:	7e 17                	jle    f010457c <readline+0x9c>$/;"	l
f0104565	obj/kern/kernel.asm	/^f0104565:	85 ff                	test   %edi,%edi$/;"	l
f0104567	obj/kern/kernel.asm	/^f0104567:	74 08                	je     f0104571 <readline+0x91>$/;"	l
f0104569	obj/kern/kernel.asm	/^f0104569:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010456c	obj/kern/kernel.asm	/^f010456c:	e8 f9 c1 ff ff       	call   f010076a <cputchar>$/;"	l
f0104571	obj/kern/kernel.asm	/^f0104571:	88 9e 00 9b 22 f0    	mov    %bl,-0xfdd6500(%esi)$/;"	l
f0104577	obj/kern/kernel.asm	/^f0104577:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f010457a	obj/kern/kernel.asm	/^f010457a:	eb 97                	jmp    f0104513 <readline+0x33>$/;"	l
f010457c	obj/kern/kernel.asm	/^f010457c:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f010457f	obj/kern/kernel.asm	/^f010457f:	74 05                	je     f0104586 <readline+0xa6>$/;"	l
f0104581	obj/kern/kernel.asm	/^f0104581:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0104584	obj/kern/kernel.asm	/^f0104584:	75 8d                	jne    f0104513 <readline+0x33>$/;"	l
f0104586	obj/kern/kernel.asm	/^f0104586:	85 ff                	test   %edi,%edi$/;"	l
f0104588	obj/kern/kernel.asm	/^f0104588:	74 0c                	je     f0104596 <readline+0xb6>$/;"	l
f010458a	obj/kern/kernel.asm	/^f010458a:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f0104591	obj/kern/kernel.asm	/^f0104591:	e8 d4 c1 ff ff       	call   f010076a <cputchar>$/;"	l
f0104596	obj/kern/kernel.asm	/^f0104596:	c6 86 00 9b 22 f0 00 	movb   $0x0,-0xfdd6500(%esi)$/;"	l
f010459d	obj/kern/kernel.asm	/^f010459d:	b8 00 9b 22 f0       	mov    $0xf0229b00,%eax$/;"	l
f01045a2	obj/kern/kernel.asm	/^f01045a2:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01045a5	obj/kern/kernel.asm	/^f01045a5:	5b                   	pop    %ebx$/;"	l
f01045a6	obj/kern/kernel.asm	/^f01045a6:	5e                   	pop    %esi$/;"	l
f01045a7	obj/kern/kernel.asm	/^f01045a7:	5f                   	pop    %edi$/;"	l
f01045a8	obj/kern/kernel.asm	/^f01045a8:	5d                   	pop    %ebp$/;"	l
f01045a9	obj/kern/kernel.asm	/^f01045a9:	c3                   	ret    $/;"	l
f01045aa	obj/kern/kernel.asm	/^f01045aa:	66 90                	xchg   %ax,%ax$/;"	l
f01045ac	obj/kern/kernel.asm	/^f01045ac:	66 90                	xchg   %ax,%ax$/;"	l
f01045ae	obj/kern/kernel.asm	/^f01045ae:	66 90                	xchg   %ax,%ax$/;"	l
f01045b0	obj/kern/kernel.asm	/^f01045b0 <strlen>:$/;"	l
f01045b0	obj/kern/kernel.asm	/^f01045b0:	55                   	push   %ebp$/;"	l
f01045b1	obj/kern/kernel.asm	/^f01045b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01045b3	obj/kern/kernel.asm	/^f01045b3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01045b6	obj/kern/kernel.asm	/^f01045b6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01045bb	obj/kern/kernel.asm	/^f01045bb:	eb 03                	jmp    f01045c0 <strlen+0x10>$/;"	l
f01045bd	obj/kern/kernel.asm	/^f01045bd:	83 c0 01             	add    $0x1,%eax$/;"	l
f01045c0	obj/kern/kernel.asm	/^f01045c0:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f01045c4	obj/kern/kernel.asm	/^f01045c4:	75 f7                	jne    f01045bd <strlen+0xd>$/;"	l
f01045c6	obj/kern/kernel.asm	/^f01045c6:	5d                   	pop    %ebp$/;"	l
f01045c7	obj/kern/kernel.asm	/^f01045c7:	c3                   	ret    $/;"	l
f01045c8	obj/kern/kernel.asm	/^f01045c8 <strnlen>:$/;"	l
f01045c8	obj/kern/kernel.asm	/^f01045c8:	55                   	push   %ebp$/;"	l
f01045c9	obj/kern/kernel.asm	/^f01045c9:	89 e5                	mov    %esp,%ebp$/;"	l
f01045cb	obj/kern/kernel.asm	/^f01045cb:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01045ce	obj/kern/kernel.asm	/^f01045ce:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01045d1	obj/kern/kernel.asm	/^f01045d1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01045d6	obj/kern/kernel.asm	/^f01045d6:	eb 03                	jmp    f01045db <strnlen+0x13>$/;"	l
f01045d8	obj/kern/kernel.asm	/^f01045d8:	83 c0 01             	add    $0x1,%eax$/;"	l
f01045db	obj/kern/kernel.asm	/^f01045db:	39 d0                	cmp    %edx,%eax$/;"	l
f01045dd	obj/kern/kernel.asm	/^f01045dd:	74 06                	je     f01045e5 <strnlen+0x1d>$/;"	l
f01045df	obj/kern/kernel.asm	/^f01045df:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f01045e3	obj/kern/kernel.asm	/^f01045e3:	75 f3                	jne    f01045d8 <strnlen+0x10>$/;"	l
f01045e5	obj/kern/kernel.asm	/^f01045e5:	5d                   	pop    %ebp$/;"	l
f01045e6	obj/kern/kernel.asm	/^f01045e6:	c3                   	ret    $/;"	l
f01045e7	obj/kern/kernel.asm	/^f01045e7 <strcpy>:$/;"	l
f01045e7	obj/kern/kernel.asm	/^f01045e7:	55                   	push   %ebp$/;"	l
f01045e8	obj/kern/kernel.asm	/^f01045e8:	89 e5                	mov    %esp,%ebp$/;"	l
f01045ea	obj/kern/kernel.asm	/^f01045ea:	53                   	push   %ebx$/;"	l
f01045eb	obj/kern/kernel.asm	/^f01045eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01045ee	obj/kern/kernel.asm	/^f01045ee:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01045f1	obj/kern/kernel.asm	/^f01045f1:	89 c2                	mov    %eax,%edx$/;"	l
f01045f3	obj/kern/kernel.asm	/^f01045f3:	83 c2 01             	add    $0x1,%edx$/;"	l
f01045f6	obj/kern/kernel.asm	/^f01045f6:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f01045fd	obj/kern/kernel.asm	/^f01045fd:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0104600	obj/kern/kernel.asm	/^f0104600:	84 db                	test   %bl,%bl$/;"	l
f0104602	obj/kern/kernel.asm	/^f0104602:	75 ef                	jne    f01045f3 <strcpy+0xc>$/;"	l
f0104604	obj/kern/kernel.asm	/^f0104604:	5b                   	pop    %ebx$/;"	l
f0104605	obj/kern/kernel.asm	/^f0104605:	5d                   	pop    %ebp$/;"	l
f0104606	obj/kern/kernel.asm	/^f0104606:	c3                   	ret    $/;"	l
f0104607	obj/kern/kernel.asm	/^f0104607 <strcat>:$/;"	l
f0104607	obj/kern/kernel.asm	/^f0104607:	55                   	push   %ebp$/;"	l
f0104608	obj/kern/kernel.asm	/^f0104608:	89 e5                	mov    %esp,%ebp$/;"	l
f010460a	obj/kern/kernel.asm	/^f010460a:	53                   	push   %ebx$/;"	l
f010460b	obj/kern/kernel.asm	/^f010460b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010460e	obj/kern/kernel.asm	/^f010460e:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104611	obj/kern/kernel.asm	/^f0104611:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104614	obj/kern/kernel.asm	/^f0104614:	e8 97 ff ff ff       	call   f01045b0 <strlen>$/;"	l
f0104619	obj/kern/kernel.asm	/^f0104619:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010461c	obj/kern/kernel.asm	/^f010461c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104620	obj/kern/kernel.asm	/^f0104620:	01 d8                	add    %ebx,%eax$/;"	l
f0104622	obj/kern/kernel.asm	/^f0104622:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104625	obj/kern/kernel.asm	/^f0104625:	e8 bd ff ff ff       	call   f01045e7 <strcpy>$/;"	l
f010462a	obj/kern/kernel.asm	/^f010462a:	89 d8                	mov    %ebx,%eax$/;"	l
f010462c	obj/kern/kernel.asm	/^f010462c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010462f	obj/kern/kernel.asm	/^f010462f:	5b                   	pop    %ebx$/;"	l
f0104630	obj/kern/kernel.asm	/^f0104630:	5d                   	pop    %ebp$/;"	l
f0104631	obj/kern/kernel.asm	/^f0104631:	c3                   	ret    $/;"	l
f0104632	obj/kern/kernel.asm	/^f0104632 <strncpy>:$/;"	l
f0104632	obj/kern/kernel.asm	/^f0104632:	55                   	push   %ebp$/;"	l
f0104633	obj/kern/kernel.asm	/^f0104633:	89 e5                	mov    %esp,%ebp$/;"	l
f0104635	obj/kern/kernel.asm	/^f0104635:	56                   	push   %esi$/;"	l
f0104636	obj/kern/kernel.asm	/^f0104636:	53                   	push   %ebx$/;"	l
f0104637	obj/kern/kernel.asm	/^f0104637:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010463a	obj/kern/kernel.asm	/^f010463a:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010463d	obj/kern/kernel.asm	/^f010463d:	89 f3                	mov    %esi,%ebx$/;"	l
f010463f	obj/kern/kernel.asm	/^f010463f:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0104642	obj/kern/kernel.asm	/^f0104642:	89 f2                	mov    %esi,%edx$/;"	l
f0104644	obj/kern/kernel.asm	/^f0104644:	eb 0f                	jmp    f0104655 <strncpy+0x23>$/;"	l
f0104646	obj/kern/kernel.asm	/^f0104646:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104649	obj/kern/kernel.asm	/^f0104649:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010464c	obj/kern/kernel.asm	/^f010464c:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f010464f	obj/kern/kernel.asm	/^f010464f:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f0104652	obj/kern/kernel.asm	/^f0104652:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f0104655	obj/kern/kernel.asm	/^f0104655:	39 da                	cmp    %ebx,%edx$/;"	l
f0104657	obj/kern/kernel.asm	/^f0104657:	75 ed                	jne    f0104646 <strncpy+0x14>$/;"	l
f0104659	obj/kern/kernel.asm	/^f0104659:	89 f0                	mov    %esi,%eax$/;"	l
f010465b	obj/kern/kernel.asm	/^f010465b:	5b                   	pop    %ebx$/;"	l
f010465c	obj/kern/kernel.asm	/^f010465c:	5e                   	pop    %esi$/;"	l
f010465d	obj/kern/kernel.asm	/^f010465d:	5d                   	pop    %ebp$/;"	l
f010465e	obj/kern/kernel.asm	/^f010465e:	c3                   	ret    $/;"	l
f010465f	obj/kern/kernel.asm	/^f010465f <strlcpy>:$/;"	l
f010465f	obj/kern/kernel.asm	/^f010465f:	55                   	push   %ebp$/;"	l
f0104660	obj/kern/kernel.asm	/^f0104660:	89 e5                	mov    %esp,%ebp$/;"	l
f0104662	obj/kern/kernel.asm	/^f0104662:	56                   	push   %esi$/;"	l
f0104663	obj/kern/kernel.asm	/^f0104663:	53                   	push   %ebx$/;"	l
f0104664	obj/kern/kernel.asm	/^f0104664:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104667	obj/kern/kernel.asm	/^f0104667:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010466a	obj/kern/kernel.asm	/^f010466a:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010466d	obj/kern/kernel.asm	/^f010466d:	89 f0                	mov    %esi,%eax$/;"	l
f010466f	obj/kern/kernel.asm	/^f010466f:	8d 5c 0e ff          	lea    -0x1(%esi,%ecx,1),%ebx$/;"	l
f0104673	obj/kern/kernel.asm	/^f0104673:	85 c9                	test   %ecx,%ecx$/;"	l
f0104675	obj/kern/kernel.asm	/^f0104675:	75 0b                	jne    f0104682 <strlcpy+0x23>$/;"	l
f0104677	obj/kern/kernel.asm	/^f0104677:	eb 1d                	jmp    f0104696 <strlcpy+0x37>$/;"	l
f0104679	obj/kern/kernel.asm	/^f0104679:	83 c0 01             	add    $0x1,%eax$/;"	l
f010467c	obj/kern/kernel.asm	/^f010467c:	83 c2 01             	add    $0x1,%edx$/;"	l
f010467f	obj/kern/kernel.asm	/^f010467f:	88 48 ff             	mov    %cl,-0x1(%eax)$/;"	l
f0104682	obj/kern/kernel.asm	/^f0104682:	39 d8                	cmp    %ebx,%eax$/;"	l
f0104684	obj/kern/kernel.asm	/^f0104684:	74 0b                	je     f0104691 <strlcpy+0x32>$/;"	l
f0104686	obj/kern/kernel.asm	/^f0104686:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0104689	obj/kern/kernel.asm	/^f0104689:	84 c9                	test   %cl,%cl$/;"	l
f010468b	obj/kern/kernel.asm	/^f010468b:	75 ec                	jne    f0104679 <strlcpy+0x1a>$/;"	l
f010468d	obj/kern/kernel.asm	/^f010468d:	89 c2                	mov    %eax,%edx$/;"	l
f010468f	obj/kern/kernel.asm	/^f010468f:	eb 02                	jmp    f0104693 <strlcpy+0x34>$/;"	l
f0104691	obj/kern/kernel.asm	/^f0104691:	89 c2                	mov    %eax,%edx$/;"	l
f0104693	obj/kern/kernel.asm	/^f0104693:	c6 02 00             	movb   $0x0,(%edx)$/;"	l
f0104696	obj/kern/kernel.asm	/^f0104696:	29 f0                	sub    %esi,%eax$/;"	l
f0104698	obj/kern/kernel.asm	/^f0104698:	5b                   	pop    %ebx$/;"	l
f0104699	obj/kern/kernel.asm	/^f0104699:	5e                   	pop    %esi$/;"	l
f010469a	obj/kern/kernel.asm	/^f010469a:	5d                   	pop    %ebp$/;"	l
f010469b	obj/kern/kernel.asm	/^f010469b:	c3                   	ret    $/;"	l
f010469c	obj/kern/kernel.asm	/^f010469c <strcmp>:$/;"	l
f010469c	obj/kern/kernel.asm	/^f010469c:	55                   	push   %ebp$/;"	l
f010469d	obj/kern/kernel.asm	/^f010469d:	89 e5                	mov    %esp,%ebp$/;"	l
f010469f	obj/kern/kernel.asm	/^f010469f:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01046a2	obj/kern/kernel.asm	/^f01046a2:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01046a5	obj/kern/kernel.asm	/^f01046a5:	eb 06                	jmp    f01046ad <strcmp+0x11>$/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01046aa	obj/kern/kernel.asm	/^f01046aa:	83 c2 01             	add    $0x1,%edx$/;"	l
f01046ad	obj/kern/kernel.asm	/^f01046ad:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01046b0	obj/kern/kernel.asm	/^f01046b0:	84 c0                	test   %al,%al$/;"	l
f01046b2	obj/kern/kernel.asm	/^f01046b2:	74 04                	je     f01046b8 <strcmp+0x1c>$/;"	l
f01046b4	obj/kern/kernel.asm	/^f01046b4:	3a 02                	cmp    (%edx),%al$/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6:	74 ef                	je     f01046a7 <strcmp+0xb>$/;"	l
f01046b8	obj/kern/kernel.asm	/^f01046b8:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be:	29 d0                	sub    %edx,%eax$/;"	l
f01046c0	obj/kern/kernel.asm	/^f01046c0:	5d                   	pop    %ebp$/;"	l
f01046c1	obj/kern/kernel.asm	/^f01046c1:	c3                   	ret    $/;"	l
f01046c2	obj/kern/kernel.asm	/^f01046c2 <strncmp>:$/;"	l
f01046c2	obj/kern/kernel.asm	/^f01046c2:	55                   	push   %ebp$/;"	l
f01046c3	obj/kern/kernel.asm	/^f01046c3:	89 e5                	mov    %esp,%ebp$/;"	l
f01046c5	obj/kern/kernel.asm	/^f01046c5:	53                   	push   %ebx$/;"	l
f01046c6	obj/kern/kernel.asm	/^f01046c6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01046c9	obj/kern/kernel.asm	/^f01046c9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01046cc	obj/kern/kernel.asm	/^f01046cc:	89 c3                	mov    %eax,%ebx$/;"	l
f01046ce	obj/kern/kernel.asm	/^f01046ce:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01046d1	obj/kern/kernel.asm	/^f01046d1:	eb 06                	jmp    f01046d9 <strncmp+0x17>$/;"	l
f01046d3	obj/kern/kernel.asm	/^f01046d3:	83 c0 01             	add    $0x1,%eax$/;"	l
f01046d6	obj/kern/kernel.asm	/^f01046d6:	83 c2 01             	add    $0x1,%edx$/;"	l
f01046d9	obj/kern/kernel.asm	/^f01046d9:	39 d8                	cmp    %ebx,%eax$/;"	l
f01046db	obj/kern/kernel.asm	/^f01046db:	74 15                	je     f01046f2 <strncmp+0x30>$/;"	l
f01046dd	obj/kern/kernel.asm	/^f01046dd:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	84 c9                	test   %cl,%cl$/;"	l
f01046e2	obj/kern/kernel.asm	/^f01046e2:	74 04                	je     f01046e8 <strncmp+0x26>$/;"	l
f01046e4	obj/kern/kernel.asm	/^f01046e4:	3a 0a                	cmp    (%edx),%cl$/;"	l
f01046e6	obj/kern/kernel.asm	/^f01046e6:	74 eb                	je     f01046d3 <strncmp+0x11>$/;"	l
f01046e8	obj/kern/kernel.asm	/^f01046e8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01046eb	obj/kern/kernel.asm	/^f01046eb:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01046ee	obj/kern/kernel.asm	/^f01046ee:	29 d0                	sub    %edx,%eax$/;"	l
f01046f0	obj/kern/kernel.asm	/^f01046f0:	eb 05                	jmp    f01046f7 <strncmp+0x35>$/;"	l
f01046f2	obj/kern/kernel.asm	/^f01046f2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01046f7	obj/kern/kernel.asm	/^f01046f7:	5b                   	pop    %ebx$/;"	l
f01046f8	obj/kern/kernel.asm	/^f01046f8:	5d                   	pop    %ebp$/;"	l
f01046f9	obj/kern/kernel.asm	/^f01046f9:	c3                   	ret    $/;"	l
f01046fa	obj/kern/kernel.asm	/^f01046fa <strchr>:$/;"	l
f01046fa	obj/kern/kernel.asm	/^f01046fa:	55                   	push   %ebp$/;"	l
f01046fb	obj/kern/kernel.asm	/^f01046fb:	89 e5                	mov    %esp,%ebp$/;"	l
f01046fd	obj/kern/kernel.asm	/^f01046fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104700	obj/kern/kernel.asm	/^f0104700:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0104704	obj/kern/kernel.asm	/^f0104704:	eb 07                	jmp    f010470d <strchr+0x13>$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	38 ca                	cmp    %cl,%dl$/;"	l
f0104708	obj/kern/kernel.asm	/^f0104708:	74 0f                	je     f0104719 <strchr+0x1f>$/;"	l
f010470a	obj/kern/kernel.asm	/^f010470a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010470d	obj/kern/kernel.asm	/^f010470d:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0104710	obj/kern/kernel.asm	/^f0104710:	84 d2                	test   %dl,%dl$/;"	l
f0104712	obj/kern/kernel.asm	/^f0104712:	75 f2                	jne    f0104706 <strchr+0xc>$/;"	l
f0104714	obj/kern/kernel.asm	/^f0104714:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104719	obj/kern/kernel.asm	/^f0104719:	5d                   	pop    %ebp$/;"	l
f010471a	obj/kern/kernel.asm	/^f010471a:	c3                   	ret    $/;"	l
f010471b	obj/kern/kernel.asm	/^f010471b <strfind>:$/;"	l
f010471b	obj/kern/kernel.asm	/^f010471b:	55                   	push   %ebp$/;"	l
f010471c	obj/kern/kernel.asm	/^f010471c:	89 e5                	mov    %esp,%ebp$/;"	l
f010471e	obj/kern/kernel.asm	/^f010471e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104721	obj/kern/kernel.asm	/^f0104721:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0104725	obj/kern/kernel.asm	/^f0104725:	eb 07                	jmp    f010472e <strfind+0x13>$/;"	l
f0104727	obj/kern/kernel.asm	/^f0104727:	38 ca                	cmp    %cl,%dl$/;"	l
f0104729	obj/kern/kernel.asm	/^f0104729:	74 0a                	je     f0104735 <strfind+0x1a>$/;"	l
f010472b	obj/kern/kernel.asm	/^f010472b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010472e	obj/kern/kernel.asm	/^f010472e:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0104731	obj/kern/kernel.asm	/^f0104731:	84 d2                	test   %dl,%dl$/;"	l
f0104733	obj/kern/kernel.asm	/^f0104733:	75 f2                	jne    f0104727 <strfind+0xc>$/;"	l
f0104735	obj/kern/kernel.asm	/^f0104735:	5d                   	pop    %ebp$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	c3                   	ret    $/;"	l
f0104737	obj/kern/kernel.asm	/^f0104737 <memset>:$/;"	l
f0104737	obj/kern/kernel.asm	/^f0104737:	55                   	push   %ebp$/;"	l
f0104738	obj/kern/kernel.asm	/^f0104738:	89 e5                	mov    %esp,%ebp$/;"	l
f010473a	obj/kern/kernel.asm	/^f010473a:	57                   	push   %edi$/;"	l
f010473b	obj/kern/kernel.asm	/^f010473b:	56                   	push   %esi$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c:	53                   	push   %ebx$/;"	l
f010473d	obj/kern/kernel.asm	/^f010473d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104740	obj/kern/kernel.asm	/^f0104740:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104743	obj/kern/kernel.asm	/^f0104743:	85 c9                	test   %ecx,%ecx$/;"	l
f0104745	obj/kern/kernel.asm	/^f0104745:	74 36                	je     f010477d <memset+0x46>$/;"	l
f0104747	obj/kern/kernel.asm	/^f0104747:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f010474d	obj/kern/kernel.asm	/^f010474d:	75 28                	jne    f0104777 <memset+0x40>$/;"	l
f010474f	obj/kern/kernel.asm	/^f010474f:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0104752	obj/kern/kernel.asm	/^f0104752:	75 23                	jne    f0104777 <memset+0x40>$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f0104758	obj/kern/kernel.asm	/^f0104758:	89 d3                	mov    %edx,%ebx$/;"	l
f010475a	obj/kern/kernel.asm	/^f010475a:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f010475d	obj/kern/kernel.asm	/^f010475d:	89 d6                	mov    %edx,%esi$/;"	l
f010475f	obj/kern/kernel.asm	/^f010475f:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0104762	obj/kern/kernel.asm	/^f0104762:	89 d0                	mov    %edx,%eax$/;"	l
f0104764	obj/kern/kernel.asm	/^f0104764:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0104767	obj/kern/kernel.asm	/^f0104767:	09 f0                	or     %esi,%eax$/;"	l
f0104769	obj/kern/kernel.asm	/^f0104769:	09 c2                	or     %eax,%edx$/;"	l
f010476b	obj/kern/kernel.asm	/^f010476b:	89 d0                	mov    %edx,%eax$/;"	l
f010476d	obj/kern/kernel.asm	/^f010476d:	09 d8                	or     %ebx,%eax$/;"	l
f010476f	obj/kern/kernel.asm	/^f010476f:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104772	obj/kern/kernel.asm	/^f0104772:	fc                   	cld    $/;"	l
f0104773	obj/kern/kernel.asm	/^f0104773:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0104775	obj/kern/kernel.asm	/^f0104775:	eb 06                	jmp    f010477d <memset+0x46>$/;"	l
f0104777	obj/kern/kernel.asm	/^f0104777:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010477a	obj/kern/kernel.asm	/^f010477a:	fc                   	cld    $/;"	l
f010477b	obj/kern/kernel.asm	/^f010477b:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f010477d	obj/kern/kernel.asm	/^f010477d:	89 f8                	mov    %edi,%eax$/;"	l
f010477f	obj/kern/kernel.asm	/^f010477f:	5b                   	pop    %ebx$/;"	l
f0104780	obj/kern/kernel.asm	/^f0104780:	5e                   	pop    %esi$/;"	l
f0104781	obj/kern/kernel.asm	/^f0104781:	5f                   	pop    %edi$/;"	l
f0104782	obj/kern/kernel.asm	/^f0104782:	5d                   	pop    %ebp$/;"	l
f0104783	obj/kern/kernel.asm	/^f0104783:	c3                   	ret    $/;"	l
f0104784	obj/kern/kernel.asm	/^f0104784 <memmove>:$/;"	l
f0104784	obj/kern/kernel.asm	/^f0104784:	55                   	push   %ebp$/;"	l
f0104785	obj/kern/kernel.asm	/^f0104785:	89 e5                	mov    %esp,%ebp$/;"	l
f0104787	obj/kern/kernel.asm	/^f0104787:	57                   	push   %edi$/;"	l
f0104788	obj/kern/kernel.asm	/^f0104788:	56                   	push   %esi$/;"	l
f0104789	obj/kern/kernel.asm	/^f0104789:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010478c	obj/kern/kernel.asm	/^f010478c:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010478f	obj/kern/kernel.asm	/^f010478f:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104792	obj/kern/kernel.asm	/^f0104792:	39 c6                	cmp    %eax,%esi$/;"	l
f0104794	obj/kern/kernel.asm	/^f0104794:	73 35                	jae    f01047cb <memmove+0x47>$/;"	l
f0104796	obj/kern/kernel.asm	/^f0104796:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0104799	obj/kern/kernel.asm	/^f0104799:	39 d0                	cmp    %edx,%eax$/;"	l
f010479b	obj/kern/kernel.asm	/^f010479b:	73 2e                	jae    f01047cb <memmove+0x47>$/;"	l
f010479d	obj/kern/kernel.asm	/^f010479d:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f01047a0	obj/kern/kernel.asm	/^f01047a0:	89 d6                	mov    %edx,%esi$/;"	l
f01047a2	obj/kern/kernel.asm	/^f01047a2:	09 fe                	or     %edi,%esi$/;"	l
f01047a4	obj/kern/kernel.asm	/^f01047a4:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f01047aa	obj/kern/kernel.asm	/^f01047aa:	75 13                	jne    f01047bf <memmove+0x3b>$/;"	l
f01047ac	obj/kern/kernel.asm	/^f01047ac:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01047af	obj/kern/kernel.asm	/^f01047af:	75 0e                	jne    f01047bf <memmove+0x3b>$/;"	l
f01047b1	obj/kern/kernel.asm	/^f01047b1:	83 ef 04             	sub    $0x4,%edi$/;"	l
f01047b4	obj/kern/kernel.asm	/^f01047b4:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f01047b7	obj/kern/kernel.asm	/^f01047b7:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01047ba	obj/kern/kernel.asm	/^f01047ba:	fd                   	std    $/;"	l
f01047bb	obj/kern/kernel.asm	/^f01047bb:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01047bd	obj/kern/kernel.asm	/^f01047bd:	eb 09                	jmp    f01047c8 <memmove+0x44>$/;"	l
f01047bf	obj/kern/kernel.asm	/^f01047bf:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01047c2	obj/kern/kernel.asm	/^f01047c2:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	fd                   	std    $/;"	l
f01047c6	obj/kern/kernel.asm	/^f01047c6:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01047c8	obj/kern/kernel.asm	/^f01047c8:	fc                   	cld    $/;"	l
f01047c9	obj/kern/kernel.asm	/^f01047c9:	eb 1d                	jmp    f01047e8 <memmove+0x64>$/;"	l
f01047cb	obj/kern/kernel.asm	/^f01047cb:	89 f2                	mov    %esi,%edx$/;"	l
f01047cd	obj/kern/kernel.asm	/^f01047cd:	09 c2                	or     %eax,%edx$/;"	l
f01047cf	obj/kern/kernel.asm	/^f01047cf:	f6 c2 03             	test   $0x3,%dl$/;"	l
f01047d2	obj/kern/kernel.asm	/^f01047d2:	75 0f                	jne    f01047e3 <memmove+0x5f>$/;"	l
f01047d4	obj/kern/kernel.asm	/^f01047d4:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01047d7	obj/kern/kernel.asm	/^f01047d7:	75 0a                	jne    f01047e3 <memmove+0x5f>$/;"	l
f01047d9	obj/kern/kernel.asm	/^f01047d9:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01047dc	obj/kern/kernel.asm	/^f01047dc:	89 c7                	mov    %eax,%edi$/;"	l
f01047de	obj/kern/kernel.asm	/^f01047de:	fc                   	cld    $/;"	l
f01047df	obj/kern/kernel.asm	/^f01047df:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01047e1	obj/kern/kernel.asm	/^f01047e1:	eb 05                	jmp    f01047e8 <memmove+0x64>$/;"	l
f01047e3	obj/kern/kernel.asm	/^f01047e3:	89 c7                	mov    %eax,%edi$/;"	l
f01047e5	obj/kern/kernel.asm	/^f01047e5:	fc                   	cld    $/;"	l
f01047e6	obj/kern/kernel.asm	/^f01047e6:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8:	5e                   	pop    %esi$/;"	l
f01047e9	obj/kern/kernel.asm	/^f01047e9:	5f                   	pop    %edi$/;"	l
f01047ea	obj/kern/kernel.asm	/^f01047ea:	5d                   	pop    %ebp$/;"	l
f01047eb	obj/kern/kernel.asm	/^f01047eb:	c3                   	ret    $/;"	l
f01047ec	obj/kern/kernel.asm	/^f01047ec <memcpy>:$/;"	l
f01047ec	obj/kern/kernel.asm	/^f01047ec:	55                   	push   %ebp$/;"	l
f01047ed	obj/kern/kernel.asm	/^f01047ed:	89 e5                	mov    %esp,%ebp$/;"	l
f01047ef	obj/kern/kernel.asm	/^f01047ef:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01047f2	obj/kern/kernel.asm	/^f01047f2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01047f5	obj/kern/kernel.asm	/^f01047f5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01047f9	obj/kern/kernel.asm	/^f01047f9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01047fc	obj/kern/kernel.asm	/^f01047fc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104800	obj/kern/kernel.asm	/^f0104800:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104803	obj/kern/kernel.asm	/^f0104803:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104806	obj/kern/kernel.asm	/^f0104806:	e8 79 ff ff ff       	call   f0104784 <memmove>$/;"	l
f010480b	obj/kern/kernel.asm	/^f010480b:	c9                   	leave  $/;"	l
f010480c	obj/kern/kernel.asm	/^f010480c:	c3                   	ret    $/;"	l
f010480d	obj/kern/kernel.asm	/^f010480d <memcmp>:$/;"	l
f010480d	obj/kern/kernel.asm	/^f010480d:	55                   	push   %ebp$/;"	l
f010480e	obj/kern/kernel.asm	/^f010480e:	89 e5                	mov    %esp,%ebp$/;"	l
f0104810	obj/kern/kernel.asm	/^f0104810:	56                   	push   %esi$/;"	l
f0104811	obj/kern/kernel.asm	/^f0104811:	53                   	push   %ebx$/;"	l
f0104812	obj/kern/kernel.asm	/^f0104812:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104815	obj/kern/kernel.asm	/^f0104815:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0104818	obj/kern/kernel.asm	/^f0104818:	89 d6                	mov    %edx,%esi$/;"	l
f010481a	obj/kern/kernel.asm	/^f010481a:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f010481d	obj/kern/kernel.asm	/^f010481d:	eb 1a                	jmp    f0104839 <memcmp+0x2c>$/;"	l
f010481f	obj/kern/kernel.asm	/^f010481f:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0104822	obj/kern/kernel.asm	/^f0104822:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f0104825	obj/kern/kernel.asm	/^f0104825:	38 d8                	cmp    %bl,%al$/;"	l
f0104827	obj/kern/kernel.asm	/^f0104827:	74 0a                	je     f0104833 <memcmp+0x26>$/;"	l
f0104829	obj/kern/kernel.asm	/^f0104829:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010482c	obj/kern/kernel.asm	/^f010482c:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f010482f	obj/kern/kernel.asm	/^f010482f:	29 d8                	sub    %ebx,%eax$/;"	l
f0104831	obj/kern/kernel.asm	/^f0104831:	eb 0f                	jmp    f0104842 <memcmp+0x35>$/;"	l
f0104833	obj/kern/kernel.asm	/^f0104833:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104836	obj/kern/kernel.asm	/^f0104836:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104839	obj/kern/kernel.asm	/^f0104839:	39 f2                	cmp    %esi,%edx$/;"	l
f010483b	obj/kern/kernel.asm	/^f010483b:	75 e2                	jne    f010481f <memcmp+0x12>$/;"	l
f010483d	obj/kern/kernel.asm	/^f010483d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104842	obj/kern/kernel.asm	/^f0104842:	5b                   	pop    %ebx$/;"	l
f0104843	obj/kern/kernel.asm	/^f0104843:	5e                   	pop    %esi$/;"	l
f0104844	obj/kern/kernel.asm	/^f0104844:	5d                   	pop    %ebp$/;"	l
f0104845	obj/kern/kernel.asm	/^f0104845:	c3                   	ret    $/;"	l
f0104846	obj/kern/kernel.asm	/^f0104846 <memfind>:$/;"	l
f0104846	obj/kern/kernel.asm	/^f0104846:	55                   	push   %ebp$/;"	l
f0104847	obj/kern/kernel.asm	/^f0104847:	89 e5                	mov    %esp,%ebp$/;"	l
f0104849	obj/kern/kernel.asm	/^f0104849:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010484c	obj/kern/kernel.asm	/^f010484c:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	89 c2                	mov    %eax,%edx$/;"	l
f0104851	obj/kern/kernel.asm	/^f0104851:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0104854	obj/kern/kernel.asm	/^f0104854:	eb 07                	jmp    f010485d <memfind+0x17>$/;"	l
f0104856	obj/kern/kernel.asm	/^f0104856:	38 08                	cmp    %cl,(%eax)$/;"	l
f0104858	obj/kern/kernel.asm	/^f0104858:	74 07                	je     f0104861 <memfind+0x1b>$/;"	l
f010485a	obj/kern/kernel.asm	/^f010485a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010485d	obj/kern/kernel.asm	/^f010485d:	39 d0                	cmp    %edx,%eax$/;"	l
f010485f	obj/kern/kernel.asm	/^f010485f:	72 f5                	jb     f0104856 <memfind+0x10>$/;"	l
f0104861	obj/kern/kernel.asm	/^f0104861:	5d                   	pop    %ebp$/;"	l
f0104862	obj/kern/kernel.asm	/^f0104862:	c3                   	ret    $/;"	l
f0104863	obj/kern/kernel.asm	/^f0104863 <strtol>:$/;"	l
f0104863	obj/kern/kernel.asm	/^f0104863:	55                   	push   %ebp$/;"	l
f0104864	obj/kern/kernel.asm	/^f0104864:	89 e5                	mov    %esp,%ebp$/;"	l
f0104866	obj/kern/kernel.asm	/^f0104866:	57                   	push   %edi$/;"	l
f0104867	obj/kern/kernel.asm	/^f0104867:	56                   	push   %esi$/;"	l
f0104868	obj/kern/kernel.asm	/^f0104868:	53                   	push   %ebx$/;"	l
f0104869	obj/kern/kernel.asm	/^f0104869:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010486c	obj/kern/kernel.asm	/^f010486c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010486f	obj/kern/kernel.asm	/^f010486f:	eb 03                	jmp    f0104874 <strtol+0x11>$/;"	l
f0104871	obj/kern/kernel.asm	/^f0104871:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104874	obj/kern/kernel.asm	/^f0104874:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0104877	obj/kern/kernel.asm	/^f0104877:	80 f9 09             	cmp    $0x9,%cl$/;"	l
f010487a	obj/kern/kernel.asm	/^f010487a:	74 f5                	je     f0104871 <strtol+0xe>$/;"	l
f010487c	obj/kern/kernel.asm	/^f010487c:	80 f9 20             	cmp    $0x20,%cl$/;"	l
f010487f	obj/kern/kernel.asm	/^f010487f:	74 f0                	je     f0104871 <strtol+0xe>$/;"	l
f0104881	obj/kern/kernel.asm	/^f0104881:	80 f9 2b             	cmp    $0x2b,%cl$/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884:	75 0a                	jne    f0104890 <strtol+0x2d>$/;"	l
f0104886	obj/kern/kernel.asm	/^f0104886:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104889	obj/kern/kernel.asm	/^f0104889:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010488e	obj/kern/kernel.asm	/^f010488e:	eb 11                	jmp    f01048a1 <strtol+0x3e>$/;"	l
f0104890	obj/kern/kernel.asm	/^f0104890:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104895	obj/kern/kernel.asm	/^f0104895:	80 f9 2d             	cmp    $0x2d,%cl$/;"	l
f0104898	obj/kern/kernel.asm	/^f0104898:	75 07                	jne    f01048a1 <strtol+0x3e>$/;"	l
f010489a	obj/kern/kernel.asm	/^f010489a:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
f010489d	obj/kern/kernel.asm	/^f010489d:	66 bf 01 00          	mov    $0x1,%di$/;"	l
f01048a1	obj/kern/kernel.asm	/^f01048a1:	a9 ef ff ff ff       	test   $0xffffffef,%eax$/;"	l
f01048a6	obj/kern/kernel.asm	/^f01048a6:	75 15                	jne    f01048bd <strtol+0x5a>$/;"	l
f01048a8	obj/kern/kernel.asm	/^f01048a8:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	75 10                	jne    f01048bd <strtol+0x5a>$/;"	l
f01048ad	obj/kern/kernel.asm	/^f01048ad:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f01048b1	obj/kern/kernel.asm	/^f01048b1:	75 0a                	jne    f01048bd <strtol+0x5a>$/;"	l
f01048b3	obj/kern/kernel.asm	/^f01048b3:	83 c2 02             	add    $0x2,%edx$/;"	l
f01048b6	obj/kern/kernel.asm	/^f01048b6:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	eb 10                	jmp    f01048cd <strtol+0x6a>$/;"	l
f01048bd	obj/kern/kernel.asm	/^f01048bd:	85 c0                	test   %eax,%eax$/;"	l
f01048bf	obj/kern/kernel.asm	/^f01048bf:	75 0c                	jne    f01048cd <strtol+0x6a>$/;"	l
f01048c1	obj/kern/kernel.asm	/^f01048c1:	b0 0a                	mov    $0xa,%al$/;"	l
f01048c3	obj/kern/kernel.asm	/^f01048c3:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f01048c6	obj/kern/kernel.asm	/^f01048c6:	75 05                	jne    f01048cd <strtol+0x6a>$/;"	l
f01048c8	obj/kern/kernel.asm	/^f01048c8:	83 c2 01             	add    $0x1,%edx$/;"	l
f01048cb	obj/kern/kernel.asm	/^f01048cb:	b0 08                	mov    $0x8,%al$/;"	l
f01048cd	obj/kern/kernel.asm	/^f01048cd:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01048d2	obj/kern/kernel.asm	/^f01048d2:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
f01048d5	obj/kern/kernel.asm	/^f01048d5:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01048d8	obj/kern/kernel.asm	/^f01048d8:	8d 71 d0             	lea    -0x30(%ecx),%esi$/;"	l
f01048db	obj/kern/kernel.asm	/^f01048db:	89 f0                	mov    %esi,%eax$/;"	l
f01048dd	obj/kern/kernel.asm	/^f01048dd:	3c 09                	cmp    $0x9,%al$/;"	l
f01048df	obj/kern/kernel.asm	/^f01048df:	77 08                	ja     f01048e9 <strtol+0x86>$/;"	l
f01048e1	obj/kern/kernel.asm	/^f01048e1:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01048e4	obj/kern/kernel.asm	/^f01048e4:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f01048e7	obj/kern/kernel.asm	/^f01048e7:	eb 20                	jmp    f0104909 <strtol+0xa6>$/;"	l
f01048e9	obj/kern/kernel.asm	/^f01048e9:	8d 71 9f             	lea    -0x61(%ecx),%esi$/;"	l
f01048ec	obj/kern/kernel.asm	/^f01048ec:	89 f0                	mov    %esi,%eax$/;"	l
f01048ee	obj/kern/kernel.asm	/^f01048ee:	3c 19                	cmp    $0x19,%al$/;"	l
f01048f0	obj/kern/kernel.asm	/^f01048f0:	77 08                	ja     f01048fa <strtol+0x97>$/;"	l
f01048f2	obj/kern/kernel.asm	/^f01048f2:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01048f5	obj/kern/kernel.asm	/^f01048f5:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f01048f8	obj/kern/kernel.asm	/^f01048f8:	eb 0f                	jmp    f0104909 <strtol+0xa6>$/;"	l
f01048fa	obj/kern/kernel.asm	/^f01048fa:	8d 71 bf             	lea    -0x41(%ecx),%esi$/;"	l
f01048fd	obj/kern/kernel.asm	/^f01048fd:	89 f0                	mov    %esi,%eax$/;"	l
f01048ff	obj/kern/kernel.asm	/^f01048ff:	3c 19                	cmp    $0x19,%al$/;"	l
f0104901	obj/kern/kernel.asm	/^f0104901:	77 16                	ja     f0104919 <strtol+0xb6>$/;"	l
f0104903	obj/kern/kernel.asm	/^f0104903:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0104906	obj/kern/kernel.asm	/^f0104906:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f0104909	obj/kern/kernel.asm	/^f0104909:	3b 4d 10             	cmp    0x10(%ebp),%ecx$/;"	l
f010490c	obj/kern/kernel.asm	/^f010490c:	7d 0f                	jge    f010491d <strtol+0xba>$/;"	l
f010490e	obj/kern/kernel.asm	/^f010490e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104911	obj/kern/kernel.asm	/^f0104911:	0f af 5d 10          	imul   0x10(%ebp),%ebx$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	01 cb                	add    %ecx,%ebx$/;"	l
f0104917	obj/kern/kernel.asm	/^f0104917:	eb bc                	jmp    f01048d5 <strtol+0x72>$/;"	l
f0104919	obj/kern/kernel.asm	/^f0104919:	89 d8                	mov    %ebx,%eax$/;"	l
f010491b	obj/kern/kernel.asm	/^f010491b:	eb 02                	jmp    f010491f <strtol+0xbc>$/;"	l
f010491d	obj/kern/kernel.asm	/^f010491d:	89 d8                	mov    %ebx,%eax$/;"	l
f010491f	obj/kern/kernel.asm	/^f010491f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0104923	obj/kern/kernel.asm	/^f0104923:	74 05                	je     f010492a <strtol+0xc7>$/;"	l
f0104925	obj/kern/kernel.asm	/^f0104925:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104928	obj/kern/kernel.asm	/^f0104928:	89 16                	mov    %edx,(%esi)$/;"	l
f010492a	obj/kern/kernel.asm	/^f010492a:	f7 d8                	neg    %eax$/;"	l
f010492c	obj/kern/kernel.asm	/^f010492c:	85 ff                	test   %edi,%edi$/;"	l
f010492e	obj/kern/kernel.asm	/^f010492e:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f0104931	obj/kern/kernel.asm	/^f0104931:	5b                   	pop    %ebx$/;"	l
f0104932	obj/kern/kernel.asm	/^f0104932:	5e                   	pop    %esi$/;"	l
f0104933	obj/kern/kernel.asm	/^f0104933:	5f                   	pop    %edi$/;"	l
f0104934	obj/kern/kernel.asm	/^f0104934:	5d                   	pop    %ebp$/;"	l
f0104935	obj/kern/kernel.asm	/^f0104935:	c3                   	ret    $/;"	l
f0104936	obj/kern/kernel.asm	/^f0104936:	66 90                	xchg   %ax,%ax$/;"	l
f0104938	obj/kern/kernel.asm	/^f0104938 <mpentry_start>:$/;"	l
f0104938	obj/kern/kernel.asm	/^f0104938:	fa                   	cli    $/;"	l
f0104939	obj/kern/kernel.asm	/^f0104939:	31 c0                	xor    %eax,%eax$/;"	l
f010493b	obj/kern/kernel.asm	/^f010493b:	8e d8                	mov    %eax,%ds$/;"	l
f010493d	obj/kern/kernel.asm	/^f010493d:	8e c0                	mov    %eax,%es$/;"	l
f010493f	obj/kern/kernel.asm	/^f010493f:	8e d0                	mov    %eax,%ss$/;"	l
f0104941	obj/kern/kernel.asm	/^f0104941:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0104944	obj/kern/kernel.asm	/^f0104944:	74 70                	je     f01049b6 <mpentry_end+0x4>$/;"	l
f0104946	obj/kern/kernel.asm	/^f0104946:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0104949	obj/kern/kernel.asm	/^f0104949:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f010494d	obj/kern/kernel.asm	/^f010494d:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0104956	obj/kern/kernel.asm	/^f0104956:	08 00                	or     %al,(%eax)$/;"	l
f0104958	obj/kern/kernel.asm	/^f0104958 <start32>:$/;"	l
f0104958	obj/kern/kernel.asm	/^f0104958:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f010495c	obj/kern/kernel.asm	/^f010495c:	8e d8                	mov    %eax,%ds$/;"	l
f010495e	obj/kern/kernel.asm	/^f010495e:	8e c0                	mov    %eax,%es$/;"	l
f0104960	obj/kern/kernel.asm	/^f0104960:	8e d0                	mov    %eax,%ss$/;"	l
f0104962	obj/kern/kernel.asm	/^f0104962:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f0104966	obj/kern/kernel.asm	/^f0104966:	8e e0                	mov    %eax,%fs$/;"	l
f0104968	obj/kern/kernel.asm	/^f0104968:	8e e8                	mov    %eax,%gs$/;"	l
f010496a	obj/kern/kernel.asm	/^f010496a:	b8 00 c0 11 00       	mov    $0x11c000,%eax$/;"	l
f010496f	obj/kern/kernel.asm	/^f010496f:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104972	obj/kern/kernel.asm	/^f0104972:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0104975	obj/kern/kernel.asm	/^f0104975:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f010497a	obj/kern/kernel.asm	/^f010497a:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f010497d	obj/kern/kernel.asm	/^f010497d:	8b 25 04 9f 22 f0    	mov    0xf0229f04,%esp$/;"	l
f0104983	obj/kern/kernel.asm	/^f0104983:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0104988	obj/kern/kernel.asm	/^f0104988:	b8 d6 01 10 f0       	mov    $0xf01001d6,%eax$/;"	l
f010498d	obj/kern/kernel.asm	/^f010498d:	ff d0                	call   *%eax$/;"	l
f010498f	obj/kern/kernel.asm	/^f010498f <spin>:$/;"	l
f010498f	obj/kern/kernel.asm	/^f010498f:	eb fe                	jmp    f010498f <spin>$/;"	l
f0104991	obj/kern/kernel.asm	/^f0104991:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104994	obj/kern/kernel.asm	/^f0104994 <gdt>:$/;"	l
f010499c	obj/kern/kernel.asm	/^f010499c:	ff                   	(bad)  $/;"	l
f010499d	obj/kern/kernel.asm	/^f010499d:	ff 00                	incl   (%eax)$/;"	l
f010499f	obj/kern/kernel.asm	/^f010499f:	00 00                	add    %al,(%eax)$/;"	l
f01049a1	obj/kern/kernel.asm	/^f01049a1:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f01049a8	obj/kern/kernel.asm	/^f01049a8:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f01049ac	obj/kern/kernel.asm	/^f01049ac <gdtdesc>:$/;"	l
f01049ac	obj/kern/kernel.asm	/^f01049ac:	17                   	pop    %ss$/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f01049b2	obj/kern/kernel.asm	/^f01049b2 <mpentry_end>:$/;"	l
f01049b2	obj/kern/kernel.asm	/^f01049b2:	90                   	nop$/;"	l
f01049b3	obj/kern/kernel.asm	/^f01049b3:	66 90                	xchg   %ax,%ax$/;"	l
f01049b5	obj/kern/kernel.asm	/^f01049b5:	66 90                	xchg   %ax,%ax$/;"	l
f01049b7	obj/kern/kernel.asm	/^f01049b7:	66 90                	xchg   %ax,%ax$/;"	l
f01049b9	obj/kern/kernel.asm	/^f01049b9:	66 90                	xchg   %ax,%ax$/;"	l
f01049bb	obj/kern/kernel.asm	/^f01049bb:	66 90                	xchg   %ax,%ax$/;"	l
f01049bd	obj/kern/kernel.asm	/^f01049bd:	66 90                	xchg   %ax,%ax$/;"	l
f01049bf	obj/kern/kernel.asm	/^f01049bf:	90                   	nop$/;"	l
f01049c0	obj/kern/kernel.asm	/^f01049c0 <mpsearch1>:$/;"	l
f01049c0	obj/kern/kernel.asm	/^f01049c0:	55                   	push   %ebp$/;"	l
f01049c1	obj/kern/kernel.asm	/^f01049c1:	89 e5                	mov    %esp,%ebp$/;"	l
f01049c3	obj/kern/kernel.asm	/^f01049c3:	56                   	push   %esi$/;"	l
f01049c4	obj/kern/kernel.asm	/^f01049c4:	53                   	push   %ebx$/;"	l
f01049c5	obj/kern/kernel.asm	/^f01049c5:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01049c8	obj/kern/kernel.asm	/^f01049c8:	8b 0d 08 9f 22 f0    	mov    0xf0229f08,%ecx$/;"	l
f01049ce	obj/kern/kernel.asm	/^f01049ce:	89 c3                	mov    %eax,%ebx$/;"	l
f01049d0	obj/kern/kernel.asm	/^f01049d0:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01049d3	obj/kern/kernel.asm	/^f01049d3:	39 cb                	cmp    %ecx,%ebx$/;"	l
f01049d5	obj/kern/kernel.asm	/^f01049d5:	72 20                	jb     f01049f7 <mpsearch1+0x37>$/;"	l
f01049d7	obj/kern/kernel.asm	/^f01049d7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01049db	obj/kern/kernel.asm	/^f01049db:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f01049e2	obj/kern/kernel.asm	/^f01049e2:	f0 $/;"	l
f01049e3	obj/kern/kernel.asm	/^f01049e3:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01049ea	obj/kern/kernel.asm	/^f01049ea:	00 $/;"	l
f01049eb	obj/kern/kernel.asm	/^f01049eb:	c7 04 24 85 6c 10 f0 	movl   $0xf0106c85,(%esp)$/;"	l
f01049f2	obj/kern/kernel.asm	/^f01049f2:	e8 49 b6 ff ff       	call   f0100040 <_panic>$/;"	l
f01049f7	obj/kern/kernel.asm	/^f01049f7:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f01049fd	obj/kern/kernel.asm	/^f01049fd:	01 d0                	add    %edx,%eax$/;"	l
f01049ff	obj/kern/kernel.asm	/^f01049ff:	89 c2                	mov    %eax,%edx$/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0104a04	obj/kern/kernel.asm	/^f0104a04:	39 d1                	cmp    %edx,%ecx$/;"	l
f0104a06	obj/kern/kernel.asm	/^f0104a06:	77 20                	ja     f0104a28 <mpsearch1+0x68>$/;"	l
f0104a08	obj/kern/kernel.asm	/^f0104a08:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104a0c	obj/kern/kernel.asm	/^f0104a0c:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f0104a13	obj/kern/kernel.asm	/^f0104a13:	f0 $/;"	l
f0104a14	obj/kern/kernel.asm	/^f0104a14:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0104a1b	obj/kern/kernel.asm	/^f0104a1b:	00 $/;"	l
f0104a1c	obj/kern/kernel.asm	/^f0104a1c:	c7 04 24 85 6c 10 f0 	movl   $0xf0106c85,(%esp)$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	e8 18 b6 ff ff       	call   f0100040 <_panic>$/;"	l
f0104a28	obj/kern/kernel.asm	/^f0104a28:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f0104a2e	obj/kern/kernel.asm	/^f0104a2e:	eb 36                	jmp    f0104a66 <mpsearch1+0xa6>$/;"	l
f0104a30	obj/kern/kernel.asm	/^f0104a30:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0104a37	obj/kern/kernel.asm	/^f0104a37:	00 $/;"	l
f0104a38	obj/kern/kernel.asm	/^f0104a38:	c7 44 24 04 95 6c 10 	movl   $0xf0106c95,0x4(%esp)$/;"	l
f0104a3f	obj/kern/kernel.asm	/^f0104a3f:	f0 $/;"	l
f0104a40	obj/kern/kernel.asm	/^f0104a40:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104a43	obj/kern/kernel.asm	/^f0104a43:	e8 c5 fd ff ff       	call   f010480d <memcmp>$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48:	85 c0                	test   %eax,%eax$/;"	l
f0104a4a	obj/kern/kernel.asm	/^f0104a4a:	75 17                	jne    f0104a63 <mpsearch1+0xa3>$/;"	l
f0104a4c	obj/kern/kernel.asm	/^f0104a4c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104a51	obj/kern/kernel.asm	/^f0104a51:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f0104a55	obj/kern/kernel.asm	/^f0104a55:	01 c8                	add    %ecx,%eax$/;"	l
f0104a57	obj/kern/kernel.asm	/^f0104a57:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104a5a	obj/kern/kernel.asm	/^f0104a5a:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f0104a5d	obj/kern/kernel.asm	/^f0104a5d:	75 f2                	jne    f0104a51 <mpsearch1+0x91>$/;"	l
f0104a5f	obj/kern/kernel.asm	/^f0104a5f:	84 c0                	test   %al,%al$/;"	l
f0104a61	obj/kern/kernel.asm	/^f0104a61:	74 0e                	je     f0104a71 <mpsearch1+0xb1>$/;"	l
f0104a63	obj/kern/kernel.asm	/^f0104a63:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0104a66	obj/kern/kernel.asm	/^f0104a66:	39 f3                	cmp    %esi,%ebx$/;"	l
f0104a68	obj/kern/kernel.asm	/^f0104a68:	72 c6                	jb     f0104a30 <mpsearch1+0x70>$/;"	l
f0104a6a	obj/kern/kernel.asm	/^f0104a6a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104a6f	obj/kern/kernel.asm	/^f0104a6f:	eb 02                	jmp    f0104a73 <mpsearch1+0xb3>$/;"	l
f0104a71	obj/kern/kernel.asm	/^f0104a71:	89 d8                	mov    %ebx,%eax$/;"	l
f0104a73	obj/kern/kernel.asm	/^f0104a73:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a76	obj/kern/kernel.asm	/^f0104a76:	5b                   	pop    %ebx$/;"	l
f0104a77	obj/kern/kernel.asm	/^f0104a77:	5e                   	pop    %esi$/;"	l
f0104a78	obj/kern/kernel.asm	/^f0104a78:	5d                   	pop    %ebp$/;"	l
f0104a79	obj/kern/kernel.asm	/^f0104a79:	c3                   	ret    $/;"	l
f0104a7a	obj/kern/kernel.asm	/^f0104a7a <mp_init>:$/;"	l
f0104a7a	obj/kern/kernel.asm	/^f0104a7a:	55                   	push   %ebp$/;"	l
f0104a7b	obj/kern/kernel.asm	/^f0104a7b:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a7d	obj/kern/kernel.asm	/^f0104a7d:	57                   	push   %edi$/;"	l
f0104a7e	obj/kern/kernel.asm	/^f0104a7e:	56                   	push   %esi$/;"	l
f0104a7f	obj/kern/kernel.asm	/^f0104a7f:	53                   	push   %ebx$/;"	l
f0104a80	obj/kern/kernel.asm	/^f0104a80:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104a83	obj/kern/kernel.asm	/^f0104a83:	c7 05 c0 a3 22 f0 20 	movl   $0xf022a020,0xf022a3c0$/;"	l
f0104a8a	obj/kern/kernel.asm	/^f0104a8a:	a0 22 f0 $/;"	l
f0104a8d	obj/kern/kernel.asm	/^f0104a8d:	83 3d 08 9f 22 f0 00 	cmpl   $0x0,0xf0229f08$/;"	l
f0104a94	obj/kern/kernel.asm	/^f0104a94:	75 24                	jne    f0104aba <mp_init+0x40>$/;"	l
f0104a96	obj/kern/kernel.asm	/^f0104a96:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f0104a9d	obj/kern/kernel.asm	/^f0104a9d:	00 $/;"	l
f0104a9e	obj/kern/kernel.asm	/^f0104a9e:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f0104aa5	obj/kern/kernel.asm	/^f0104aa5:	f0 $/;"	l
f0104aa6	obj/kern/kernel.asm	/^f0104aa6:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f0104aad	obj/kern/kernel.asm	/^f0104aad:	00 $/;"	l
f0104aae	obj/kern/kernel.asm	/^f0104aae:	c7 04 24 85 6c 10 f0 	movl   $0xf0106c85,(%esp)$/;"	l
f0104ab5	obj/kern/kernel.asm	/^f0104ab5:	e8 86 b5 ff ff       	call   f0100040 <_panic>$/;"	l
f0104aba	obj/kern/kernel.asm	/^f0104aba:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0104ac1	obj/kern/kernel.asm	/^f0104ac1:	85 c0                	test   %eax,%eax$/;"	l
f0104ac3	obj/kern/kernel.asm	/^f0104ac3:	74 16                	je     f0104adb <mp_init+0x61>$/;"	l
f0104ac5	obj/kern/kernel.asm	/^f0104ac5:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0104ac8	obj/kern/kernel.asm	/^f0104ac8:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0104acd	obj/kern/kernel.asm	/^f0104acd:	e8 ee fe ff ff       	call   f01049c0 <mpsearch1>$/;"	l
f0104ad2	obj/kern/kernel.asm	/^f0104ad2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104ad5	obj/kern/kernel.asm	/^f0104ad5:	85 c0                	test   %eax,%eax$/;"	l
f0104ad7	obj/kern/kernel.asm	/^f0104ad7:	75 3c                	jne    f0104b15 <mp_init+0x9b>$/;"	l
f0104ad9	obj/kern/kernel.asm	/^f0104ad9:	eb 20                	jmp    f0104afb <mp_init+0x81>$/;"	l
f0104adb	obj/kern/kernel.asm	/^f0104adb:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0104ae2	obj/kern/kernel.asm	/^f0104ae2:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0104ae5	obj/kern/kernel.asm	/^f0104ae5:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0104aea	obj/kern/kernel.asm	/^f0104aea:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0104aef	obj/kern/kernel.asm	/^f0104aef:	e8 cc fe ff ff       	call   f01049c0 <mpsearch1>$/;"	l
f0104af4	obj/kern/kernel.asm	/^f0104af4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104af7	obj/kern/kernel.asm	/^f0104af7:	85 c0                	test   %eax,%eax$/;"	l
f0104af9	obj/kern/kernel.asm	/^f0104af9:	75 1a                	jne    f0104b15 <mp_init+0x9b>$/;"	l
f0104afb	obj/kern/kernel.asm	/^f0104afb:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0104b00	obj/kern/kernel.asm	/^f0104b00:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0104b05	obj/kern/kernel.asm	/^f0104b05:	e8 b6 fe ff ff       	call   f01049c0 <mpsearch1>$/;"	l
f0104b0a	obj/kern/kernel.asm	/^f0104b0a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104b0d	obj/kern/kernel.asm	/^f0104b0d:	85 c0                	test   %eax,%eax$/;"	l
f0104b0f	obj/kern/kernel.asm	/^f0104b0f:	0f 84 54 02 00 00    	je     f0104d69 <mp_init+0x2ef>$/;"	l
f0104b15	obj/kern/kernel.asm	/^f0104b15:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104b18	obj/kern/kernel.asm	/^f0104b18:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0104b1b	obj/kern/kernel.asm	/^f0104b1b:	85 f6                	test   %esi,%esi$/;"	l
f0104b1d	obj/kern/kernel.asm	/^f0104b1d:	74 06                	je     f0104b25 <mp_init+0xab>$/;"	l
f0104b1f	obj/kern/kernel.asm	/^f0104b1f:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0104b23	obj/kern/kernel.asm	/^f0104b23:	74 11                	je     f0104b36 <mp_init+0xbc>$/;"	l
f0104b25	obj/kern/kernel.asm	/^f0104b25:	c7 04 24 f8 6a 10 f0 	movl   $0xf0106af8,(%esp)$/;"	l
f0104b2c	obj/kern/kernel.asm	/^f0104b2c:	e8 63 e7 ff ff       	call   f0103294 <cprintf>$/;"	l
f0104b31	obj/kern/kernel.asm	/^f0104b31:	e9 33 02 00 00       	jmp    f0104d69 <mp_init+0x2ef>$/;"	l
f0104b36	obj/kern/kernel.asm	/^f0104b36:	89 f0                	mov    %esi,%eax$/;"	l
f0104b38	obj/kern/kernel.asm	/^f0104b38:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0104b3b	obj/kern/kernel.asm	/^f0104b3b:	3b 05 08 9f 22 f0    	cmp    0xf0229f08,%eax$/;"	l
f0104b41	obj/kern/kernel.asm	/^f0104b41:	72 20                	jb     f0104b63 <mp_init+0xe9>$/;"	l
f0104b43	obj/kern/kernel.asm	/^f0104b43:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0104b47	obj/kern/kernel.asm	/^f0104b47:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	f0 $/;"	l
f0104b4f	obj/kern/kernel.asm	/^f0104b4f:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f0104b56	obj/kern/kernel.asm	/^f0104b56:	00 $/;"	l
f0104b57	obj/kern/kernel.asm	/^f0104b57:	c7 04 24 85 6c 10 f0 	movl   $0xf0106c85,(%esp)$/;"	l
f0104b5e	obj/kern/kernel.asm	/^f0104b5e:	e8 dd b4 ff ff       	call   f0100040 <_panic>$/;"	l
f0104b63	obj/kern/kernel.asm	/^f0104b63:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f0104b69	obj/kern/kernel.asm	/^f0104b69:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0104b70	obj/kern/kernel.asm	/^f0104b70:	00 $/;"	l
f0104b71	obj/kern/kernel.asm	/^f0104b71:	c7 44 24 04 9a 6c 10 	movl   $0xf0106c9a,0x4(%esp)$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	f0 $/;"	l
f0104b79	obj/kern/kernel.asm	/^f0104b79:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104b7c	obj/kern/kernel.asm	/^f0104b7c:	e8 8c fc ff ff       	call   f010480d <memcmp>$/;"	l
f0104b81	obj/kern/kernel.asm	/^f0104b81:	85 c0                	test   %eax,%eax$/;"	l
f0104b83	obj/kern/kernel.asm	/^f0104b83:	74 11                	je     f0104b96 <mp_init+0x11c>$/;"	l
f0104b85	obj/kern/kernel.asm	/^f0104b85:	c7 04 24 28 6b 10 f0 	movl   $0xf0106b28,(%esp)$/;"	l
f0104b8c	obj/kern/kernel.asm	/^f0104b8c:	e8 03 e7 ff ff       	call   f0103294 <cprintf>$/;"	l
f0104b91	obj/kern/kernel.asm	/^f0104b91:	e9 d3 01 00 00       	jmp    f0104d69 <mp_init+0x2ef>$/;"	l
f0104b96	obj/kern/kernel.asm	/^f0104b96:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f0104b9a	obj/kern/kernel.asm	/^f0104b9a:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f0104b9e	obj/kern/kernel.asm	/^f0104b9e:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f0104ba1	obj/kern/kernel.asm	/^f0104ba1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104ba6	obj/kern/kernel.asm	/^f0104ba6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104bab	obj/kern/kernel.asm	/^f0104bab:	eb 0d                	jmp    f0104bba <mp_init+0x140>$/;"	l
f0104bad	obj/kern/kernel.asm	/^f0104bad:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	f0 $/;"	l
f0104bb5	obj/kern/kernel.asm	/^f0104bb5:	01 ca                	add    %ecx,%edx$/;"	l
f0104bb7	obj/kern/kernel.asm	/^f0104bb7:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104bba	obj/kern/kernel.asm	/^f0104bba:	39 c7                	cmp    %eax,%edi$/;"	l
f0104bbc	obj/kern/kernel.asm	/^f0104bbc:	7f ef                	jg     f0104bad <mp_init+0x133>$/;"	l
f0104bbe	obj/kern/kernel.asm	/^f0104bbe:	84 d2                	test   %dl,%dl$/;"	l
f0104bc0	obj/kern/kernel.asm	/^f0104bc0:	74 11                	je     f0104bd3 <mp_init+0x159>$/;"	l
f0104bc2	obj/kern/kernel.asm	/^f0104bc2:	c7 04 24 5c 6b 10 f0 	movl   $0xf0106b5c,(%esp)$/;"	l
f0104bc9	obj/kern/kernel.asm	/^f0104bc9:	e8 c6 e6 ff ff       	call   f0103294 <cprintf>$/;"	l
f0104bce	obj/kern/kernel.asm	/^f0104bce:	e9 96 01 00 00       	jmp    f0104d69 <mp_init+0x2ef>$/;"	l
f0104bd3	obj/kern/kernel.asm	/^f0104bd3:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f0104bd7	obj/kern/kernel.asm	/^f0104bd7:	3c 04                	cmp    $0x4,%al$/;"	l
f0104bd9	obj/kern/kernel.asm	/^f0104bd9:	74 1f                	je     f0104bfa <mp_init+0x180>$/;"	l
f0104bdb	obj/kern/kernel.asm	/^f0104bdb:	3c 01                	cmp    $0x1,%al$/;"	l
f0104bdd	obj/kern/kernel.asm	/^f0104bdd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104be0	obj/kern/kernel.asm	/^f0104be0:	74 18                	je     f0104bfa <mp_init+0x180>$/;"	l
f0104be2	obj/kern/kernel.asm	/^f0104be2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104be5	obj/kern/kernel.asm	/^f0104be5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104be9	obj/kern/kernel.asm	/^f0104be9:	c7 04 24 80 6b 10 f0 	movl   $0xf0106b80,(%esp)$/;"	l
f0104bf0	obj/kern/kernel.asm	/^f0104bf0:	e8 9f e6 ff ff       	call   f0103294 <cprintf>$/;"	l
f0104bf5	obj/kern/kernel.asm	/^f0104bf5:	e9 6f 01 00 00       	jmp    f0104d69 <mp_init+0x2ef>$/;"	l
f0104bfa	obj/kern/kernel.asm	/^f0104bfa:	0f b7 73 28          	movzwl 0x28(%ebx),%esi$/;"	l
f0104bfe	obj/kern/kernel.asm	/^f0104bfe:	0f b7 7d e2          	movzwl -0x1e(%ebp),%edi$/;"	l
f0104c02	obj/kern/kernel.asm	/^f0104c02:	01 df                	add    %ebx,%edi$/;"	l
f0104c04	obj/kern/kernel.asm	/^f0104c04:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104c09	obj/kern/kernel.asm	/^f0104c09:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	eb 09                	jmp    f0104c19 <mp_init+0x19f>$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	0f b6 0c 07          	movzbl (%edi,%eax,1),%ecx$/;"	l
f0104c14	obj/kern/kernel.asm	/^f0104c14:	01 ca                	add    %ecx,%edx$/;"	l
f0104c16	obj/kern/kernel.asm	/^f0104c16:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104c19	obj/kern/kernel.asm	/^f0104c19:	39 c6                	cmp    %eax,%esi$/;"	l
f0104c1b	obj/kern/kernel.asm	/^f0104c1b:	7f f3                	jg     f0104c10 <mp_init+0x196>$/;"	l
f0104c1d	obj/kern/kernel.asm	/^f0104c1d:	02 53 2a             	add    0x2a(%ebx),%dl$/;"	l
f0104c20	obj/kern/kernel.asm	/^f0104c20:	84 d2                	test   %dl,%dl$/;"	l
f0104c22	obj/kern/kernel.asm	/^f0104c22:	74 11                	je     f0104c35 <mp_init+0x1bb>$/;"	l
f0104c24	obj/kern/kernel.asm	/^f0104c24:	c7 04 24 a0 6b 10 f0 	movl   $0xf0106ba0,(%esp)$/;"	l
f0104c2b	obj/kern/kernel.asm	/^f0104c2b:	e8 64 e6 ff ff       	call   f0103294 <cprintf>$/;"	l
f0104c30	obj/kern/kernel.asm	/^f0104c30:	e9 34 01 00 00       	jmp    f0104d69 <mp_init+0x2ef>$/;"	l
f0104c35	obj/kern/kernel.asm	/^f0104c35:	85 db                	test   %ebx,%ebx$/;"	l
f0104c37	obj/kern/kernel.asm	/^f0104c37:	0f 84 2c 01 00 00    	je     f0104d69 <mp_init+0x2ef>$/;"	l
f0104c3d	obj/kern/kernel.asm	/^f0104c3d:	c7 05 00 a0 22 f0 01 	movl   $0x1,0xf022a000$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	00 00 00 $/;"	l
f0104c47	obj/kern/kernel.asm	/^f0104c47:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f0104c4a	obj/kern/kernel.asm	/^f0104c4a:	a3 00 b0 26 f0       	mov    %eax,0xf026b000$/;"	l
f0104c4f	obj/kern/kernel.asm	/^f0104c4f:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f0104c52	obj/kern/kernel.asm	/^f0104c52:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0104c57	obj/kern/kernel.asm	/^f0104c57:	e9 86 00 00 00       	jmp    f0104ce2 <mp_init+0x268>$/;"	l
f0104c5c	obj/kern/kernel.asm	/^f0104c5c:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0104c5f	obj/kern/kernel.asm	/^f0104c5f:	84 c0                	test   %al,%al$/;"	l
f0104c61	obj/kern/kernel.asm	/^f0104c61:	74 06                	je     f0104c69 <mp_init+0x1ef>$/;"	l
f0104c63	obj/kern/kernel.asm	/^f0104c63:	3c 04                	cmp    $0x4,%al$/;"	l
f0104c65	obj/kern/kernel.asm	/^f0104c65:	77 57                	ja     f0104cbe <mp_init+0x244>$/;"	l
f0104c67	obj/kern/kernel.asm	/^f0104c67:	eb 50                	jmp    f0104cb9 <mp_init+0x23f>$/;"	l
f0104c69	obj/kern/kernel.asm	/^f0104c69:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f0104c6d	obj/kern/kernel.asm	/^f0104c6d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104c70	obj/kern/kernel.asm	/^f0104c70:	74 11                	je     f0104c83 <mp_init+0x209>$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72:	6b 05 c4 a3 22 f0 74 	imul   $0x74,0xf022a3c4,%eax$/;"	l
f0104c79	obj/kern/kernel.asm	/^f0104c79:	05 20 a0 22 f0       	add    $0xf022a020,%eax$/;"	l
f0104c7e	obj/kern/kernel.asm	/^f0104c7e:	a3 c0 a3 22 f0       	mov    %eax,0xf022a3c0$/;"	l
f0104c83	obj/kern/kernel.asm	/^f0104c83:	a1 c4 a3 22 f0       	mov    0xf022a3c4,%eax$/;"	l
f0104c88	obj/kern/kernel.asm	/^f0104c88:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0104c8b	obj/kern/kernel.asm	/^f0104c8b:	7f 13                	jg     f0104ca0 <mp_init+0x226>$/;"	l
f0104c8d	obj/kern/kernel.asm	/^f0104c8d:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	88 82 20 a0 22 f0    	mov    %al,-0xfdd5fe0(%edx)$/;"	l
f0104c96	obj/kern/kernel.asm	/^f0104c96:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104c99	obj/kern/kernel.asm	/^f0104c99:	a3 c4 a3 22 f0       	mov    %eax,0xf022a3c4$/;"	l
f0104c9e	obj/kern/kernel.asm	/^f0104c9e:	eb 14                	jmp    f0104cb4 <mp_init+0x23a>$/;"	l
f0104ca0	obj/kern/kernel.asm	/^f0104ca0:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f0104ca4	obj/kern/kernel.asm	/^f0104ca4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104ca8	obj/kern/kernel.asm	/^f0104ca8:	c7 04 24 d0 6b 10 f0 	movl   $0xf0106bd0,(%esp)$/;"	l
f0104caf	obj/kern/kernel.asm	/^f0104caf:	e8 e0 e5 ff ff       	call   f0103294 <cprintf>$/;"	l
f0104cb4	obj/kern/kernel.asm	/^f0104cb4:	83 c7 14             	add    $0x14,%edi$/;"	l
f0104cb7	obj/kern/kernel.asm	/^f0104cb7:	eb 26                	jmp    f0104cdf <mp_init+0x265>$/;"	l
f0104cb9	obj/kern/kernel.asm	/^f0104cb9:	83 c7 08             	add    $0x8,%edi$/;"	l
f0104cbc	obj/kern/kernel.asm	/^f0104cbc:	eb 21                	jmp    f0104cdf <mp_init+0x265>$/;"	l
f0104cbe	obj/kern/kernel.asm	/^f0104cbe:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104cc1	obj/kern/kernel.asm	/^f0104cc1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104cc5	obj/kern/kernel.asm	/^f0104cc5:	c7 04 24 f8 6b 10 f0 	movl   $0xf0106bf8,(%esp)$/;"	l
f0104ccc	obj/kern/kernel.asm	/^f0104ccc:	e8 c3 e5 ff ff       	call   f0103294 <cprintf>$/;"	l
f0104cd1	obj/kern/kernel.asm	/^f0104cd1:	c7 05 00 a0 22 f0 00 	movl   $0x0,0xf022a000$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	00 00 00 $/;"	l
f0104cdb	obj/kern/kernel.asm	/^f0104cdb:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f0104cdf	obj/kern/kernel.asm	/^f0104cdf:	83 c6 01             	add    $0x1,%esi$/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f0104ce6	obj/kern/kernel.asm	/^f0104ce6:	39 c6                	cmp    %eax,%esi$/;"	l
f0104ce8	obj/kern/kernel.asm	/^f0104ce8:	0f 82 6e ff ff ff    	jb     f0104c5c <mp_init+0x1e2>$/;"	l
f0104cee	obj/kern/kernel.asm	/^f0104cee:	a1 c0 a3 22 f0       	mov    0xf022a3c0,%eax$/;"	l
f0104cf3	obj/kern/kernel.asm	/^f0104cf3:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0104cfa	obj/kern/kernel.asm	/^f0104cfa:	83 3d 00 a0 22 f0 00 	cmpl   $0x0,0xf022a000$/;"	l
f0104d01	obj/kern/kernel.asm	/^f0104d01:	75 22                	jne    f0104d25 <mp_init+0x2ab>$/;"	l
f0104d03	obj/kern/kernel.asm	/^f0104d03:	c7 05 c4 a3 22 f0 01 	movl   $0x1,0xf022a3c4$/;"	l
f0104d0a	obj/kern/kernel.asm	/^f0104d0a:	00 00 00 $/;"	l
f0104d0d	obj/kern/kernel.asm	/^f0104d0d:	c7 05 00 b0 26 f0 00 	movl   $0x0,0xf026b000$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	00 00 00 $/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	c7 04 24 18 6c 10 f0 	movl   $0xf0106c18,(%esp)$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	e8 71 e5 ff ff       	call   f0103294 <cprintf>$/;"	l
f0104d23	obj/kern/kernel.asm	/^f0104d23:	eb 44                	jmp    f0104d69 <mp_init+0x2ef>$/;"	l
f0104d25	obj/kern/kernel.asm	/^f0104d25:	8b 15 c4 a3 22 f0    	mov    0xf022a3c4,%edx$/;"	l
f0104d2b	obj/kern/kernel.asm	/^f0104d2b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104d2f	obj/kern/kernel.asm	/^f0104d2f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104d36	obj/kern/kernel.asm	/^f0104d36:	c7 04 24 9f 6c 10 f0 	movl   $0xf0106c9f,(%esp)$/;"	l
f0104d3d	obj/kern/kernel.asm	/^f0104d3d:	e8 52 e5 ff ff       	call   f0103294 <cprintf>$/;"	l
f0104d42	obj/kern/kernel.asm	/^f0104d42:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104d45	obj/kern/kernel.asm	/^f0104d45:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0104d49	obj/kern/kernel.asm	/^f0104d49:	74 1e                	je     f0104d69 <mp_init+0x2ef>$/;"	l
f0104d4b	obj/kern/kernel.asm	/^f0104d4b:	c7 04 24 44 6c 10 f0 	movl   $0xf0106c44,(%esp)$/;"	l
f0104d52	obj/kern/kernel.asm	/^f0104d52:	e8 3d e5 ff ff       	call   f0103294 <cprintf>$/;"	l
f0104d57	obj/kern/kernel.asm	/^f0104d57:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0104d5c	obj/kern/kernel.asm	/^f0104d5c:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0104d61	obj/kern/kernel.asm	/^f0104d61:	ee                   	out    %al,(%dx)$/;"	l
f0104d62	obj/kern/kernel.asm	/^f0104d62:	b2 23                	mov    $0x23,%dl$/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64:	ec                   	in     (%dx),%al$/;"	l
f0104d65	obj/kern/kernel.asm	/^f0104d65:	83 c8 01             	or     $0x1,%eax$/;"	l
f0104d68	obj/kern/kernel.asm	/^f0104d68:	ee                   	out    %al,(%dx)$/;"	l
f0104d69	obj/kern/kernel.asm	/^f0104d69:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c:	5b                   	pop    %ebx$/;"	l
f0104d6d	obj/kern/kernel.asm	/^f0104d6d:	5e                   	pop    %esi$/;"	l
f0104d6e	obj/kern/kernel.asm	/^f0104d6e:	5f                   	pop    %edi$/;"	l
f0104d6f	obj/kern/kernel.asm	/^f0104d6f:	5d                   	pop    %ebp$/;"	l
f0104d70	obj/kern/kernel.asm	/^f0104d70:	c3                   	ret    $/;"	l
f0104d71	obj/kern/kernel.asm	/^f0104d71 <lapicw>:$/;"	l
f0104d71	obj/kern/kernel.asm	/^f0104d71:	55                   	push   %ebp$/;"	l
f0104d72	obj/kern/kernel.asm	/^f0104d72:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d74	obj/kern/kernel.asm	/^f0104d74:	8b 0d 04 b0 26 f0    	mov    0xf026b004,%ecx$/;"	l
f0104d7a	obj/kern/kernel.asm	/^f0104d7a:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0104d7d	obj/kern/kernel.asm	/^f0104d7d:	89 10                	mov    %edx,(%eax)$/;"	l
f0104d7f	obj/kern/kernel.asm	/^f0104d7f:	a1 04 b0 26 f0       	mov    0xf026b004,%eax$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0104d87	obj/kern/kernel.asm	/^f0104d87:	5d                   	pop    %ebp$/;"	l
f0104d88	obj/kern/kernel.asm	/^f0104d88:	c3                   	ret    $/;"	l
f0104d89	obj/kern/kernel.asm	/^f0104d89 <cpunum>:$/;"	l
f0104d89	obj/kern/kernel.asm	/^f0104d89:	55                   	push   %ebp$/;"	l
f0104d8a	obj/kern/kernel.asm	/^f0104d8a:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d8c	obj/kern/kernel.asm	/^f0104d8c:	a1 04 b0 26 f0       	mov    0xf026b004,%eax$/;"	l
f0104d91	obj/kern/kernel.asm	/^f0104d91:	85 c0                	test   %eax,%eax$/;"	l
f0104d93	obj/kern/kernel.asm	/^f0104d93:	74 08                	je     f0104d9d <cpunum+0x14>$/;"	l
f0104d95	obj/kern/kernel.asm	/^f0104d95:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0104d98	obj/kern/kernel.asm	/^f0104d98:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0104d9b	obj/kern/kernel.asm	/^f0104d9b:	eb 05                	jmp    f0104da2 <cpunum+0x19>$/;"	l
f0104d9d	obj/kern/kernel.asm	/^f0104d9d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2:	5d                   	pop    %ebp$/;"	l
f0104da3	obj/kern/kernel.asm	/^f0104da3:	c3                   	ret    $/;"	l
f0104da4	obj/kern/kernel.asm	/^f0104da4 <lapic_init>:$/;"	l
f0104da4	obj/kern/kernel.asm	/^f0104da4:	a1 00 b0 26 f0       	mov    0xf026b000,%eax$/;"	l
f0104da9	obj/kern/kernel.asm	/^f0104da9:	85 c0                	test   %eax,%eax$/;"	l
f0104dab	obj/kern/kernel.asm	/^f0104dab:	0f 84 23 01 00 00    	je     f0104ed4 <lapic_init+0x130>$/;"	l
f0104db1	obj/kern/kernel.asm	/^f0104db1:	55                   	push   %ebp$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	89 e5                	mov    %esp,%ebp$/;"	l
f0104db4	obj/kern/kernel.asm	/^f0104db4:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104db7	obj/kern/kernel.asm	/^f0104db7:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	00 $/;"	l
f0104dbf	obj/kern/kernel.asm	/^f0104dbf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104dc2	obj/kern/kernel.asm	/^f0104dc2:	e8 0f c2 ff ff       	call   f0100fd6 <mmio_map_region>$/;"	l
f0104dc7	obj/kern/kernel.asm	/^f0104dc7:	a3 04 b0 26 f0       	mov    %eax,0xf026b004$/;"	l
f0104dcc	obj/kern/kernel.asm	/^f0104dcc:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0104dd1	obj/kern/kernel.asm	/^f0104dd1:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0104dd6	obj/kern/kernel.asm	/^f0104dd6:	e8 96 ff ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104ddb	obj/kern/kernel.asm	/^f0104ddb:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0104de0	obj/kern/kernel.asm	/^f0104de0:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0104de5	obj/kern/kernel.asm	/^f0104de5:	e8 87 ff ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104dea	obj/kern/kernel.asm	/^f0104dea:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0104def	obj/kern/kernel.asm	/^f0104def:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4:	e8 78 ff ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104df9	obj/kern/kernel.asm	/^f0104df9:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0104dfe	obj/kern/kernel.asm	/^f0104dfe:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0104e03	obj/kern/kernel.asm	/^f0104e03:	e8 69 ff ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104e08	obj/kern/kernel.asm	/^f0104e08:	e8 7c ff ff ff       	call   f0104d89 <cpunum>$/;"	l
f0104e0d	obj/kern/kernel.asm	/^f0104e0d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e10	obj/kern/kernel.asm	/^f0104e10:	05 20 a0 22 f0       	add    $0xf022a020,%eax$/;"	l
f0104e15	obj/kern/kernel.asm	/^f0104e15:	39 05 c0 a3 22 f0    	cmp    %eax,0xf022a3c0$/;"	l
f0104e1b	obj/kern/kernel.asm	/^f0104e1b:	74 0f                	je     f0104e2c <lapic_init+0x88>$/;"	l
f0104e1d	obj/kern/kernel.asm	/^f0104e1d:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0104e22	obj/kern/kernel.asm	/^f0104e22:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0104e27	obj/kern/kernel.asm	/^f0104e27:	e8 45 ff ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104e2c	obj/kern/kernel.asm	/^f0104e2c:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0104e31	obj/kern/kernel.asm	/^f0104e31:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	e8 36 ff ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104e3b	obj/kern/kernel.asm	/^f0104e3b:	a1 04 b0 26 f0       	mov    0xf026b004,%eax$/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0104e43	obj/kern/kernel.asm	/^f0104e43:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104e46	obj/kern/kernel.asm	/^f0104e46:	3c 03                	cmp    $0x3,%al$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48:	76 0f                	jbe    f0104e59 <lapic_init+0xb5>$/;"	l
f0104e4a	obj/kern/kernel.asm	/^f0104e4a:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0104e4f	obj/kern/kernel.asm	/^f0104e4f:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	e8 18 ff ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104e59	obj/kern/kernel.asm	/^f0104e59:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0104e5e	obj/kern/kernel.asm	/^f0104e5e:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0104e63	obj/kern/kernel.asm	/^f0104e63:	e8 09 ff ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104e68	obj/kern/kernel.asm	/^f0104e68:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104e6d	obj/kern/kernel.asm	/^f0104e6d:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0104e72	obj/kern/kernel.asm	/^f0104e72:	e8 fa fe ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104e77	obj/kern/kernel.asm	/^f0104e77:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104e7c	obj/kern/kernel.asm	/^f0104e7c:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0104e81	obj/kern/kernel.asm	/^f0104e81:	e8 eb fe ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104e86	obj/kern/kernel.asm	/^f0104e86:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104e8b	obj/kern/kernel.asm	/^f0104e8b:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0104e90	obj/kern/kernel.asm	/^f0104e90:	e8 dc fe ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104e95	obj/kern/kernel.asm	/^f0104e95:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104e9a	obj/kern/kernel.asm	/^f0104e9a:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0104e9f	obj/kern/kernel.asm	/^f0104e9f:	e8 cd fe ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104ea4	obj/kern/kernel.asm	/^f0104ea4:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0104ea9	obj/kern/kernel.asm	/^f0104ea9:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0104eae	obj/kern/kernel.asm	/^f0104eae:	e8 be fe ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104eb3	obj/kern/kernel.asm	/^f0104eb3:	8b 15 04 b0 26 f0    	mov    0xf026b004,%edx$/;"	l
f0104eb9	obj/kern/kernel.asm	/^f0104eb9:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0104ebf	obj/kern/kernel.asm	/^f0104ebf:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0104ec2	obj/kern/kernel.asm	/^f0104ec2:	75 f5                	jne    f0104eb9 <lapic_init+0x115>$/;"	l
f0104ec4	obj/kern/kernel.asm	/^f0104ec4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104ec9	obj/kern/kernel.asm	/^f0104ec9:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0104ece	obj/kern/kernel.asm	/^f0104ece:	e8 9e fe ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104ed3	obj/kern/kernel.asm	/^f0104ed3:	c9                   	leave  $/;"	l
f0104ed4	obj/kern/kernel.asm	/^f0104ed4:	f3 c3                	repz ret $/;"	l
f0104ed6	obj/kern/kernel.asm	/^f0104ed6 <lapic_eoi>:$/;"	l
f0104ed6	obj/kern/kernel.asm	/^f0104ed6:	83 3d 04 b0 26 f0 00 	cmpl   $0x0,0xf026b004$/;"	l
f0104edd	obj/kern/kernel.asm	/^f0104edd:	74 13                	je     f0104ef2 <lapic_eoi+0x1c>$/;"	l
f0104edf	obj/kern/kernel.asm	/^f0104edf:	55                   	push   %ebp$/;"	l
f0104ee0	obj/kern/kernel.asm	/^f0104ee0:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ee2	obj/kern/kernel.asm	/^f0104ee2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104ee7	obj/kern/kernel.asm	/^f0104ee7:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0104eec	obj/kern/kernel.asm	/^f0104eec:	e8 80 fe ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104ef1	obj/kern/kernel.asm	/^f0104ef1:	5d                   	pop    %ebp$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	f3 c3                	repz ret $/;"	l
f0104ef4	obj/kern/kernel.asm	/^f0104ef4 <lapic_startap>:$/;"	l
f0104ef4	obj/kern/kernel.asm	/^f0104ef4:	55                   	push   %ebp$/;"	l
f0104ef5	obj/kern/kernel.asm	/^f0104ef5:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ef7	obj/kern/kernel.asm	/^f0104ef7:	56                   	push   %esi$/;"	l
f0104ef8	obj/kern/kernel.asm	/^f0104ef8:	53                   	push   %ebx$/;"	l
f0104ef9	obj/kern/kernel.asm	/^f0104ef9:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104efc	obj/kern/kernel.asm	/^f0104efc:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104eff	obj/kern/kernel.asm	/^f0104eff:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104f02	obj/kern/kernel.asm	/^f0104f02:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0104f07	obj/kern/kernel.asm	/^f0104f07:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0104f0c	obj/kern/kernel.asm	/^f0104f0c:	ee                   	out    %al,(%dx)$/;"	l
f0104f0d	obj/kern/kernel.asm	/^f0104f0d:	b2 71                	mov    $0x71,%dl$/;"	l
f0104f0f	obj/kern/kernel.asm	/^f0104f0f:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104f14	obj/kern/kernel.asm	/^f0104f14:	ee                   	out    %al,(%dx)$/;"	l
f0104f15	obj/kern/kernel.asm	/^f0104f15:	83 3d 08 9f 22 f0 00 	cmpl   $0x0,0xf0229f08$/;"	l
f0104f1c	obj/kern/kernel.asm	/^f0104f1c:	75 24                	jne    f0104f42 <lapic_startap+0x4e>$/;"	l
f0104f1e	obj/kern/kernel.asm	/^f0104f1e:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f0104f25	obj/kern/kernel.asm	/^f0104f25:	00 $/;"	l
f0104f26	obj/kern/kernel.asm	/^f0104f26:	c7 44 24 08 84 54 10 	movl   $0xf0105484,0x8(%esp)$/;"	l
f0104f2d	obj/kern/kernel.asm	/^f0104f2d:	f0 $/;"	l
f0104f2e	obj/kern/kernel.asm	/^f0104f2e:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
f0104f35	obj/kern/kernel.asm	/^f0104f35:	00 $/;"	l
f0104f36	obj/kern/kernel.asm	/^f0104f36:	c7 04 24 bc 6c 10 f0 	movl   $0xf0106cbc,(%esp)$/;"	l
f0104f3d	obj/kern/kernel.asm	/^f0104f3d:	e8 fe b0 ff ff       	call   f0100040 <_panic>$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f0104f49	obj/kern/kernel.asm	/^f0104f49:	00 00 $/;"	l
f0104f4b	obj/kern/kernel.asm	/^f0104f4b:	89 f0                	mov    %esi,%eax$/;"	l
f0104f4d	obj/kern/kernel.asm	/^f0104f4d:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0104f50	obj/kern/kernel.asm	/^f0104f50:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f0104f59	obj/kern/kernel.asm	/^f0104f59:	89 da                	mov    %ebx,%edx$/;"	l
f0104f5b	obj/kern/kernel.asm	/^f0104f5b:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60:	e8 0c fe ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104f65	obj/kern/kernel.asm	/^f0104f65:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f0104f6a	obj/kern/kernel.asm	/^f0104f6a:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0104f6f	obj/kern/kernel.asm	/^f0104f6f:	e8 fd fd ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104f74	obj/kern/kernel.asm	/^f0104f74:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0104f79	obj/kern/kernel.asm	/^f0104f79:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0104f7e	obj/kern/kernel.asm	/^f0104f7e:	e8 ee fd ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104f83	obj/kern/kernel.asm	/^f0104f83:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0104f86	obj/kern/kernel.asm	/^f0104f86:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f0104f8c	obj/kern/kernel.asm	/^f0104f8c:	89 da                	mov    %ebx,%edx$/;"	l
f0104f8e	obj/kern/kernel.asm	/^f0104f8e:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0104f93	obj/kern/kernel.asm	/^f0104f93:	e8 d9 fd ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104f98	obj/kern/kernel.asm	/^f0104f98:	89 f2                	mov    %esi,%edx$/;"	l
f0104f9a	obj/kern/kernel.asm	/^f0104f9a:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0104f9f	obj/kern/kernel.asm	/^f0104f9f:	e8 cd fd ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104fa4	obj/kern/kernel.asm	/^f0104fa4:	89 da                	mov    %ebx,%edx$/;"	l
f0104fa6	obj/kern/kernel.asm	/^f0104fa6:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0104fab	obj/kern/kernel.asm	/^f0104fab:	e8 c1 fd ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104fb0	obj/kern/kernel.asm	/^f0104fb0:	89 f2                	mov    %esi,%edx$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0104fb7	obj/kern/kernel.asm	/^f0104fb7:	e8 b5 fd ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104fbc	obj/kern/kernel.asm	/^f0104fbc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fbf	obj/kern/kernel.asm	/^f0104fbf:	5b                   	pop    %ebx$/;"	l
f0104fc0	obj/kern/kernel.asm	/^f0104fc0:	5e                   	pop    %esi$/;"	l
f0104fc1	obj/kern/kernel.asm	/^f0104fc1:	5d                   	pop    %ebp$/;"	l
f0104fc2	obj/kern/kernel.asm	/^f0104fc2:	c3                   	ret    $/;"	l
f0104fc3	obj/kern/kernel.asm	/^f0104fc3 <lapic_ipi>:$/;"	l
f0104fc3	obj/kern/kernel.asm	/^f0104fc3:	55                   	push   %ebp$/;"	l
f0104fc4	obj/kern/kernel.asm	/^f0104fc4:	89 e5                	mov    %esp,%ebp$/;"	l
f0104fc6	obj/kern/kernel.asm	/^f0104fc6:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104fc9	obj/kern/kernel.asm	/^f0104fc9:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0104fcf	obj/kern/kernel.asm	/^f0104fcf:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0104fd4	obj/kern/kernel.asm	/^f0104fd4:	e8 98 fd ff ff       	call   f0104d71 <lapicw>$/;"	l
f0104fd9	obj/kern/kernel.asm	/^f0104fd9:	8b 15 04 b0 26 f0    	mov    0xf026b004,%edx$/;"	l
f0104fdf	obj/kern/kernel.asm	/^f0104fdf:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0104fe5	obj/kern/kernel.asm	/^f0104fe5:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0104fe8	obj/kern/kernel.asm	/^f0104fe8:	75 f5                	jne    f0104fdf <lapic_ipi+0x1c>$/;"	l
f0104fea	obj/kern/kernel.asm	/^f0104fea:	5d                   	pop    %ebp$/;"	l
f0104feb	obj/kern/kernel.asm	/^f0104feb:	c3                   	ret    $/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec <__spin_initlock>:$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	55                   	push   %ebp$/;"	l
f0104fed	obj/kern/kernel.asm	/^f0104fed:	89 e5                	mov    %esp,%ebp$/;"	l
f0104fef	obj/kern/kernel.asm	/^f0104fef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104ff2	obj/kern/kernel.asm	/^f0104ff2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0104ff8	obj/kern/kernel.asm	/^f0104ff8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104ffb	obj/kern/kernel.asm	/^f0104ffb:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0104ffe	obj/kern/kernel.asm	/^f0104ffe:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0105005	obj/kern/kernel.asm	/^f0105005:	5d                   	pop    %ebp$/;"	l
f0105006	obj/kern/kernel.asm	/^f0105006:	c3                   	ret    $/;"	l
f0105007	obj/kern/kernel.asm	/^f0105007 <spin_lock>:$/;"	l
f0105007	obj/kern/kernel.asm	/^f0105007:	55                   	push   %ebp$/;"	l
f0105008	obj/kern/kernel.asm	/^f0105008:	89 e5                	mov    %esp,%ebp$/;"	l
f010500a	obj/kern/kernel.asm	/^f010500a:	56                   	push   %esi$/;"	l
f010500b	obj/kern/kernel.asm	/^f010500b:	53                   	push   %ebx$/;"	l
f010500c	obj/kern/kernel.asm	/^f010500c:	83 ec 20             	sub    $0x20,%esp$/;"	l
f010500f	obj/kern/kernel.asm	/^f010500f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105012	obj/kern/kernel.asm	/^f0105012:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0105015	obj/kern/kernel.asm	/^f0105015:	75 07                	jne    f010501e <spin_lock+0x17>$/;"	l
f0105017	obj/kern/kernel.asm	/^f0105017:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010501c	obj/kern/kernel.asm	/^f010501c:	eb 42                	jmp    f0105060 <spin_lock+0x59>$/;"	l
f010501e	obj/kern/kernel.asm	/^f010501e:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0105021	obj/kern/kernel.asm	/^f0105021:	e8 63 fd ff ff       	call   f0104d89 <cpunum>$/;"	l
f0105026	obj/kern/kernel.asm	/^f0105026:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105029	obj/kern/kernel.asm	/^f0105029:	05 20 a0 22 f0       	add    $0xf022a020,%eax$/;"	l
f010502e	obj/kern/kernel.asm	/^f010502e:	39 c6                	cmp    %eax,%esi$/;"	l
f0105030	obj/kern/kernel.asm	/^f0105030:	75 e5                	jne    f0105017 <spin_lock+0x10>$/;"	l
f0105032	obj/kern/kernel.asm	/^f0105032:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0105035	obj/kern/kernel.asm	/^f0105035:	e8 4f fd ff ff       	call   f0104d89 <cpunum>$/;"	l
f010503a	obj/kern/kernel.asm	/^f010503a:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f010503e	obj/kern/kernel.asm	/^f010503e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105042	obj/kern/kernel.asm	/^f0105042:	c7 44 24 08 cc 6c 10 	movl   $0xf0106ccc,0x8(%esp)$/;"	l
f0105049	obj/kern/kernel.asm	/^f0105049:	f0 $/;"	l
f010504a	obj/kern/kernel.asm	/^f010504a:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
f0105051	obj/kern/kernel.asm	/^f0105051:	00 $/;"	l
f0105052	obj/kern/kernel.asm	/^f0105052:	c7 04 24 30 6d 10 f0 	movl   $0xf0106d30,(%esp)$/;"	l
f0105059	obj/kern/kernel.asm	/^f0105059:	e8 e2 af ff ff       	call   f0100040 <_panic>$/;"	l
f010505e	obj/kern/kernel.asm	/^f010505e:	f3 90                	pause  $/;"	l
f0105060	obj/kern/kernel.asm	/^f0105060:	89 d0                	mov    %edx,%eax$/;"	l
f0105062	obj/kern/kernel.asm	/^f0105062:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0105065	obj/kern/kernel.asm	/^f0105065:	85 c0                	test   %eax,%eax$/;"	l
f0105067	obj/kern/kernel.asm	/^f0105067:	75 f5                	jne    f010505e <spin_lock+0x57>$/;"	l
f0105069	obj/kern/kernel.asm	/^f0105069:	e8 1b fd ff ff       	call   f0104d89 <cpunum>$/;"	l
f010506e	obj/kern/kernel.asm	/^f010506e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105071	obj/kern/kernel.asm	/^f0105071:	05 20 a0 22 f0       	add    $0xf022a020,%eax$/;"	l
f0105076	obj/kern/kernel.asm	/^f0105076:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0105079	obj/kern/kernel.asm	/^f0105079:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f010507c	obj/kern/kernel.asm	/^f010507c:	89 ea                	mov    %ebp,%edx$/;"	l
f010507e	obj/kern/kernel.asm	/^f010507e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105083	obj/kern/kernel.asm	/^f0105083:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f0105089	obj/kern/kernel.asm	/^f0105089:	76 12                	jbe    f010509d <spin_lock+0x96>$/;"	l
f010508b	obj/kern/kernel.asm	/^f010508b:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f010508e	obj/kern/kernel.asm	/^f010508e:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f0105091	obj/kern/kernel.asm	/^f0105091:	8b 12                	mov    (%edx),%edx$/;"	l
f0105093	obj/kern/kernel.asm	/^f0105093:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105096	obj/kern/kernel.asm	/^f0105096:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0105099	obj/kern/kernel.asm	/^f0105099:	75 e8                	jne    f0105083 <spin_lock+0x7c>$/;"	l
f010509b	obj/kern/kernel.asm	/^f010509b:	eb 0f                	jmp    f01050ac <spin_lock+0xa5>$/;"	l
f010509d	obj/kern/kernel.asm	/^f010509d:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f01050a4	obj/kern/kernel.asm	/^f01050a4:	83 c0 01             	add    $0x1,%eax$/;"	l
f01050a7	obj/kern/kernel.asm	/^f01050a7:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01050aa	obj/kern/kernel.asm	/^f01050aa:	7e f1                	jle    f010509d <spin_lock+0x96>$/;"	l
f01050ac	obj/kern/kernel.asm	/^f01050ac:	83 c4 20             	add    $0x20,%esp$/;"	l
f01050af	obj/kern/kernel.asm	/^f01050af:	5b                   	pop    %ebx$/;"	l
f01050b0	obj/kern/kernel.asm	/^f01050b0:	5e                   	pop    %esi$/;"	l
f01050b1	obj/kern/kernel.asm	/^f01050b1:	5d                   	pop    %ebp$/;"	l
f01050b2	obj/kern/kernel.asm	/^f01050b2:	c3                   	ret    $/;"	l
f01050b3	obj/kern/kernel.asm	/^f01050b3 <spin_unlock>:$/;"	l
f01050b3	obj/kern/kernel.asm	/^f01050b3:	55                   	push   %ebp$/;"	l
f01050b4	obj/kern/kernel.asm	/^f01050b4:	89 e5                	mov    %esp,%ebp$/;"	l
f01050b6	obj/kern/kernel.asm	/^f01050b6:	57                   	push   %edi$/;"	l
f01050b7	obj/kern/kernel.asm	/^f01050b7:	56                   	push   %esi$/;"	l
f01050b8	obj/kern/kernel.asm	/^f01050b8:	53                   	push   %ebx$/;"	l
f01050b9	obj/kern/kernel.asm	/^f01050b9:	83 ec 6c             	sub    $0x6c,%esp$/;"	l
f01050bc	obj/kern/kernel.asm	/^f01050bc:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01050bf	obj/kern/kernel.asm	/^f01050bf:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f01050c2	obj/kern/kernel.asm	/^f01050c2:	74 18                	je     f01050dc <spin_unlock+0x29>$/;"	l
f01050c4	obj/kern/kernel.asm	/^f01050c4:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f01050c7	obj/kern/kernel.asm	/^f01050c7:	e8 bd fc ff ff       	call   f0104d89 <cpunum>$/;"	l
f01050cc	obj/kern/kernel.asm	/^f01050cc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050cf	obj/kern/kernel.asm	/^f01050cf:	05 20 a0 22 f0       	add    $0xf022a020,%eax$/;"	l
f01050d4	obj/kern/kernel.asm	/^f01050d4:	39 c3                	cmp    %eax,%ebx$/;"	l
f01050d6	obj/kern/kernel.asm	/^f01050d6:	0f 84 ce 00 00 00    	je     f01051aa <spin_unlock+0xf7>$/;"	l
f01050dc	obj/kern/kernel.asm	/^f01050dc:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f01050e3	obj/kern/kernel.asm	/^f01050e3:	00 $/;"	l
f01050e4	obj/kern/kernel.asm	/^f01050e4:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f01050e7	obj/kern/kernel.asm	/^f01050e7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01050eb	obj/kern/kernel.asm	/^f01050eb:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f01050ee	obj/kern/kernel.asm	/^f01050ee:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	e8 8e f6 ff ff       	call   f0104784 <memmove>$/;"	l
f01050f6	obj/kern/kernel.asm	/^f01050f6:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f01050fc	obj/kern/kernel.asm	/^f01050fc:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f01050ff	obj/kern/kernel.asm	/^f01050ff:	e8 85 fc ff ff       	call   f0104d89 <cpunum>$/;"	l
f0105104	obj/kern/kernel.asm	/^f0105104:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0105108	obj/kern/kernel.asm	/^f0105108:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f010510c	obj/kern/kernel.asm	/^f010510c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105110	obj/kern/kernel.asm	/^f0105110:	c7 04 24 f8 6c 10 f0 	movl   $0xf0106cf8,(%esp)$/;"	l
f0105117	obj/kern/kernel.asm	/^f0105117:	e8 78 e1 ff ff       	call   f0103294 <cprintf>$/;"	l
f010511c	obj/kern/kernel.asm	/^f010511c:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f010511f	obj/kern/kernel.asm	/^f010511f:	eb 65                	jmp    f0105186 <spin_unlock+0xd3>$/;"	l
f0105121	obj/kern/kernel.asm	/^f0105121:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105125	obj/kern/kernel.asm	/^f0105125:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105128	obj/kern/kernel.asm	/^f0105128:	e8 38 eb ff ff       	call   f0103c65 <debuginfo_eip>$/;"	l
f010512d	obj/kern/kernel.asm	/^f010512d:	85 c0                	test   %eax,%eax$/;"	l
f010512f	obj/kern/kernel.asm	/^f010512f:	78 39                	js     f010516a <spin_unlock+0xb7>$/;"	l
f0105131	obj/kern/kernel.asm	/^f0105131:	8b 06                	mov    (%esi),%eax$/;"	l
f0105133	obj/kern/kernel.asm	/^f0105133:	89 c2                	mov    %eax,%edx$/;"	l
f0105135	obj/kern/kernel.asm	/^f0105135:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0105138	obj/kern/kernel.asm	/^f0105138:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f010513c	obj/kern/kernel.asm	/^f010513c:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
f010513f	obj/kern/kernel.asm	/^f010513f:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0105143	obj/kern/kernel.asm	/^f0105143:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
f0105146	obj/kern/kernel.asm	/^f0105146:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f010514a	obj/kern/kernel.asm	/^f010514a:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
f010514d	obj/kern/kernel.asm	/^f010514d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105151	obj/kern/kernel.asm	/^f0105151:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
f0105154	obj/kern/kernel.asm	/^f0105154:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105158	obj/kern/kernel.asm	/^f0105158:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010515c	obj/kern/kernel.asm	/^f010515c:	c7 04 24 40 6d 10 f0 	movl   $0xf0106d40,(%esp)$/;"	l
f0105163	obj/kern/kernel.asm	/^f0105163:	e8 2c e1 ff ff       	call   f0103294 <cprintf>$/;"	l
f0105168	obj/kern/kernel.asm	/^f0105168:	eb 12                	jmp    f010517c <spin_unlock+0xc9>$/;"	l
f010516a	obj/kern/kernel.asm	/^f010516a:	8b 06                	mov    (%esi),%eax$/;"	l
f010516c	obj/kern/kernel.asm	/^f010516c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105170	obj/kern/kernel.asm	/^f0105170:	c7 04 24 57 6d 10 f0 	movl   $0xf0106d57,(%esp)$/;"	l
f0105177	obj/kern/kernel.asm	/^f0105177:	e8 18 e1 ff ff       	call   f0103294 <cprintf>$/;"	l
f010517c	obj/kern/kernel.asm	/^f010517c:	83 c3 04             	add    $0x4,%ebx$/;"	l
f010517f	obj/kern/kernel.asm	/^f010517f:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0105182	obj/kern/kernel.asm	/^f0105182:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105184	obj/kern/kernel.asm	/^f0105184:	74 08                	je     f010518e <spin_unlock+0xdb>$/;"	l
f0105186	obj/kern/kernel.asm	/^f0105186:	89 de                	mov    %ebx,%esi$/;"	l
f0105188	obj/kern/kernel.asm	/^f0105188:	8b 03                	mov    (%ebx),%eax$/;"	l
f010518a	obj/kern/kernel.asm	/^f010518a:	85 c0                	test   %eax,%eax$/;"	l
f010518c	obj/kern/kernel.asm	/^f010518c:	75 93                	jne    f0105121 <spin_unlock+0x6e>$/;"	l
f010518e	obj/kern/kernel.asm	/^f010518e:	c7 44 24 08 5f 6d 10 	movl   $0xf0106d5f,0x8(%esp)$/;"	l
f0105195	obj/kern/kernel.asm	/^f0105195:	f0 $/;"	l
f0105196	obj/kern/kernel.asm	/^f0105196:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
f010519d	obj/kern/kernel.asm	/^f010519d:	00 $/;"	l
f010519e	obj/kern/kernel.asm	/^f010519e:	c7 04 24 30 6d 10 f0 	movl   $0xf0106d30,(%esp)$/;"	l
f01051a5	obj/kern/kernel.asm	/^f01051a5:	e8 96 ae ff ff       	call   f0100040 <_panic>$/;"	l
f01051aa	obj/kern/kernel.asm	/^f01051aa:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f01051b1	obj/kern/kernel.asm	/^f01051b1:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f01051b8	obj/kern/kernel.asm	/^f01051b8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01051bd	obj/kern/kernel.asm	/^f01051bd:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f01051c0	obj/kern/kernel.asm	/^f01051c0:	83 c4 6c             	add    $0x6c,%esp$/;"	l
f01051c3	obj/kern/kernel.asm	/^f01051c3:	5b                   	pop    %ebx$/;"	l
f01051c4	obj/kern/kernel.asm	/^f01051c4:	5e                   	pop    %esi$/;"	l
f01051c5	obj/kern/kernel.asm	/^f01051c5:	5f                   	pop    %edi$/;"	l
f01051c6	obj/kern/kernel.asm	/^f01051c6:	5d                   	pop    %ebp$/;"	l
f01051c7	obj/kern/kernel.asm	/^f01051c7:	c3                   	ret    $/;"	l
f01051c8	obj/kern/kernel.asm	/^f01051c8:	66 90                	xchg   %ax,%ax$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca:	66 90                	xchg   %ax,%ax$/;"	l
f01051cc	obj/kern/kernel.asm	/^f01051cc:	66 90                	xchg   %ax,%ax$/;"	l
f01051ce	obj/kern/kernel.asm	/^f01051ce:	66 90                	xchg   %ax,%ax$/;"	l
f01051d0	obj/kern/kernel.asm	/^f01051d0 <__udivdi3>:$/;"	l
f01051d0	obj/kern/kernel.asm	/^f01051d0:	55                   	push   %ebp$/;"	l
f01051d1	obj/kern/kernel.asm	/^f01051d1:	57                   	push   %edi$/;"	l
f01051d2	obj/kern/kernel.asm	/^f01051d2:	56                   	push   %esi$/;"	l
f01051d3	obj/kern/kernel.asm	/^f01051d3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01051d6	obj/kern/kernel.asm	/^f01051d6:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f01051da	obj/kern/kernel.asm	/^f01051da:	8b 7c 24 1c          	mov    0x1c(%esp),%edi$/;"	l
f01051de	obj/kern/kernel.asm	/^f01051de:	8b 6c 24 20          	mov    0x20(%esp),%ebp$/;"	l
f01051e2	obj/kern/kernel.asm	/^f01051e2:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f01051e6	obj/kern/kernel.asm	/^f01051e6:	85 c0                	test   %eax,%eax$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01051ec	obj/kern/kernel.asm	/^f01051ec:	89 ea                	mov    %ebp,%edx$/;"	l
f01051ee	obj/kern/kernel.asm	/^f01051ee:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01051f1	obj/kern/kernel.asm	/^f01051f1:	75 2d                	jne    f0105220 <__udivdi3+0x50>$/;"	l
f01051f3	obj/kern/kernel.asm	/^f01051f3:	39 e9                	cmp    %ebp,%ecx$/;"	l
f01051f5	obj/kern/kernel.asm	/^f01051f5:	77 61                	ja     f0105258 <__udivdi3+0x88>$/;"	l
f01051f7	obj/kern/kernel.asm	/^f01051f7:	85 c9                	test   %ecx,%ecx$/;"	l
f01051f9	obj/kern/kernel.asm	/^f01051f9:	89 ce                	mov    %ecx,%esi$/;"	l
f01051fb	obj/kern/kernel.asm	/^f01051fb:	75 0b                	jne    f0105208 <__udivdi3+0x38>$/;"	l
f01051fd	obj/kern/kernel.asm	/^f01051fd:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0105202	obj/kern/kernel.asm	/^f0105202:	31 d2                	xor    %edx,%edx$/;"	l
f0105204	obj/kern/kernel.asm	/^f0105204:	f7 f1                	div    %ecx$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206:	89 c6                	mov    %eax,%esi$/;"	l
f0105208	obj/kern/kernel.asm	/^f0105208:	31 d2                	xor    %edx,%edx$/;"	l
f010520a	obj/kern/kernel.asm	/^f010520a:	89 e8                	mov    %ebp,%eax$/;"	l
f010520c	obj/kern/kernel.asm	/^f010520c:	f7 f6                	div    %esi$/;"	l
f010520e	obj/kern/kernel.asm	/^f010520e:	89 c5                	mov    %eax,%ebp$/;"	l
f0105210	obj/kern/kernel.asm	/^f0105210:	89 f8                	mov    %edi,%eax$/;"	l
f0105212	obj/kern/kernel.asm	/^f0105212:	f7 f6                	div    %esi$/;"	l
f0105214	obj/kern/kernel.asm	/^f0105214:	89 ea                	mov    %ebp,%edx$/;"	l
f0105216	obj/kern/kernel.asm	/^f0105216:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0105219	obj/kern/kernel.asm	/^f0105219:	5e                   	pop    %esi$/;"	l
f010521a	obj/kern/kernel.asm	/^f010521a:	5f                   	pop    %edi$/;"	l
f010521b	obj/kern/kernel.asm	/^f010521b:	5d                   	pop    %ebp$/;"	l
f010521c	obj/kern/kernel.asm	/^f010521c:	c3                   	ret    $/;"	l
f010521d	obj/kern/kernel.asm	/^f010521d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105220	obj/kern/kernel.asm	/^f0105220:	39 e8                	cmp    %ebp,%eax$/;"	l
f0105222	obj/kern/kernel.asm	/^f0105222:	77 24                	ja     f0105248 <__udivdi3+0x78>$/;"	l
f0105224	obj/kern/kernel.asm	/^f0105224:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f0105227	obj/kern/kernel.asm	/^f0105227:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f010522a	obj/kern/kernel.asm	/^f010522a:	75 3c                	jne    f0105268 <__udivdi3+0x98>$/;"	l
f010522c	obj/kern/kernel.asm	/^f010522c:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f0105230	obj/kern/kernel.asm	/^f0105230:	39 34 24             	cmp    %esi,(%esp)$/;"	l
f0105233	obj/kern/kernel.asm	/^f0105233:	0f 86 9f 00 00 00    	jbe    f01052d8 <__udivdi3+0x108>$/;"	l
f0105239	obj/kern/kernel.asm	/^f0105239:	39 d0                	cmp    %edx,%eax$/;"	l
f010523b	obj/kern/kernel.asm	/^f010523b:	0f 82 97 00 00 00    	jb     f01052d8 <__udivdi3+0x108>$/;"	l
f0105241	obj/kern/kernel.asm	/^f0105241:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105248	obj/kern/kernel.asm	/^f0105248:	31 d2                	xor    %edx,%edx$/;"	l
f010524a	obj/kern/kernel.asm	/^f010524a:	31 c0                	xor    %eax,%eax$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010524f	obj/kern/kernel.asm	/^f010524f:	5e                   	pop    %esi$/;"	l
f0105250	obj/kern/kernel.asm	/^f0105250:	5f                   	pop    %edi$/;"	l
f0105251	obj/kern/kernel.asm	/^f0105251:	5d                   	pop    %ebp$/;"	l
f0105252	obj/kern/kernel.asm	/^f0105252:	c3                   	ret    $/;"	l
f0105253	obj/kern/kernel.asm	/^f0105253:	90                   	nop$/;"	l
f0105254	obj/kern/kernel.asm	/^f0105254:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105258	obj/kern/kernel.asm	/^f0105258:	89 f8                	mov    %edi,%eax$/;"	l
f010525a	obj/kern/kernel.asm	/^f010525a:	f7 f1                	div    %ecx$/;"	l
f010525c	obj/kern/kernel.asm	/^f010525c:	31 d2                	xor    %edx,%edx$/;"	l
f010525e	obj/kern/kernel.asm	/^f010525e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0105261	obj/kern/kernel.asm	/^f0105261:	5e                   	pop    %esi$/;"	l
f0105262	obj/kern/kernel.asm	/^f0105262:	5f                   	pop    %edi$/;"	l
f0105263	obj/kern/kernel.asm	/^f0105263:	5d                   	pop    %ebp$/;"	l
f0105264	obj/kern/kernel.asm	/^f0105264:	c3                   	ret    $/;"	l
f0105265	obj/kern/kernel.asm	/^f0105265:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105268	obj/kern/kernel.asm	/^f0105268:	89 e9                	mov    %ebp,%ecx$/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f010526d	obj/kern/kernel.asm	/^f010526d:	d3 e0                	shl    %cl,%eax$/;"	d
f010526f	obj/kern/kernel.asm	/^f010526f:	89 c6                	mov    %eax,%esi$/;"	l
f0105271	obj/kern/kernel.asm	/^f0105271:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0105276	obj/kern/kernel.asm	/^f0105276:	29 e8                	sub    %ebp,%eax$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	89 c1                	mov    %eax,%ecx$/;"	l
f010527a	obj/kern/kernel.asm	/^f010527a:	d3 ef                	shr    %cl,%edi$/;"	d
f010527c	obj/kern/kernel.asm	/^f010527c:	89 e9                	mov    %ebp,%ecx$/;"	l
f010527e	obj/kern/kernel.asm	/^f010527e:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f0105285	obj/kern/kernel.asm	/^f0105285:	09 74 24 08          	or     %esi,0x8(%esp)$/;"	l
f0105289	obj/kern/kernel.asm	/^f0105289:	89 d6                	mov    %edx,%esi$/;"	l
f010528b	obj/kern/kernel.asm	/^f010528b:	d3 e7                	shl    %cl,%edi$/;"	d
f010528d	obj/kern/kernel.asm	/^f010528d:	89 c1                	mov    %eax,%ecx$/;"	l
f010528f	obj/kern/kernel.asm	/^f010528f:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105292	obj/kern/kernel.asm	/^f0105292:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	d3 ee                	shr    %cl,%esi$/;"	d
f0105298	obj/kern/kernel.asm	/^f0105298:	89 e9                	mov    %ebp,%ecx$/;"	l
f010529a	obj/kern/kernel.asm	/^f010529a:	d3 e2                	shl    %cl,%edx$/;"	d
f010529c	obj/kern/kernel.asm	/^f010529c:	89 c1                	mov    %eax,%ecx$/;"	l
f010529e	obj/kern/kernel.asm	/^f010529e:	d3 ef                	shr    %cl,%edi$/;"	d
f01052a0	obj/kern/kernel.asm	/^f01052a0:	09 d7                	or     %edx,%edi$/;"	l
f01052a2	obj/kern/kernel.asm	/^f01052a2:	89 f2                	mov    %esi,%edx$/;"	l
f01052a4	obj/kern/kernel.asm	/^f01052a4:	89 f8                	mov    %edi,%eax$/;"	l
f01052a6	obj/kern/kernel.asm	/^f01052a6:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f01052aa	obj/kern/kernel.asm	/^f01052aa:	89 d6                	mov    %edx,%esi$/;"	l
f01052ac	obj/kern/kernel.asm	/^f01052ac:	89 c7                	mov    %eax,%edi$/;"	l
f01052ae	obj/kern/kernel.asm	/^f01052ae:	f7 24 24             	mull   (%esp)$/;"	l
f01052b1	obj/kern/kernel.asm	/^f01052b1:	39 d6                	cmp    %edx,%esi$/;"	l
f01052b3	obj/kern/kernel.asm	/^f01052b3:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01052b6	obj/kern/kernel.asm	/^f01052b6:	72 30                	jb     f01052e8 <__udivdi3+0x118>$/;"	l
f01052b8	obj/kern/kernel.asm	/^f01052b8:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f01052bc	obj/kern/kernel.asm	/^f01052bc:	89 e9                	mov    %ebp,%ecx$/;"	l
f01052be	obj/kern/kernel.asm	/^f01052be:	d3 e2                	shl    %cl,%edx$/;"	d
f01052c0	obj/kern/kernel.asm	/^f01052c0:	39 c2                	cmp    %eax,%edx$/;"	l
f01052c2	obj/kern/kernel.asm	/^f01052c2:	73 05                	jae    f01052c9 <__udivdi3+0xf9>$/;"	l
f01052c4	obj/kern/kernel.asm	/^f01052c4:	3b 34 24             	cmp    (%esp),%esi$/;"	l
f01052c7	obj/kern/kernel.asm	/^f01052c7:	74 1f                	je     f01052e8 <__udivdi3+0x118>$/;"	l
f01052c9	obj/kern/kernel.asm	/^f01052c9:	89 f8                	mov    %edi,%eax$/;"	l
f01052cb	obj/kern/kernel.asm	/^f01052cb:	31 d2                	xor    %edx,%edx$/;"	l
f01052cd	obj/kern/kernel.asm	/^f01052cd:	e9 7a ff ff ff       	jmp    f010524c <__udivdi3+0x7c>$/;"	l
f01052d2	obj/kern/kernel.asm	/^f01052d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f01052d8	obj/kern/kernel.asm	/^f01052d8:	31 d2                	xor    %edx,%edx$/;"	l
f01052da	obj/kern/kernel.asm	/^f01052da:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01052df	obj/kern/kernel.asm	/^f01052df:	e9 68 ff ff ff       	jmp    f010524c <__udivdi3+0x7c>$/;"	l
f01052e4	obj/kern/kernel.asm	/^f01052e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01052e8	obj/kern/kernel.asm	/^f01052e8:	8d 47 ff             	lea    -0x1(%edi),%eax$/;"	l
f01052eb	obj/kern/kernel.asm	/^f01052eb:	31 d2                	xor    %edx,%edx$/;"	l
f01052ed	obj/kern/kernel.asm	/^f01052ed:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01052f0	obj/kern/kernel.asm	/^f01052f0:	5e                   	pop    %esi$/;"	l
f01052f1	obj/kern/kernel.asm	/^f01052f1:	5f                   	pop    %edi$/;"	l
f01052f2	obj/kern/kernel.asm	/^f01052f2:	5d                   	pop    %ebp$/;"	l
f01052f3	obj/kern/kernel.asm	/^f01052f3:	c3                   	ret    $/;"	l
f01052f4	obj/kern/kernel.asm	/^f01052f4:	66 90                	xchg   %ax,%ax$/;"	l
f01052f6	obj/kern/kernel.asm	/^f01052f6:	66 90                	xchg   %ax,%ax$/;"	l
f01052f8	obj/kern/kernel.asm	/^f01052f8:	66 90                	xchg   %ax,%ax$/;"	l
f01052fa	obj/kern/kernel.asm	/^f01052fa:	66 90                	xchg   %ax,%ax$/;"	l
f01052fc	obj/kern/kernel.asm	/^f01052fc:	66 90                	xchg   %ax,%ax$/;"	l
f01052fe	obj/kern/kernel.asm	/^f01052fe:	66 90                	xchg   %ax,%ax$/;"	l
f0105300	obj/kern/kernel.asm	/^f0105300 <__umoddi3>:$/;"	l
f0105300	obj/kern/kernel.asm	/^f0105300:	55                   	push   %ebp$/;"	l
f0105301	obj/kern/kernel.asm	/^f0105301:	57                   	push   %edi$/;"	l
f0105302	obj/kern/kernel.asm	/^f0105302:	56                   	push   %esi$/;"	l
f0105303	obj/kern/kernel.asm	/^f0105303:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105306	obj/kern/kernel.asm	/^f0105306:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f010530a	obj/kern/kernel.asm	/^f010530a:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f010530e	obj/kern/kernel.asm	/^f010530e:	8b 74 24 2c          	mov    0x2c(%esp),%esi$/;"	l
f0105312	obj/kern/kernel.asm	/^f0105312:	89 c7                	mov    %eax,%edi$/;"	l
f0105314	obj/kern/kernel.asm	/^f0105314:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105318	obj/kern/kernel.asm	/^f0105318:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
f010531c	obj/kern/kernel.asm	/^f010531c:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f0105320	obj/kern/kernel.asm	/^f0105320:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105323	obj/kern/kernel.asm	/^f0105323:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105327	obj/kern/kernel.asm	/^f0105327:	85 c0                	test   %eax,%eax$/;"	l
f0105329	obj/kern/kernel.asm	/^f0105329:	89 c2                	mov    %eax,%edx$/;"	l
f010532b	obj/kern/kernel.asm	/^f010532b:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010532f	obj/kern/kernel.asm	/^f010532f:	75 17                	jne    f0105348 <__umoddi3+0x48>$/;"	l
f0105331	obj/kern/kernel.asm	/^f0105331:	39 fe                	cmp    %edi,%esi$/;"	l
f0105333	obj/kern/kernel.asm	/^f0105333:	76 4b                	jbe    f0105380 <__umoddi3+0x80>$/;"	l
f0105335	obj/kern/kernel.asm	/^f0105335:	89 c8                	mov    %ecx,%eax$/;"	l
f0105337	obj/kern/kernel.asm	/^f0105337:	89 fa                	mov    %edi,%edx$/;"	l
f0105339	obj/kern/kernel.asm	/^f0105339:	f7 f6                	div    %esi$/;"	l
f010533b	obj/kern/kernel.asm	/^f010533b:	89 d0                	mov    %edx,%eax$/;"	l
f010533d	obj/kern/kernel.asm	/^f010533d:	31 d2                	xor    %edx,%edx$/;"	l
f010533f	obj/kern/kernel.asm	/^f010533f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105342	obj/kern/kernel.asm	/^f0105342:	5e                   	pop    %esi$/;"	l
f0105343	obj/kern/kernel.asm	/^f0105343:	5f                   	pop    %edi$/;"	l
f0105344	obj/kern/kernel.asm	/^f0105344:	5d                   	pop    %ebp$/;"	l
f0105345	obj/kern/kernel.asm	/^f0105345:	c3                   	ret    $/;"	l
f0105346	obj/kern/kernel.asm	/^f0105346:	66 90                	xchg   %ax,%ax$/;"	l
f0105348	obj/kern/kernel.asm	/^f0105348:	39 f8                	cmp    %edi,%eax$/;"	l
f010534a	obj/kern/kernel.asm	/^f010534a:	77 54                	ja     f01053a0 <__umoddi3+0xa0>$/;"	l
f010534c	obj/kern/kernel.asm	/^f010534c:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f010534f	obj/kern/kernel.asm	/^f010534f:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0105352	obj/kern/kernel.asm	/^f0105352:	75 5c                	jne    f01053b0 <__umoddi3+0xb0>$/;"	l
f0105354	obj/kern/kernel.asm	/^f0105354:	8b 7c 24 08          	mov    0x8(%esp),%edi$/;"	l
f0105358	obj/kern/kernel.asm	/^f0105358:	39 3c 24             	cmp    %edi,(%esp)$/;"	l
f010535b	obj/kern/kernel.asm	/^f010535b:	0f 87 e7 00 00 00    	ja     f0105448 <__umoddi3+0x148>$/;"	l
f0105361	obj/kern/kernel.asm	/^f0105361:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0105365	obj/kern/kernel.asm	/^f0105365:	29 f1                	sub    %esi,%ecx$/;"	l
f0105367	obj/kern/kernel.asm	/^f0105367:	19 c7                	sbb    %eax,%edi$/;"	l
f0105369	obj/kern/kernel.asm	/^f0105369:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010536d	obj/kern/kernel.asm	/^f010536d:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0105371	obj/kern/kernel.asm	/^f0105371:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0105375	obj/kern/kernel.asm	/^f0105375:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0105379	obj/kern/kernel.asm	/^f0105379:	83 c4 14             	add    $0x14,%esp$/;"	l
f010537c	obj/kern/kernel.asm	/^f010537c:	5e                   	pop    %esi$/;"	l
f010537d	obj/kern/kernel.asm	/^f010537d:	5f                   	pop    %edi$/;"	l
f010537e	obj/kern/kernel.asm	/^f010537e:	5d                   	pop    %ebp$/;"	l
f010537f	obj/kern/kernel.asm	/^f010537f:	c3                   	ret    $/;"	l
f0105380	obj/kern/kernel.asm	/^f0105380:	85 f6                	test   %esi,%esi$/;"	l
f0105382	obj/kern/kernel.asm	/^f0105382:	89 f5                	mov    %esi,%ebp$/;"	l
f0105384	obj/kern/kernel.asm	/^f0105384:	75 0b                	jne    f0105391 <__umoddi3+0x91>$/;"	l
f0105386	obj/kern/kernel.asm	/^f0105386:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010538b	obj/kern/kernel.asm	/^f010538b:	31 d2                	xor    %edx,%edx$/;"	l
f010538d	obj/kern/kernel.asm	/^f010538d:	f7 f6                	div    %esi$/;"	l
f010538f	obj/kern/kernel.asm	/^f010538f:	89 c5                	mov    %eax,%ebp$/;"	l
f0105391	obj/kern/kernel.asm	/^f0105391:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395:	31 d2                	xor    %edx,%edx$/;"	l
f0105397	obj/kern/kernel.asm	/^f0105397:	f7 f5                	div    %ebp$/;"	l
f0105399	obj/kern/kernel.asm	/^f0105399:	89 c8                	mov    %ecx,%eax$/;"	l
f010539b	obj/kern/kernel.asm	/^f010539b:	f7 f5                	div    %ebp$/;"	l
f010539d	obj/kern/kernel.asm	/^f010539d:	eb 9c                	jmp    f010533b <__umoddi3+0x3b>$/;"	l
f010539f	obj/kern/kernel.asm	/^f010539f:	90                   	nop$/;"	l
f01053a0	obj/kern/kernel.asm	/^f01053a0:	89 c8                	mov    %ecx,%eax$/;"	l
f01053a2	obj/kern/kernel.asm	/^f01053a2:	89 fa                	mov    %edi,%edx$/;"	l
f01053a4	obj/kern/kernel.asm	/^f01053a4:	83 c4 14             	add    $0x14,%esp$/;"	l
f01053a7	obj/kern/kernel.asm	/^f01053a7:	5e                   	pop    %esi$/;"	l
f01053a8	obj/kern/kernel.asm	/^f01053a8:	5f                   	pop    %edi$/;"	l
f01053a9	obj/kern/kernel.asm	/^f01053a9:	5d                   	pop    %ebp$/;"	l
f01053aa	obj/kern/kernel.asm	/^f01053aa:	c3                   	ret    $/;"	l
f01053ab	obj/kern/kernel.asm	/^f01053ab:	90                   	nop$/;"	l
f01053ac	obj/kern/kernel.asm	/^f01053ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01053b0	obj/kern/kernel.asm	/^f01053b0:	8b 04 24             	mov    (%esp),%eax$/;"	l
f01053b3	obj/kern/kernel.asm	/^f01053b3:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
f01053b8	obj/kern/kernel.asm	/^f01053b8:	89 e9                	mov    %ebp,%ecx$/;"	l
f01053ba	obj/kern/kernel.asm	/^f01053ba:	29 ee                	sub    %ebp,%esi$/;"	l
f01053bc	obj/kern/kernel.asm	/^f01053bc:	d3 e2                	shl    %cl,%edx$/;"	d
f01053be	obj/kern/kernel.asm	/^f01053be:	89 f1                	mov    %esi,%ecx$/;"	l
f01053c0	obj/kern/kernel.asm	/^f01053c0:	d3 e8                	shr    %cl,%eax$/;"	d
f01053c2	obj/kern/kernel.asm	/^f01053c2:	89 e9                	mov    %ebp,%ecx$/;"	l
f01053c4	obj/kern/kernel.asm	/^f01053c4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01053c8	obj/kern/kernel.asm	/^f01053c8:	8b 04 24             	mov    (%esp),%eax$/;"	l
f01053cb	obj/kern/kernel.asm	/^f01053cb:	09 54 24 04          	or     %edx,0x4(%esp)$/;"	l
f01053cf	obj/kern/kernel.asm	/^f01053cf:	89 fa                	mov    %edi,%edx$/;"	l
f01053d1	obj/kern/kernel.asm	/^f01053d1:	d3 e0                	shl    %cl,%eax$/;"	d
f01053d3	obj/kern/kernel.asm	/^f01053d3:	89 f1                	mov    %esi,%ecx$/;"	l
f01053d5	obj/kern/kernel.asm	/^f01053d5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01053d9	obj/kern/kernel.asm	/^f01053d9:	8b 44 24 10          	mov    0x10(%esp),%eax$/;"	l
f01053dd	obj/kern/kernel.asm	/^f01053dd:	d3 ea                	shr    %cl,%edx$/;"	d
f01053df	obj/kern/kernel.asm	/^f01053df:	89 e9                	mov    %ebp,%ecx$/;"	l
f01053e1	obj/kern/kernel.asm	/^f01053e1:	d3 e7                	shl    %cl,%edi$/;"	d
f01053e3	obj/kern/kernel.asm	/^f01053e3:	89 f1                	mov    %esi,%ecx$/;"	l
f01053e5	obj/kern/kernel.asm	/^f01053e5:	d3 e8                	shr    %cl,%eax$/;"	d
f01053e7	obj/kern/kernel.asm	/^f01053e7:	89 e9                	mov    %ebp,%ecx$/;"	l
f01053e9	obj/kern/kernel.asm	/^f01053e9:	09 f8                	or     %edi,%eax$/;"	l
f01053eb	obj/kern/kernel.asm	/^f01053eb:	8b 7c 24 10          	mov    0x10(%esp),%edi$/;"	l
f01053ef	obj/kern/kernel.asm	/^f01053ef:	f7 74 24 04          	divl   0x4(%esp)$/;"	l
f01053f3	obj/kern/kernel.asm	/^f01053f3:	d3 e7                	shl    %cl,%edi$/;"	d
f01053f5	obj/kern/kernel.asm	/^f01053f5:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01053f9	obj/kern/kernel.asm	/^f01053f9:	89 d7                	mov    %edx,%edi$/;"	l
f01053fb	obj/kern/kernel.asm	/^f01053fb:	f7 64 24 08          	mull   0x8(%esp)$/;"	l
f01053ff	obj/kern/kernel.asm	/^f01053ff:	39 d7                	cmp    %edx,%edi$/;"	l
f0105401	obj/kern/kernel.asm	/^f0105401:	89 c1                	mov    %eax,%ecx$/;"	l
f0105403	obj/kern/kernel.asm	/^f0105403:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105406	obj/kern/kernel.asm	/^f0105406:	72 2c                	jb     f0105434 <__umoddi3+0x134>$/;"	l
f0105408	obj/kern/kernel.asm	/^f0105408:	39 44 24 0c          	cmp    %eax,0xc(%esp)$/;"	l
f010540c	obj/kern/kernel.asm	/^f010540c:	72 22                	jb     f0105430 <__umoddi3+0x130>$/;"	l
f010540e	obj/kern/kernel.asm	/^f010540e:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f0105412	obj/kern/kernel.asm	/^f0105412:	29 c8                	sub    %ecx,%eax$/;"	l
f0105414	obj/kern/kernel.asm	/^f0105414:	19 d7                	sbb    %edx,%edi$/;"	l
f0105416	obj/kern/kernel.asm	/^f0105416:	89 e9                	mov    %ebp,%ecx$/;"	l
f0105418	obj/kern/kernel.asm	/^f0105418:	89 fa                	mov    %edi,%edx$/;"	l
f010541a	obj/kern/kernel.asm	/^f010541a:	d3 e8                	shr    %cl,%eax$/;"	d
f010541c	obj/kern/kernel.asm	/^f010541c:	89 f1                	mov    %esi,%ecx$/;"	l
f010541e	obj/kern/kernel.asm	/^f010541e:	d3 e2                	shl    %cl,%edx$/;"	d
f0105420	obj/kern/kernel.asm	/^f0105420:	89 e9                	mov    %ebp,%ecx$/;"	l
f0105422	obj/kern/kernel.asm	/^f0105422:	d3 ef                	shr    %cl,%edi$/;"	d
f0105424	obj/kern/kernel.asm	/^f0105424:	09 d0                	or     %edx,%eax$/;"	l
f0105426	obj/kern/kernel.asm	/^f0105426:	89 fa                	mov    %edi,%edx$/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	83 c4 14             	add    $0x14,%esp$/;"	l
f010542b	obj/kern/kernel.asm	/^f010542b:	5e                   	pop    %esi$/;"	l
f010542c	obj/kern/kernel.asm	/^f010542c:	5f                   	pop    %edi$/;"	l
f010542d	obj/kern/kernel.asm	/^f010542d:	5d                   	pop    %ebp$/;"	l
f010542e	obj/kern/kernel.asm	/^f010542e:	c3                   	ret    $/;"	l
f010542f	obj/kern/kernel.asm	/^f010542f:	90                   	nop$/;"	l
f0105430	obj/kern/kernel.asm	/^f0105430:	39 d7                	cmp    %edx,%edi$/;"	l
f0105432	obj/kern/kernel.asm	/^f0105432:	75 da                	jne    f010540e <__umoddi3+0x10e>$/;"	l
f0105434	obj/kern/kernel.asm	/^f0105434:	8b 14 24             	mov    (%esp),%edx$/;"	l
f0105437	obj/kern/kernel.asm	/^f0105437:	89 c1                	mov    %eax,%ecx$/;"	l
f0105439	obj/kern/kernel.asm	/^f0105439:	2b 4c 24 08          	sub    0x8(%esp),%ecx$/;"	l
f010543d	obj/kern/kernel.asm	/^f010543d:	1b 54 24 04          	sbb    0x4(%esp),%edx$/;"	l
f0105441	obj/kern/kernel.asm	/^f0105441:	eb cb                	jmp    f010540e <__umoddi3+0x10e>$/;"	l
f0105443	obj/kern/kernel.asm	/^f0105443:	90                   	nop$/;"	l
f0105444	obj/kern/kernel.asm	/^f0105444:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105448	obj/kern/kernel.asm	/^f0105448:	3b 44 24 0c          	cmp    0xc(%esp),%eax$/;"	l
f010544c	obj/kern/kernel.asm	/^f010544c:	0f 82 0f ff ff ff    	jb     f0105361 <__umoddi3+0x61>$/;"	l
f0105452	obj/kern/kernel.asm	/^f0105452:	e9 1a ff ff ff       	jmp    f0105371 <__umoddi3+0x71>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon5
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:	access:public
fileno	gradelib.py	/^    def fileno(self):$/;"	f	access:public
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient	access:public
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:	access:public
fork	inc/lib.h	/^envid_t	fork(void);$/;"	p	signature:(void)
fork	lib/fork.c	/^fork(void)$/;"	f	signature:(void)
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f	signature:(const char *cur, char branch)
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f	signature:(const char *cur)
forktree	user/forktree.c	/^void forktree(const char *cur);$/;"	p	file:	signature:(const char *cur)
fprintf	inc/stdio.h	/^int	fprintf(int fd, const char *fmt, ...);$/;"	p	signature:(int fd, const char *fmt, ...)
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:	signature:(uint32_t pcs[])
get_current_test	gradelib.py	/^def get_current_test():$/;"	f	access:public
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f	access:public
getchar	inc/stdio.h	/^int	getchar(void);$/;"	p	signature:(void)
getchar	kern/console.c	/^getchar(void)$/;"	f	signature:(void)
getchar	lib/console.c	/^getchar(void)$/;"	f	signature:(void)
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient	access:public
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:	signature:(struct spinlock *lock)
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:	signature:(void)
i386_init	kern/init.c	/^i386_init(void)$/;"	f	signature:(void)
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
idx_va	obj/kern/kernel.asm	/^	idx_va = ROUNDDOWN(idx_va, PGSIZE);$/;"	d
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:	access:public
inb	inc/x86.h	/^inb(int port)$/;"	f	signature:(int port)
inb	inc/x86.h	/^static __inline uint8_t inb(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inl	inc/x86.h	/^inl(int port)$/;"	f	signature:(int port)
inl	inc/x86.h	/^static __inline uint32_t inl(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insb	inc/x86.h	/^static __inline void insb(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^static __inline void insl(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^static __inline void insw(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	signature:(void *addr)
invlpg	inc/x86.h	/^static __inline void invlpg(void *addr) __attribute__((always_inline));$/;"	p	signature:(void *addr)
inw	inc/x86.h	/^inw(int port)$/;"	f	signature:(int port)
inw	inc/x86.h	/^static __inline uint16_t inw(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
ipc_find_env	inc/lib.h	/^envid_t	ipc_find_env(enum EnvType type);$/;"	p	signature:(enum EnvType type)
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f	signature:(enum EnvType type)
ipc_recv	inc/lib.h	/^int32_t ipc_recv(envid_t *from_env_store, void *pg, int *perm_store);$/;"	p	signature:(envid_t *from_env_store, void *pg, int *perm_store)
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f	signature:(envid_t *from_env_store, void *pg, int *perm_store)
ipc_send	inc/lib.h	/^void	ipc_send(envid_t to_env, uint32_t value, void *pg, int perm);$/;"	p	signature:(envid_t to_env, uint32_t value, void *pg, int perm)
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f	signature:(envid_t to_env, uint32_t val, void *pg, int perm)
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f	signature:(uint16_t mask)
irq_setmask_8259A	kern/picirq.h	/^void irq_setmask_8259A(uint16_t mask);$/;"	p	signature:(uint16_t mask)
iscons	inc/stdio.h	/^int	iscons(int fd);$/;"	p	signature:(int fd)
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	signature:(int fdnum)
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:	signature:(void)
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	signature:(void)
kbd_intr	kern/console.h	/^void kbd_intr(void); \/\/ irq 1$/;"	p	signature:(void)
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:	signature:(void)
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kill	gradelib.py	/^    def kill(self):$/;"	f	access:public
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/cpu.h	/^void lapic_eoi(void);$/;"	p	signature:(void)
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f	signature:(void)
lapic_init	kern/cpu.h	/^void lapic_init(void);$/;"	p	signature:(void)
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f	signature:(void)
lapic_ipi	kern/cpu.h	/^void lapic_ipi(int vector);$/;"	p	signature:(int vector)
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f	signature:(int vector)
lapic_startap	kern/cpu.h	/^void lapic_startap(uint8_t apicid, uint32_t addr);$/;"	p	signature:(uint8_t apicid, uint32_t addr)
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f	signature:(uint8_t apicid, uint32_t addr)
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:	access:public
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:	signature:(int index, int value)
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr0	inc/x86.h	/^static __inline void lcr0(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr3	inc/x86.h	/^static __inline void lcr3(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr4	inc/x86.h	/^static __inline void lcr4(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
len	obj/kern/kernel.asm	/^	len = ROUNDUP(len, PGSIZE);$/;"	d
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:	access:public
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:	access:public
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	signature:(void *p)
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	signature:(void *p)
lidt	inc/x86.h	/^static __inline void lidt(void *p) __attribute__((always_inline));$/;"	p	signature:(void *p)
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	signature:(uint16_t sel)
lldt	inc/x86.h	/^static __inline void lldt(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:	signature:(struct Env *e, uint8_t *binary)
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f	signature:(void)
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	access:public
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:	signature:(int c)
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	signature:(uint16_t sel)
ltr	inc/x86.h	/^static __inline void ltr(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
make	gradelib.py	/^def make(*target):$/;"	f	access:public
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner	access:public
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f	access:public
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f	signature:(unsigned reg)
mc146818_read	kern/kclock.h	/^unsigned mc146818_read(unsigned reg);$/;"	p	signature:(unsigned reg)
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f	signature:(unsigned reg, unsigned datum)
mc146818_write	kern/kclock.h	/^void mc146818_write(unsigned reg, unsigned datum);$/;"	p	signature:(unsigned reg, unsigned datum)
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f	signature:(void)
mem_init	kern/pmap.h	/^void	mem_init(void);$/;"	p	signature:(void)
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:	signature:(void)
mem_init_mp	kern/pmap.c	/^static void mem_init_mp(void);$/;"	p	file:	signature:(void)
memcmp	inc/string.h	/^int	memcmp(const void *s1, const void *s2, size_t len);$/;"	p	signature:(const void *s1, const void *s2, size_t len)
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	signature:(const void *v1, const void *v2, size_t n)
memcpy	inc/string.h	/^void *	memcpy(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memfind	inc/string.h	/^void *	memfind(const void *s, int c, size_t len);$/;"	p	signature:(const void *s, int c, size_t len)
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	signature:(const void *s, int c, size_t n)
memmove	inc/string.h	/^void *	memmove(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memset	inc/string.h	/^void *	memset(void *dst, int c, size_t len);$/;"	p	signature:(void *dst, int c, size_t len)
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	signature:(void *v, int c, size_t n)
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:	signature:(int us)
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f	signature:(physaddr_t pa, size_t size)
mmio_map_region	kern/pmap.h	/^void *	mmio_map_region(physaddr_t pa, size_t size);$/;"	p	signature:(physaddr_t pa, size_t size)
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_backtrace	kern/monitor.h	/^int mon_backtrace(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.h	/^int mon_help(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.h	/^int mon_kerninfo(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
monitor	kern/monitor.h	/^void monitor(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp::checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:	access:public
mp::imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:	access:public
mp::length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:	access:public
mp::physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:	access:public
mp::reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:	access:public
mp::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:	access:public
mp::specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:	access:public
mp::type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:	access:public
mp_init	kern/cpu.h	/^void mp_init(void);$/;"	p	signature:(void)
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f	signature:(void)
mp_main	kern/init.c	/^mp_main(void)$/;"	f	signature:(void)
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconf::checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:	access:public
mpconf::entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:	access:public
mpconf::entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:	access:public
mpconf::lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:	access:public
mpconf::length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:	access:public
mpconf::oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:	access:public
mpconf::oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:	access:public
mpconf::product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:	access:public
mpconf::reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:	access:public
mpconf::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:	access:public
mpconf::version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:	access:public
mpconf::xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:	access:public
mpconf::xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:	access:public
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:	signature:(struct mp **pmp)
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpproc::apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:	access:public
mpproc::feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:	access:public
mpproc::flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:	access:public
mpproc::reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:	access:public
mpproc::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:	access:public
mpproc::type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:	access:public
mpproc::version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:	access:public
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:	signature:(void)
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:	signature:(physaddr_t a, int len)
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	access:public
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:	signature:(int r)
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:	access:public
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:	access:public
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	71;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	signature:(int port, uint8_t data)
outb	inc/x86.h	/^static __inline void outb(int port, uint8_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint8_t data)
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	signature:(int port, uint32_t data)
outl	inc/x86.h	/^static __inline void outl(int port, uint32_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint32_t data)
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsb	inc/x86.h	/^static __inline void outsb(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^static __inline void outsl(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^static __inline void outsw(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	signature:(int port, uint16_t data)
outw	inc/x86.h	/^static __inline void outw(int port, uint16_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint16_t data)
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
p_hdr	obj/kern/kernel.asm	/^	p_hdr = (struct Proghdr *) ((uint8_t*) elf_hdr + elf_hdr->e_phoff);$/;"	d
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
p_s	obj/kern/kernel.asm	/^		p_s = page_insert(e->env_pgdir, pp, va, PTE_U|PTE_W);$/;"	d
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f	signature:(physaddr_t pa)
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f	signature:(int alloc_flags)
page_alloc	kern/pmap.h	/^struct PageInfo *page_alloc(int alloc_flags);$/;"	p	signature:(int alloc_flags)
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f	signature:(struct PageInfo* pp)
page_decref	kern/pmap.h	/^void	page_decref(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
page_fault_handler	kern/trap.h	/^void page_fault_handler(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_free	kern/pmap.h	/^void	page_free(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f	signature:(void)
page_init	kern/pmap.h	/^void	page_init(void);$/;"	p	signature:(void)
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_insert	kern/pmap.h	/^int	page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm);$/;"	p	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_lookup	kern/pmap.h	/^struct PageInfo *page_lookup(pde_t *pgdir, void *va, pte_t **pte_store);$/;"	p	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
page_remove	kern/pmap.h	/^void	page_remove(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo *)boot_alloc( sizeof(struct PageInfo) * npages);$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	access:public
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/kern/kernel.asm	/^	perm = perm|PTE_U|PTE_P;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f	signature:(pde_t *pgdir, const void *va, int create)
pgdir_walk	kern/pmap.h	/^pte_t *pgdir_walk(pde_t *pgdir, const void *va, int create);$/;"	p	signature:(pde_t *pgdir, const void *va, int create)
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:	signature:(struct UTrapframe *utf)
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:	signature:(struct UTrapframe *utf)
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:	access:public
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f	signature:(void)
pic_init	kern/picirq.h	/^void pic_init(void);$/;"	p	signature:(void)
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f	access:public
pp	obj/kern/kernel.asm	/^		pp = page_alloc(1);$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f	access:public
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f	signature:(void)
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f	signature:(struct PushRegs *regs)
print_regs	kern/trap.h	/^void print_regs(struct PushRegs *regs);$/;"	p	signature:(struct PushRegs *regs)
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
print_trapframe	kern/trap.h	/^void print_trapframe(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printbuf::buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
printbuf::cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:	access:public
printbuf::idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
printf	inc/stdio.h	/^int	printf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
printfmt	inc/stdio.h	/^void	printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	file:	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:	signature:(void (*putch)(int, void*), void *putdat, unsigned long long num, unsigned base, int width, int padc)
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:	access:public
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pt_kva	obj/kern/kernel.asm	/^		pt_kva = (void *) KADDR(PTE_ADDR(*pt));$/;"	d
pt_kva	obj/kern/kernel.asm	/^		pt_kva = (void *) page2kva(newpt);$/;"	d
pte	obj/kern/kernel.asm	/^	pte = pgdir_walk(env->env_pgdir, (void *)idx_va, 0);$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:	signature:(int ch, int *cnt)
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:	signature:(int ch, struct printbuf *b)
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	signature:(void)
rcr0	inc/x86.h	/^static __inline uint32_t rcr0(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	signature:(void)
rcr2	inc/x86.h	/^static __inline uint32_t rcr2(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	signature:(void)
rcr3	inc/x86.h	/^static __inline uint32_t rcr3(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	signature:(void)
rcr4	inc/x86.h	/^static __inline uint32_t rcr4(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	signature:(void)
read_ebp	inc/x86.h	/^static __inline uint32_t read_ebp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	signature:(void)
read_eflags	inc/x86.h	/^static __inline uint32_t read_eflags(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	signature:(void)
read_esp	inc/x86.h	/^static __inline uint32_t read_esp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	signature:(void)
read_tsc	inc/x86.h	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	p	signature:(void)
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	inc/lib.h	/^char*	readline(const char *buf);$/;"	p	signature:(const char *buf)
readline	inc/stdio.h	/^char*	readline(const char *prompt);$/;"	p	signature:(const char *prompt)
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	signature:(const char *prompt)
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	signature:(void *dst, uint32_t offset)
readsect	boot/main.c	/^void readsect(void*, uint32_t);$/;"	p	file:	signature:(void*, uint32_t)
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	signature:(uint32_t pa, uint32_t count, uint32_t offset)
readseg	boot/main.c	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	p	file:
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:	signature:(struct Env *e, void *va, size_t len)
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	access:public
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:	access:public
regs	user/faultregs.c	/^struct regs$/;"	s	file:
regs::eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:	access:public
regs::eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:	access:public
regs::esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:	access:public
regs::regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:	access:public
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:	access:public
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:	access:public
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:	access:public
reset_fs	gradelib.py	/^def reset_fs():$/;"	f	access:public
result	obj/kern/kernel.asm	/^	result = nextfree;$/;"	d
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon1	file:	access:public
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner	access:public
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu	access:public
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	access:public
run_tests	gradelib.py	/^def run_tests():$/;"	f	access:public
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:	signature:(char *buf, struct Trapframe *tf)
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f	access:public
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	access:public
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f	signature:(void)
sched_halt	kern/sched.c	/^void sched_halt(void);$/;"	p	file:	signature:(void)
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f	signature:(void)
sched_yield	kern/sched.h	/^void sched_yield(void) __attribute__((noreturn));$/;"	p	signature:(void)
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:	signature:(void)
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	signature:(void)
serial_intr	kern/console.h	/^void serial_intr(void); \/\/ irq 4$/;"	p	signature:(void)
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:	signature:(void)
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:	signature:(int c)
set_pgfault_handler	inc/lib.h	/^void	set_pgfault_handler(void (*handler)(struct UTrapframe *utf));$/;"	p	signature:(void (*handler)(struct UTrapframe *utf))
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f	signature:(void (*handler)(struct UTrapframe *utf))
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	access:public
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	access:public
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	access:public
sfork	inc/lib.h	/^envid_t	sfork(void);	\/\/ Challenge!$/;"	p	signature:(void)
sfork	lib/fork.c	/^sfork(void)$/;"	f	signature:(void)
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f	access:public
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:	access:public
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
snprintf	inc/stdio.h	/^int	snprintf(char *str, int size, const char *fmt, ...);$/;"	p	signature:(char *str, int size, const char *fmt, ...)
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	signature:(char *buf, int n, const char *fmt, ...)
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:	access:public
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f	signature:(struct spinlock *lk)
spin_lock	kern/spinlock.h	/^void spin_lock(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f	signature:(struct spinlock *lk)
spin_unlock	kern/spinlock.h	/^void spin_unlock(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
spinlock::cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo	access:public
spinlock::locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	access:public
spinlock::name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	access:public
spinlock::pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	access:public
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintbuf::buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:	signature:(int ch, struct sprintbuf *b)
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:	signature:(const struct Stab *stabs, int *region_left, int *region_right, int type, uintptr_t addr)
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:	access:public
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:	access:public
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	access:public
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f	access:public
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f	access:public
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	inc/string.h	/^char *	strcat(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strchr	inc/string.h	/^char *	strchr(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strcmp	inc/string.h	/^int	strcmp(const char *s1, const char *s2);$/;"	p	signature:(const char *s1, const char *s2)
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	signature:(const char *p, const char *q)
strcpy	inc/string.h	/^char *	strcpy(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strfind	inc/string.h	/^char *	strfind(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strlcpy	inc/string.h	/^size_t	strlcpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	signature:(char *dst, const char *src, size_t size)
strlen	inc/string.h	/^int	strlen(const char *s);$/;"	p	signature:(const char *s)
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	signature:(const char *s)
strncmp	inc/string.h	/^int	strncmp(const char *s1, const char *s2, size_t size);$/;"	p	signature:(const char *s1, const char *s2, size_t size)
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	signature:(const char *p, const char *q, size_t n)
strncpy	inc/string.h	/^char *	strncpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	signature:(char *dst, const char *src, size_t size)
strnlen	inc/string.h	/^int	strnlen(const char *s, size_t size);$/;"	p	signature:(const char *s, size_t size)
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	signature:(const char *s, size_t size)
strtol	inc/string.h	/^long	strtol(const char *s, char **endptr, int base);$/;"	p	signature:(const char *s, char **endptr, int base)
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	signature:(const char *s, char **endptr, int base)
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:	signature:(void *addr, int len)
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sys_cgetc	inc/lib.h	/^int	sys_cgetc(void);$/;"	p	signature:(void)
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:	signature:(void)
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f	signature:(void)
sys_cputs	inc/lib.h	/^void	sys_cputs(const char *string, size_t len);$/;"	p	signature:(const char *string, size_t len)
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:	signature:(const char *s, size_t len)
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	signature:(const char *s, size_t len)
sys_env_destroy	inc/lib.h	/^int	sys_env_destroy(envid_t);$/;"	p	signature:(envid_t)
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:	signature:(envid_t envid)
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	signature:(envid_t envid)
sys_env_set_pgfault_upcall	inc/lib.h	/^int	sys_env_set_pgfault_upcall(envid_t env, void *upcall);$/;"	p	signature:(envid_t env, void *upcall)
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:	signature:(envid_t envid, void *func)
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f	signature:(envid_t envid, void *upcall)
sys_env_set_status	inc/lib.h	/^int	sys_env_set_status(envid_t env, int status);$/;"	p	signature:(envid_t env, int status)
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:	signature:(envid_t envid, int status)
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	signature:(envid_t envid, int status)
sys_exofork	inc/lib.h	/^static envid_t sys_exofork(void);$/;"	p	signature:(void)
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f	signature:(void)
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:	signature:(void)
sys_getenvid	inc/lib.h	/^envid_t	sys_getenvid(void);$/;"	p	signature:(void)
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:	signature:(void)
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f	signature:(void)
sys_ipc_recv	inc/lib.h	/^int	sys_ipc_recv(void *rcv_pg);$/;"	p	signature:(void *rcv_pg)
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:	signature:(void *dstva)
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	signature:(void *dstva)
sys_ipc_try_send	inc/lib.h	/^int	sys_ipc_try_send(envid_t to_env, uint32_t value, void *pg, int perm);$/;"	p	signature:(envid_t to_env, uint32_t value, void *pg, int perm)
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:	signature:(envid_t envid, uint32_t value, void *srcva, unsigned perm)
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f	signature:(envid_t envid, uint32_t value, void *srcva, int perm)
sys_page_alloc	inc/lib.h	/^int	sys_page_alloc(envid_t env, void *pg, int perm);$/;"	p	signature:(envid_t env, void *pg, int perm)
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:	signature:(envid_t envid, void *va, int perm)
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	signature:(envid_t envid, void *va, int perm)
sys_page_map	inc/lib.h	/^int	sys_page_map(envid_t src_env, void *src_pg,$/;"	p	signature:(envid_t src_env, void *src_pg, envid_t dst_env, void *dst_pg, int perm)
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:	signature:(envid_t srcenvid, void *srcva, envid_t dstenvid, void *dstva, int perm)
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f	signature:(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)
sys_page_unmap	inc/lib.h	/^int	sys_page_unmap(envid_t env, void *pg);$/;"	p	signature:(envid_t env, void *pg)
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:	signature:(envid_t envid, void *va)
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	signature:(envid_t envid, void *va)
sys_r	obj/kern/kernel.asm	/^		sys_r = sys_cgetc(); break;$/;"	d
sys_r	obj/kern/kernel.asm	/^		sys_r = sys_env_destroy((envid_t) a1); break;$/;"	d
sys_r	obj/kern/kernel.asm	/^		sys_r = sys_getenvid(); break;$/;"	d
sys_r	obj/kern/kernel.asm	/^		sys_r = syscall( tf->tf_regs.reg_eax,$/;"	d
sys_yield	inc/lib.h	/^void	sys_yield(void);$/;"	p	signature:(void)
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:	signature:(void)
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f	signature:(void)
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	signature:(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall	kern/syscall.h	/^int32_t syscall(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5);$/;"	p	signature:(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:	signature:(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f	access:public
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f	access:public
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f	access:public
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f	access:public
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f	access:public
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f	access:public
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f	access:public
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f	access:public
test_faultread	grade-lab4	/^def test_faultread():$/;"	f	access:public
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f	access:public
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f	access:public
test_forktree	grade-lab4	/^def test_forktree():$/;"	f	access:public
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f	access:public
test_primes	grade-lab4	/^def test_primes():$/;"	f	access:public
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f	access:public
test_spin	grade-lab4	/^def test_spin():$/;"	f	access:public
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f	access:public
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/user/badsegment.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = envs+ENVX(sys_getenvid()); $/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
tlb_invalidate	kern/pmap.h	/^void	tlb_invalidate(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
tlbflush	inc/x86.h	/^static __inline void tlbflush(void) __attribute__((always_inline));$/;"	p	signature:(void)
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	signature:(void)
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:	signature:(struct Trapframe *tf)
trap_init	kern/trap.c	/^trap_init(void)$/;"	f	signature:(void)
trap_init	kern/trap.h	/^void trap_init(void);$/;"	p	signature:(void)
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f	signature:(void)
trap_init_percpu	kern/trap.h	/^void trap_init_percpu(void);$/;"	p	signature:(void)
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:	signature:(int trapno)
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon5
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:	access:public
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:	access:public
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	inc/lib.h	/^void	umain(int argc, char **argv);$/;"	p	signature:(int argc, char **argv)
umain	lib/libmain.c	/^extern void umain(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f	signature:(void)
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_assert	kern/pmap.h	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	kern/pmap.h	/^int	user_mem_check(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = idx_va;$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^		user_mem_check_addr = idx_va;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner	access:public
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	access:public
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	access:public
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	access:public
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	access:public
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	access:public
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs	access:public
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/kern/kernel.asm	/^	va = ROUNDDOWN(va, PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	inc/stdio.h	/^int	vcprintf(const char *fmt, va_list);$/;"	p	signature:(const char *fmt, va_list)
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:	access:public
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:	access:public
vfprintf	inc/stdio.h	/^int	vfprintf(int fd, const char *fmt, va_list);$/;"	p	signature:(int fd, const char *fmt, va_list)
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	inc/stdio.h	/^void	vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list)
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)
vsnprintf	inc/stdio.h	/^int	vsnprintf(char *str, int size, const char *fmt, va_list);$/;"	p	signature:(char *str, int size, const char *fmt, va_list)
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	signature:(char *buf, int n, const char *fmt, va_list ap)
wait	gradelib.py	/^    def wait(self):$/;"	f	access:public
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	signature:(void)
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon1	file:	access:public
write_eflags	inc/x86.h	/^static __inline void write_eflags(uint32_t eflags) __attribute__((always_inline));$/;"	p	signature:(uint32_t eflags)
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	signature:(uint32_t eflags)
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:	access:public
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	signature:(volatile uint32_t *addr, uint32_t newval)
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:	access:public
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
